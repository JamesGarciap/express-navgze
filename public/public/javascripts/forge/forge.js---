var FORGE=FORGE||{};FORGE.VERSION='0.9.4';FORGE.VIEWERS=[];FORGE.DEBUG=false;FORGE.WARNING=true;FORGE.BaseObject=function(className)
{this._uid="";this._tags=null;this._data=null;this._onDestroy=null;this._alive=true;this._debug=false;this._warning=false;this._logs=null;this._className=className||"BaseObject";this._inheritance=["BaseObject"];};FORGE.BaseObject.prototype.constructor=FORGE.BaseObject;FORGE.BaseObject.prototype._register=function()
{this.log("register");if(typeof this._uid!=="string"||this._uid==="")
{this._uid=FORGE.UID.generate();}
var registered=FORGE.UID.register(this);if(this._tags!==null)
{if(typeof this._tags==="string")
{this._tags=[this._tags];}
if(Array.isArray(this._tags)===true)
{FORGE.Tags.register(this);}}
return registered;};FORGE.BaseObject.prototype._unregister=function()
{this.log("unregister");if(this._uid!==""&&FORGE.UID.exists(this._uid)===true)
{FORGE.UID.unregister(this);}};FORGE.BaseObject.prototype._stdout=function(value,mode)
{var m=mode||"log";var consoleLog=[];if(FORGE.Device.chrome===true||FORGE.Device.firefox===true)
{consoleLog=["%c[ForgeJS]%c "
+"FORGE."+this._className+": "+value+" %c(@"
+window.performance.now().toFixed(2)+"ms)","background: #e2edff; color: #4286f4; font-weight: 700;","font-weight: 400;","color: #AAA;"];}
else
{consoleLog=["[ForgeJS] FORGE."+this._className+": "+value+" (@"
+window.performance.now().toFixed(2)+"ms)"];}
console[m].apply(console,consoleLog);if(typeof value==="object"&&value!==null)
{console[m](value);}};FORGE.BaseObject.prototype.log=function(value)
{if(window["FORGE"]["DEBUG"]===true||window["FORGE"][this._className]["DEBUG"]===true||this._debug===true)
{this._stdout(value,"log");if(this._logs===null)
{this._logs=[];}
this._logs.push(value);}};FORGE.BaseObject.prototype.warn=function(value)
{if(window["FORGE"]["WARNING"]===true||window["FORGE"][this._className]["WARNING"]===true||this._warning===true)
{this._stdout(value,"warn");}};FORGE.BaseObject.prototype.destroy=function()
{if(this._alive===false)
{return;}
this.log("destroy");this._unregister();if(this._onDestroy!==null)
{this._onDestroy.dispatch();this._onDestroy.destroy();this._onDestroy=null;}
this._data=null;this._alive=false;};Object.defineProperty(FORGE.BaseObject.prototype,"className",{get:function()
{return this._className;}});Object.defineProperty(FORGE.BaseObject.prototype,"uid",{get:function()
{return this._uid;}});Object.defineProperty(FORGE.BaseObject.prototype,"tags",{get:function()
{return this._tags;}});Object.defineProperty(FORGE.BaseObject.prototype,"alive",{get:function()
{return this._alive;}});Object.defineProperty(FORGE.BaseObject.prototype,"data",{get:function()
{return this._data;},set:function(value)
{this._data=value;}});Object.defineProperty(FORGE.BaseObject.prototype,"debug",{get:function()
{return this._debug;},set:function(value)
{this._debug=Boolean(value);if(this._debug===true)
{console.log("Enabling debug for a FORGE."+this._className+" instance :");console.log(this);}}});Object.defineProperty(FORGE.BaseObject.prototype,"warning",{get:function()
{return this._warning;},set:function(value)
{this._warning=Boolean(value);if(this._warning===true)
{console.log("Enabling warning for a FORGE."+this._className+" instance :");console.log(this);}}});Object.defineProperty(FORGE.BaseObject.prototype,"onDestroy",{get:function()
{if(this._onDestroy===null)
{this._onDestroy=new FORGE.EventDispatcher(this);}
return this._onDestroy;}});FORGE.Viewer=function(parent,config,callbacks)
{FORGE.BaseObject.call(this,"Viewer");this._parent=parent;this._mainConfig=config;this._config=null;this._display=null;this._relative=null;this._container=null;this._canvasContainer=null;this._domHotspotContainer=null;this._domHotspotStyle=null;this._pluginContainer=null;this._canvas=null;this._system=null;this._audio=null;this._playlists=null;this._hotspots=null;this._actions=null;this._director=null;this._controllers=null;this._postProcessing=null;this._story=null;this._history=null;this._load=null;this._cache=null;this._keyboard=null;this._gyroscope=null;this._gamepad=null;this._plugins=null;this._raf=null;this._clock=null;this._tween=null;this._i18n=null;this._renderManager=null;this._paused=false;this._ready=false;this._onReady=null;this._onPause=null;this._onResume=null;this._onConfigLoadComplete=null;this._callbacks=callbacks||null;var bootBind=this._boot.bind(this);window.setTimeout(bootBind,0);};FORGE.Viewer.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Viewer.prototype.constructor=FORGE.Viewer;FORGE.Viewer.DEFAULT_CONFIG={background:"#000",autoResume:true,autoPause:true};FORGE.Viewer.prototype._boot=function(callback)
{if(this._alive===false)
{return;}
this._uid="FORGE-instance-"+String(FORGE.VIEWERS.length);FORGE.VIEWERS.push(this._uid);this._register();this.log("FORGE.Viewer.boot();");this._display=new FORGE.DisplayList(this);this._createContainers();this._createCanvas();this._system=new FORGE.System(this);this._clock=new FORGE.Clock(this);this._audio=new FORGE.SoundManager(this);this._raf=new FORGE.RequestAnimationFrame(this);this._i18n=new FORGE.LocaleManager(this);this._story=new FORGE.Story(this);this._history=new FORGE.History(this);this._renderManager=new FORGE.RenderManager(this);this._controllers=new FORGE.ControllerManager(this);this._playlists=new FORGE.PlaylistManager(this);this._plugins=new FORGE.PluginManager(this);this._hotspots=new FORGE.HotspotManager(this);this._actions=new FORGE.ActionManager(this);this._director=new FORGE.Director(this);this._postProcessing=new FORGE.PostProcessing(this);this._keyboard=new FORGE.Keyboard(this);this._gyroscope=new FORGE.Gyroscope(this);this._gamepad=new FORGE.GamepadsManager(this);this._cache=new FORGE.Cache(this);this._load=new FORGE.Loader(this);this._tween=new FORGE.TweenManager(this);this._system.boot();this._audio.boot();this._raf.boot();this._story.boot();this._playlists.boot();this._plugins.boot();this._hotspots.boot();this.log("ForgeJS "+FORGE.VERSION);if(typeof callback==="function")
{callback.call();}
if(this._callbacks!==null&&typeof this._callbacks.boot==="function")
{this._callbacks.boot.call();}
this._ready=true;if(this._onReady!==null)
{this._onReady.dispatch();}
this._loadConfig(this._mainConfig);};FORGE.Viewer.prototype._loadConfig=function(config)
{if(typeof config==="string")
{this._load.json(this._uid+"-configuration",config,this._mainConfigLoadComplete,this);}
else if(config!==null&&typeof config==="object")
{this._parseMainConfig(config);}};FORGE.Viewer.prototype._mainConfigLoadComplete=function(file)
{this.log("FORGE.Viewer._mainConfigLoadComplete();");var json=this._cache.get(FORGE.Cache.types.JSON,file.key);var config=(json.data);this._parseMainConfig(config);};FORGE.Viewer.prototype._parseMainConfig=function(config)
{this._mainConfig=config;this._parseConfig(config.viewer);if(typeof config.i18n!=="undefined")
{this._i18n.addConfig(config.i18n);}
this._history.addConfig(config.history);if(typeof config.audio!=="undefined")
{this._audio.addConfig(config.audio);}
if(typeof config.playlists!=="undefined")
{this._playlists.addConfig(config.playlists);}
if(typeof config.actions!=="undefined")
{this._actions.addConfig(config.actions);}
if(typeof config.director!=="undefined")
{this._director.load(config.director);}
if(typeof config.hotspots!=="undefined")
{this._hotspots.addTracks(config.hotspots);}
if(typeof config.postProcessing!=="undefined")
{this._postProcessing.addConfig(config.postProcessing);}
if(typeof config.plugins!=="undefined")
{this._plugins.addConfig(config.plugins);}
this._controllers.addConfig(config.controllers);if(typeof config.story!=="undefined")
{this._story.load(config.story);}
this._raf.start();if(this._onConfigLoadComplete!==null)
{this._onConfigLoadComplete.dispatch();}};FORGE.Viewer.prototype._parseConfig=function(config)
{this._config=(FORGE.Utils.extendSimpleObject(FORGE.Viewer.DEFAULT_CONFIG,config));};FORGE.Viewer.prototype._createContainers=function()
{if(typeof this._parent==="string"&&this._parent!=="")
{this._parent=document.getElementById(this._parent);}
if(typeof this._parent==="undefined"||this._parent===null||FORGE.Dom.isHtmlElement(this._parent)===false)
{throw"FORGE.Viewer.boot : Viewer parent is invalid";}
this._relative=document.createElement("div");this._relative.style.width="100%";this._relative.style.height="100%";this._relative.style.position="relative";this._parent.appendChild(this._relative);this._container=new FORGE.DisplayObjectContainer(this,null,null,(this._relative));this._container.id="FORGE-main-container-"+this._uid;this._canvasContainer=new FORGE.DisplayObjectContainer(this);this._canvasContainer.id="FORGE-canvas-container-"+this._uid;this._container.index=0;this._canvasContainer.maximize(true);this._container.addChild(this._canvasContainer);this._domHotspotContainer=new FORGE.DisplayObjectContainer(this);this._domHotspotContainer.id="FORGE-dom-hotspot-container-"+this._uid;this._container.index=0;this._domHotspotContainer.maximize(true);this._container.addChild(this._domHotspotContainer);this._domHotspotStyle=document.createElement("style");this._domHotspotStyle.type="text/css";document.head.appendChild(this._domHotspotStyle);this._pluginContainer=new FORGE.DisplayObjectContainer(this);this._pluginContainer.id="FORGE-plugin-container-"+this._uid;this._container.index=0;this._pluginContainer.maximize(true);this._container.addChild(this._pluginContainer);};FORGE.Viewer.prototype._createCanvas=function()
{this._canvas=new FORGE.Canvas(this);this._canvas.maximize(true);this._canvasContainer.addChild(this._canvas);};FORGE.Viewer.prototype._updateLogic=function()
{this._display.update();this._keyboard.update();this._gamepad.update();this._audio.update();this._plugins.update();this._tween.update();this._hotspots.update();this._controllers.update();this._renderManager.update();if(this._callbacks!==null&&typeof this._callbacks.update==="function")
{this._callbacks.update.call();}};FORGE.Viewer.prototype._updateRendering=function()
{if(this._callbacks!==null&&typeof this._callbacks.beforeRender==="function")
{this._callbacks.beforeRender.call();}
if(this._renderManager!==null)
{this._renderManager.render();}
if(this._callbacks!==null&&typeof this._callbacks.afterRender==="function")
{this._callbacks.afterRender.call();}};FORGE.Viewer.prototype.update=function(time)
{if(this._paused===true)
{return;}
this._clock.update(time);this._updateLogic();this._updateRendering();};FORGE.Viewer.prototype.pause=function(internal)
{if(this._paused===true)
{return;}
this._paused=true;if(internal!==true||(this._config!==null&&this._config.autoPause===true))
{this._audio.pauseAll();}
if(this._onPause!==null)
{this._onPause.dispatch({"internal":internal});}};FORGE.Viewer.prototype.resume=function(internal)
{if(this._paused===false)
{return;}
this._paused=false;if(internal!==true||(this._config!==null&&this._config.autoResume===true))
{this._audio.resumeAll();}
if(this._onResume!==null)
{this._onResume.dispatch({"internal":internal});}};FORGE.Viewer.prototype.destroy=function()
{if(this._raf!==null)
{this._raf.destroy();this._raf=null;}
if(this._system!==null)
{this._system.destroy();this._system=null;}
if(this._plugins!==null)
{this._plugins.destroy();this._plugins=null;}
if(this._load!==null)
{this._load.destroy();this._load=null;}
if(this._history!==null)
{this._history.destroy();this._history=null;}
if(this._clock!==null)
{this._clock.destroy();this._clock=null;}
if(this._controllers!==null)
{this._controllers.destroy();this._controllers=null;}
if(this._keyboard!==null)
{this._keyboard.destroy();this._keyboard=null;}
if(this._gyroscope!==null)
{this._gyroscope.destroy();this._gyroscope=null;}
if(this._gamepad!==null)
{this._gamepad.destroy();this._gamepad=null;}
if(this._hotspots!==null)
{this._hotspots.destroy();this._hotspots=null;}
if(this._director!==null)
{this._director.destroy();this._director=null;}
if(this._renderManager!==null)
{this._renderManager.destroy();this._renderManager=null;}
if(this._canvas!==null)
{this._canvas.destroy();this._canvas=null;}
if(this._canvasContainer!==null)
{this._canvasContainer.destroy();this._canvasContainer=null;}
if(this._domHotspotContainer!==null)
{this._domHotspotContainer.destroy();this._domHotspotContainer=null;}
if(this._pluginContainer!==null)
{this._pluginContainer.destroy();this._pluginContainer=null;}
if(this._container!==null)
{this._container.destroy();this._container=null;}
if(this._postProcessing!==null)
{this._postProcessing.destroy();this._postProcessing=null;}
if(this._actions!==null)
{this._actions.destroy();this._actions=null;}
if(this._display!==null)
{this._display.destroy();this._display=null;}
if(this._playlists!==null)
{this._playlists.destroy();this._playlists=null;}
if(this._audio!==null)
{this._audio.destroy();this._audio=null;}
if(this._story!==null)
{this._story.destroy();this._story=null;}
if(this._tween!==null)
{this._tween.destroy();this._tween=null;}
if(this._cache!==null)
{this._cache.destroy();this._cache=null;}
if(this._i18n!==null)
{this._i18n.destroy();this._i18n=null;}
this._parent=null;this._callbacks=null;if(this._onReady!==null)
{this._onReady.destroy();this._onReady=null;}
if(this._onPause!==null)
{this._onPause.destroy();this._onPause=null;}
if(this._onResume!==null)
{this._onResume.destroy();this._onResume=null;}
if(this._onConfigLoadComplete!==null)
{this._onConfigLoadComplete.destroy();this._onConfigLoadComplete=null;}
FORGE.VIEWERS.splice(this._uid,1);FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Viewer.prototype,"ready",{get:function()
{return this._ready;}});Object.defineProperty(FORGE.Viewer.prototype,"mainConfig",{get:function()
{return this._mainConfig;}});Object.defineProperty(FORGE.Viewer.prototype,"config",{get:function()
{return this._config;}});Object.defineProperty(FORGE.Viewer.prototype,"parent",{get:function()
{return this._parent;}});Object.defineProperty(FORGE.Viewer.prototype,"display",{get:function()
{return this._display;}});Object.defineProperty(FORGE.Viewer.prototype,"fullscreen",{get:function()
{return this._container.isFullscreen();},set:function(value)
{if(typeof value!=="boolean"||this._container.isFullscreen()===value)
{return;}
this._container.fullscreen=value;}});Object.defineProperty(FORGE.Viewer.prototype,"container",{get:function()
{return this._container;}});Object.defineProperty(FORGE.Viewer.prototype,"canvasContainer",{get:function()
{return this._canvasContainer;}});Object.defineProperty(FORGE.Viewer.prototype,"canvas",{get:function()
{return this._canvas;}});Object.defineProperty(FORGE.Viewer.prototype,"domHotspotContainer",{get:function()
{return this._domHotspotContainer;}});Object.defineProperty(FORGE.Viewer.prototype,"domHotspotStyle",{get:function()
{return this._domHotspotStyle;}});Object.defineProperty(FORGE.Viewer.prototype,"pluginContainer",{get:function()
{return this._pluginContainer;}});Object.defineProperty(FORGE.Viewer.prototype,"raf",{get:function()
{return this._raf;}});Object.defineProperty(FORGE.Viewer.prototype,"audio",{get:function()
{return this._audio;}});Object.defineProperty(FORGE.Viewer.prototype,"playlists",{get:function()
{return this._playlists;}});Object.defineProperty(FORGE.Viewer.prototype,"hotspots",{get:function()
{return this._hotspots;}});Object.defineProperty(FORGE.Viewer.prototype,"actions",{get:function()
{return this._actions;}});Object.defineProperty(FORGE.Viewer.prototype,"director",{get:function()
{return this._director;}});Object.defineProperty(FORGE.Viewer.prototype,"story",{get:function()
{return this._story;}});Object.defineProperty(FORGE.Viewer.prototype,"history",{get:function()
{return this._history;}});Object.defineProperty(FORGE.Viewer.prototype,"load",{get:function()
{return this._load;}});Object.defineProperty(FORGE.Viewer.prototype,"cache",{get:function()
{return this._cache;}});Object.defineProperty(FORGE.Viewer.prototype,"plugins",{get:function()
{return this._plugins;}});Object.defineProperty(FORGE.Viewer.prototype,"clock",{get:function()
{return this._clock;}});Object.defineProperty(FORGE.Viewer.prototype,"tween",{get:function()
{return this._tween;}});Object.defineProperty(FORGE.Viewer.prototype,"i18n",{get:function()
{return this._i18n;}});Object.defineProperty(FORGE.Viewer.prototype,"renderer",{get:function()
{return this._renderManager;}});Object.defineProperty(FORGE.Viewer.prototype,"view",{get:function()
{return this._renderManager.view;}});Object.defineProperty(FORGE.Viewer.prototype,"camera",{get:function()
{return this._renderManager.camera;}});Object.defineProperty(FORGE.Viewer.prototype,"controllers",{get:function()
{return this._controllers;}});Object.defineProperty(FORGE.Viewer.prototype,"postProcessing",{get:function()
{return this._postProcessing;}});Object.defineProperty(FORGE.Viewer.prototype,"keyboard",{get:function()
{return this._keyboard;}});Object.defineProperty(FORGE.Viewer.prototype,"gyroscope",{get:function()
{return this._gyroscope;}});Object.defineProperty(FORGE.Viewer.prototype,"gamepad",{get:function()
{return this._gamepad;}});Object.defineProperty(FORGE.Viewer.prototype,"width",{get:function()
{return this._container.width;},set:function(value)
{this._container.width=value;}});Object.defineProperty(FORGE.Viewer.prototype,"height",{get:function()
{return this._container.height;},set:function(value)
{this._container.height=value;}});Object.defineProperty(FORGE.Viewer.prototype,"onReady",{get:function()
{if(this._onReady===null)
{this._onReady=new FORGE.EventDispatcher(this);}
return this._onReady;}});Object.defineProperty(FORGE.Viewer.prototype,"onPause",{get:function()
{if(this._onPause===null)
{this._onPause=new FORGE.EventDispatcher(this);}
return this._onPause;}});Object.defineProperty(FORGE.Viewer.prototype,"onResume",{get:function()
{if(this._onResume===null)
{this._onResume=new FORGE.EventDispatcher(this);}
return this._onResume;}});Object.defineProperty(FORGE.Viewer.prototype,"onConfigLoadComplete",{get:function()
{if(this._onConfigLoadComplete===null)
{this._onConfigLoadComplete=new FORGE.EventDispatcher(this);}
return this._onConfigLoadComplete;}});FORGE.Tags=(function(c)
{var Tmp=c();Tmp.prototype=Object.create(FORGE.BaseObject.prototype);Tmp.prototype.constructor=Tmp;Tmp.prototype.register=function(object)
{if(typeof object==="object"&&typeof object.uid==="string"&&Array.isArray(object.tags))
{var uid=object.uid;var tags=object.tags;var tag;if(FORGE.UID.exists(uid)===true)
{for(var i=0,ii=tags.length;i<ii;i++)
{tag=tags[i];if(typeof tag!=="string")
{this.warn("Tags: An object has a tag that isn't a string!");continue;}
if(typeof this._allTags[tag]==="undefined")
{this._allTags[tag]=[];if(this._onRegister!==null)
{this._onRegister.dispatch({"tag":tag});}}
if(this._allTags[tag].indexOf(uid)===-1)
{this._allTags[tag].push(uid);}}}
else
{this.warn("Tags: The object you want to register in tags is not known by UID!");this.warn(object);}}
else
{this.warn("Tags: No uid or no tags on the object you try to register!");this.warn(object);}};Tmp.prototype.getUids=function(value,className)
{var uids=[];if(typeof value==="string")
{uids=this._allTags[value];}
else if(Array.isArray(value))
{var tag;for(var i=0,ii=value.length;i<ii;i++)
{tag=value[i];if(this.exists(tag)===true)
{uids.concat(this.get[tag]);}}}
if(typeof className==="string")
{uids=FORGE.UID.filterType(uids,className);}
return uids;};Tmp.prototype.get=function(value,className)
{if(typeof value==="string")
{return FORGE.UID.get(this._allTags[value],className);}
else if(Array.isArray(value))
{var uids=[];var tag;for(var i=0,ii=value.length;i<ii;i++)
{tag=value[i];if(this.exists(tag)===true)
{uids.concat(this.get[tag]);}}
return FORGE.UID.get(uids,className);}
return undefined;};Tmp.prototype.hasTypeOf=function(tag,className)
{if(this.exists(tag)===true)
{var uids=this._allTags[tag];for(var i=0,ii=this._allTags.length;i<ii;i++)
{if(FORGE.UID.isTypeOf(uids[i],className)===true)
{return true;}}}
return false;};Tmp.prototype.exists=function(tag)
{return(typeof this._allTags[tag]!=="undefined"&&this._allTags[tag]!==null);};Object.defineProperty(Tmp.prototype,"list",{get:function()
{return Object.keys(this._allTags);}});Object.defineProperty(Tmp.prototype,"onRegister",{get:function()
{if(this._onRegister===null)
{this._onRegister=new FORGE.EventDispatcher(this);}
return this._onRegister;}});return new Tmp();})(function()
{return function()
{this._allTags={};this._onRegister=null;FORGE.BaseObject.call(this,"Tags");};});FORGE.UID=(function(c)
{var Tmp=c();Tmp.prototype=Object.create(FORGE.BaseObject.prototype);Tmp.prototype.constructor=Tmp;Tmp.prototype.generate=function()
{var uid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c)
{var h=Math.random()*16|0;h=c=="x"?h:(h&0x3|0x8);return h.toString(16);});if(FORGE.UID.exists(uid)===false)
{return uid;}
else
{return FORGE.UID.generate();}};Tmp.prototype.validate=function(object)
{var uids=[];var validateRecursive=function(object)
{var uid;for(var i in object)
{if(i==="uid")
{uid=object[i];if(typeof uid==="string")
{if(FORGE.UID.exists(uid))
{throw"UID configuration not valid, uid "+uid+" already have an object binded to!";}
else if(uids.indexOf(uid)!==-1)
{throw"UID configuration not valid, uid "+uid+" is in double in config file!";}
else
{uids.push(object[i]);}}
else
{throw"Found a uid in configuration that is not a string!";}}
else if(typeof(object[i])==="object")
{validateRecursive(object[i]);}}
return true;};return validateRecursive(object);};Tmp.prototype.register=function(object)
{if(typeof object==="object"&&typeof object.uid==="string")
{var uid=object.uid;if(FORGE.UID.exists(uid)===false)
{this._objects[uid]=object;return true;}
else
{this.warn("The uid you want to register already exists!");this.warn(object);}}
else
{this.warn("No uid on the object you try to register!");this.warn(object);}
return false;};Tmp.prototype.unregister=function(object)
{if(typeof object==="object"&&typeof object.uid==="string")
{var uid=object.uid;this._objects[uid]=null;delete this._objects[uid];return;}
this.warn("No uid on the object you try to unregister!");};Tmp.prototype.getUids=function(className)
{if(typeof className==="undefined"||className===null)
{return Object.keys(this._objects);}
else
{return FORGE.UID.filterType(Object.keys(this._objects),className);}};Tmp.prototype.filterType=function(uids,className)
{var filter=function(uid)
{if(FORGE.UID.isTypeOf(uid,className))
{return true;}
return false;};return uids.filter(filter);};Tmp.prototype.get=function(value,className)
{if(typeof value==="undefined"||value===null)
{if(typeof className!=="string")
{return this._objects;}
value=Object.keys(this._objects);}
if(typeof value==="string")
{return this._objects[value];}
else if(Array.isArray(value))
{if(typeof className==="string")
{value=FORGE.UID.filterType(value,className);}
var result=[];var uid;for(var i=0,ii=value.length;i<ii;i++)
{uid=value[i];if(FORGE.UID.exists(uid)===true)
{result.push(this._objects[uid]);}}
return result;}
return undefined;};Tmp.prototype.isTypeOf=function(uid,className)
{var object=FORGE.UID.get(uid);return FORGE.Utils.isTypeOf(object,className);};Tmp.prototype.exists=function(uid)
{return(typeof this._objects[uid]!=="undefined"&&this._objects[uid]!==null);};return new Tmp();})(function()
{return function()
{this._objects={};FORGE.BaseObject.call(this,"UID");};});FORGE.EventDispatcher=function(emitter,memorize)
{this._emitter=emitter;this._memorize=memorize||false;this._previousData=null;this._listeners=null;this._active=true;this._dispatched=false;FORGE.BaseObject.call(this,"EventDispatcher");};FORGE.EventDispatcher.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.EventDispatcher.prototype.constructor=FORGE.EventDispatcher;FORGE.EventDispatcher.prototype._addListener=function(listener,isOnce,context,priority)
{if(typeof listener!=="function")
{this.warn("You're trying to add an undefined listener");return;}
if(this.has(listener,context)===true)
{this.warn("You're trying to add a duplicate listener for this context");return;}
var lis=new FORGE.Listener(this,listener,isOnce,context,priority);this._registerListener(lis);if(this._memorize===true&&this._active===true&&this._dispatched===true)
{lis.execute(this._previousData);}
return listener;};FORGE.EventDispatcher.prototype._registerListener=function(listener)
{if(this._listeners===null)
{this._listeners=[];}
if(this._listeners.length===0)
{this._listeners.push(listener);return;}
var n=this._listeners.length;do
{n--;}
while(this._listeners[n]&&listener._priority<=this._listeners[n]._priority);this._listeners.splice(n+1,0,listener);};FORGE.EventDispatcher.prototype._indexOfListener=function(listener,context)
{if(this._listeners===null)
{return-1;}
if(typeof context==="undefined")
{context=null;}
var _listener;for(var i=0,ii=this._listeners.length;i<ii;i++)
{_listener=this._listeners[i];if(_listener.listener===listener&&_listener.context===context)
{return i;}}
return-1;};FORGE.EventDispatcher.prototype.add=function(listener,context,priority)
{this._addListener(listener,false,context,priority);};FORGE.EventDispatcher.prototype.addOnce=function(listener,context,priority)
{this._addListener(listener,true,context,priority);};FORGE.EventDispatcher.prototype.remove=function(listener,context)
{var i=this._indexOfListener(listener,context);if(i!==-1)
{this._listeners[i].destroy();this._listeners.splice(i,1);}};FORGE.EventDispatcher.prototype.has=function(listener,context)
{return this._indexOfListener(listener,context)!==-1;};FORGE.EventDispatcher.prototype.dispatch=function(data,async)
{this._dispatched=true;if(this._memorize===true)
{this._previousData=data===undefined?null:data;}
if(this._active===false||this._listeners===null)
{return;}
var n=this._listeners.length;while(n--)
{this._listeners[n].execute(data,async);}};FORGE.EventDispatcher.prototype.destroy=function()
{if(this._alive===false)
{return;}
if(this._listeners!==null)
{var n=this._listeners.length;while(n--)
{this._listeners[n].destroy();}
this._listeners=null;}
this._emitter=null;this._previousData=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.EventDispatcher.prototype,"emitter",{get:function()
{return this._emitter;}});Object.defineProperty(FORGE.EventDispatcher.prototype,"memorize",{get:function()
{return this._memorize;},set:function(value)
{this._memorize=Boolean(value);}});Object.defineProperty(FORGE.EventDispatcher.prototype,"active",{get:function()
{return this._active;},set:function(value)
{this._active=Boolean(value);}});FORGE.Event=function(emitter,data)
{this._emitter=emitter;this._data=data||null;};FORGE.Event.prototype.constructor=FORGE.Event;Object.defineProperty(FORGE.Event.prototype,"emitter",{get:function()
{return this._emitter;}});Object.defineProperty(FORGE.Event.prototype,"data",{get:function()
{return this._data;}});FORGE.Listener=function(dispatcher,listener,isOnce,context,priority)
{this._dispatcher=dispatcher;this._listener=listener;this._context=context||null;this._isOnce=isOnce||false;this._priority=priority||0;this._callCount=0;this._active=true;this._asyncBusy=false;};FORGE.Listener.prototype.constructor=FORGE.Listener;FORGE.Listener.prototype._execute=function(data)
{var event=new FORGE.Event(this._dispatcher.emitter,data);this._listener.call(this._context,event);this._callCount++;if(this._isOnce===true)
{this.detach();}
this._asyncBusy=false;};FORGE.Listener.prototype.execute=function(data,async)
{if(this._active===true&&this._listener!==null)
{if(async===true&&this._asyncBusy===false)
{this._asyncBusy=true;var executeBind=this._execute.bind(this,data);window.setTimeout(executeBind,0);}
else if(async!==true)
{this._execute(data);}}};FORGE.Listener.prototype.detach=function()
{return this._dispatcher.remove(this._listener,this._context);};FORGE.Listener.prototype.destroy=function()
{this._dispatcher=null;this._listener=null;this._context=null;};Object.defineProperty(FORGE.Listener.prototype,"listener",{get:function()
{return this._listener;}});Object.defineProperty(FORGE.Listener.prototype,"context",{get:function()
{return this._context;}});Object.defineProperty(FORGE.Listener.prototype,"priority",{get:function()
{return this._priority;}});Object.defineProperty(FORGE.Listener.prototype,"callCount",{get:function()
{return this._callCount;}});FORGE.Story=function(viewer)
{this._viewer=viewer;this._config=null;this._name=null;this._slug=null;this._description=null;this._default="";this._scenes=null;this._sceneUid="";this._groups=null;this._groupUid="";this._events={};this._onReady=null;this._onSceneLoadRequest=null;this._onSceneLoadStart=null;this._onSceneLoadProgress=null;this._onSceneLoadComplete=null;this._onSceneLoadError=null;this._onScenePreview=null;this._onGroupChange=null;FORGE.BaseObject.call(this,"Story");};FORGE.Story.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Story.prototype.constructor=FORGE.Story;FORGE.Story.prototype._configLoadComplete=function(file)
{this.log("FORGE.Story.loadComplete();");var json=this._viewer.cache.get(FORGE.Cache.types.JSON,file.key);var config=(json.data);this._parseConfig(config);};FORGE.Story.prototype._parseConfig=function(config)
{if(FORGE.UID.validate(config)!==true)
{throw"Story configuration is not valid!";}
this._config=config;this._uid=this._config.uid;this._register();this._default=this._config.default;this._name.key=this._config.name;this._slug.key=this._config.slug;this._description.key=this._config.description;if(typeof this._config.scenes!=="undefined"&&this._config.scenes.length>0)
{this._createScenes(this._config.scenes);}
if(typeof this._config.groups!=="undefined"&&this._config.groups.length>0)
{this._createGroups(this._config.groups);}
if(typeof this._config.events==="object"&&this._config.events!==null)
{this._createEvents(this._config.events);}
this._checkStoryScenes();};FORGE.Story.prototype._createEvents=function(events)
{var event;for(var e in events)
{event=new FORGE.ActionEventDispatcher(this._viewer,e);event.addActions(events[e]);this._events[e]=event;}};FORGE.Story.prototype._clearEvents=function()
{for(var e in this._events)
{this._events[e].destroy();this._events[e]=null;}};FORGE.Story.prototype._checkStoryScenes=function()
{if(typeof this._config.scenes==="undefined"||this._scenes.length===this._config.scenes.length)
{this._setStoryReady();}};FORGE.Story.prototype._setStoryReady=function()
{if(this._onReady!==null)
{this._onReady.dispatch();}
if(FORGE.Utils.isTypeOf(this._events.onReady,"ActionEventDispatcher")===true)
{this._events.onReady.dispatch();}
var hashParameters=FORGE.URL.parse()["hashParameters"];if(hashParameters!==null&&typeof hashParameters.uid==="string"&&FORGE.UID.exists(hashParameters.uid))
{this._loadUid(hashParameters.uid);}
else if(this._default!==""&&this._default!==null&&FORGE.UID.exists(this._default))
{this._loadUid(this._default);}
else
{this.loadScene(0);}};FORGE.Story.prototype._loadUid=function(uid)
{if(FORGE.UID.isTypeOf(uid,"Scene")===true||FORGE.UID.isTypeOf(uid,"Group")===true)
{FORGE.UID.get(uid).load();}};FORGE.Story.prototype._createScenes=function(config)
{var scene;for(var i=0,ii=config.length;i<ii;i++)
{scene=new FORGE.Scene(this._viewer);scene.addConfig(config[i]);if(scene.booted===true)
{this._addScene(scene);}}};FORGE.Story.prototype._addScene=function(scene)
{scene.onLoadRequest.add(this._sceneLoadRequestHandler,this);scene.onLoadStart.add(this._sceneLoadStartHandler,this);scene.onLoadComplete.add(this._sceneLoadCompleteHandler,this);this._scenes.push(scene.uid);};FORGE.Story.prototype._backgroundReadyHandler=function()
{this._viewer.renderer.pickingManager.start();};FORGE.Story.prototype._sceneLoadRequestHandler=function(event)
{var previousScene=this.scene;var nextScene=event.emitter;var time=0;if(previousScene!==null)
{if(nextScene.sync.indexOf(previousScene.uid)!==-1&&previousScene.media.type===FORGE.MediaType.VIDEO)
{time=previousScene.media.displayObject.currentTime;}
previousScene.unload();}
this._sceneUid=nextScene.uid;nextScene.loadStart(time);this.log("scene load request");if(nextScene.hasGroups()===false)
{this._groupUid=null;if(this._onGroupChange!==null)
{this._onGroupChange.dispatch(({groupUid:this._groupUid}));}
if(FORGE.Utils.isTypeOf(this._events.onGroupChange,"ActionEventDispatcher")===true)
{this._events.onGroupChange.dispatch();}}
else if(nextScene.hasGroups()===true&&nextScene.hasGroup(this._groupUid)===false)
{this._setGroupUid(nextScene.groups[0].uid);}
if(this._onSceneLoadRequest!==null)
{this._onSceneLoadRequest.dispatch(({sceneUid:this._sceneUid}));}
if(FORGE.Utils.isTypeOf(this._events.onSceneLoadRequest,"ActionEventDispatcher")===true)
{this._events.onSceneLoadRequest.dispatch();}};FORGE.Story.prototype._sceneLoadStartHandler=function()
{this.log("scene load start");if(this._onSceneLoadStart!==null)
{this._onSceneLoadStart.dispatch(({sceneUid:this._sceneUid}));}
if(FORGE.Utils.isTypeOf(this._events.onSceneLoadStart,"ActionEventDispatcher")===true)
{this._events.onSceneLoadStart.dispatch();}};FORGE.Story.prototype._sceneLoadCompleteHandler=function()
{this.log("scene load complete");if(this._onSceneLoadComplete!==null)
{this._onSceneLoadComplete.dispatch(({sceneUid:this._sceneUid}));}
if(FORGE.Utils.isTypeOf(this._events.onSceneLoadComplete,"ActionEventDispatcher")===true)
{this._events.onSceneLoadComplete.dispatch();}};FORGE.Story.prototype._createGroups=function(config)
{var group;for(var i=0,ii=config.length;i<ii;i++)
{group=new FORGE.Group(this._viewer,config[i]);this._groups.push(group.uid);}};FORGE.Story.prototype._setGroupUid=function(uid)
{if(FORGE.UID.isTypeOf(uid,"Group")===true&&uid!==this._groupUid)
{this._groupUid=uid;if(this._onGroupChange!==null)
{this._onGroupChange.dispatch(({groupUid:this._groupUid}));}
if(FORGE.Utils.isTypeOf(this._events.onGroupChange,"ActionEventDispatcher")===true)
{this._events.onGroupChange.dispatch();}}};FORGE.Story.prototype.boot=function()
{this.log("FORGE.Story.boot();");this._scenes=[];this._groups=[];this._name=new FORGE.LocaleString(this._viewer);this._slug=new FORGE.LocaleString(this._viewer);this._description=new FORGE.LocaleString(this._viewer);};FORGE.Story.prototype.load=function(config)
{this.log("load");if(typeof config==="string")
{this._viewer.load.json("forge.story.config",config,this._configLoadComplete,this);}
else if(typeof config==="object")
{this._parseConfig(config);}};FORGE.Story.prototype.hasScenes=function()
{return this._scenes.length!==0;};FORGE.Story.prototype.hasGroups=function()
{return this._groups.length!==0;};FORGE.Story.prototype.nextScene=function()
{var index=this._scenes.indexOf(this._sceneUid);var uid;if(index+1<this._scenes.length)
{uid=this._scenes[index+1];}
else
{uid=this._scenes[0];}
this.loadScene(uid);};FORGE.Story.prototype.previousScene=function()
{var index=this._scenes.indexOf(this._sceneUid);var uid;if(index-1>=0)
{uid=this._scenes[index-1];}
else
{uid=this._scenes[this._scenes.length-1];}
this.loadScene(uid);};FORGE.Story.prototype.loadScene=function(value)
{var uid;if(typeof value==="number")
{if(value>=0&&value<this._scenes.length)
{uid=this._scenes[value];}
else
{this.warn("Load scene error: index "+value+" is out of bounds");}}
else if(typeof value==="string"&&FORGE.UID.isTypeOf(value,"Scene"))
{uid=value;}
else if(typeof value==="object"&&FORGE.Utils.isTypeOf(value,"Scene"))
{uid=value.uid;}
if(typeof uid!=="undefined"&&uid!==this._sceneUid)
{this._viewer.renderer.pickingManager.stop();this._viewer.renderer.onBackgroundReady.addOnce(this._backgroundReadyHandler,this);this._loadUid(uid);}};FORGE.Story.prototype.loadGroup=function(value)
{var uid;if(typeof value==="number")
{if(value>=0&&value<this._groups.length)
{uid=this._groups[value];}
else
{this.warn("Load group, index "+value+" is out of bounds");}}
else if(typeof value==="string"&&FORGE.UID.isTypeOf(value,"Group"))
{uid=value;}
else if(typeof value==="object"&&FORGE.Utils.isTypeOf(value,"Group"))
{uid=value.uid;}
if(typeof uid!=="undefined"&&uid!==this._groupUid)
{this._setGroupUid(uid);this._loadUid(uid);}};FORGE.Story.prototype.notifySceneConfigLoadComplete=function(scene)
{this._addScene(scene);this._checkStoryScenes();};FORGE.Story.prototype.destroy=function()
{this._viewer=null;this._config=null;this._name.destroy();this._name=null;this._slug.destroy();this._slug=null;this._description.destroy();this._description=null;for(var i=0,ii=this._scenes.length;i<ii;i++)
{FORGE.UID.get(this._scenes[i]).destroy();}
this._scenes=null;for(var j=0,jj=this._groups.length;j<jj;j++)
{FORGE.UID.get(this._groups[j]).destroy();}
this._groups=null;if(this._onReady!==null)
{this._onReady.destroy();this._onReady=null;}
if(this._onSceneLoadStart!==null)
{this._onSceneLoadStart.destroy();this._onSceneLoadStart=null;}
if(this._onSceneLoadProgress!==null)
{this._onSceneLoadProgress.destroy();this._onSceneLoadProgress=null;}
if(this._onSceneLoadComplete!==null)
{this._onSceneLoadComplete.destroy();this._onSceneLoadComplete=null;}
if(this._onSceneLoadError!==null)
{this._onSceneLoadError.destroy();this._onSceneLoadError=null;}
if(this._onScenePreview!==null)
{this._onScenePreview.destroy();this._onScenePreview=null;}
if(this._onGroupChange!==null)
{this._onGroupChange.destroy();this._onGroupChange=null;}
this._clearEvents();this._events=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Story.prototype,"config",{get:function()
{return this._config;}});Object.defineProperty(FORGE.Story.prototype,"name",{get:function()
{return this._name.value;}});Object.defineProperty(FORGE.Story.prototype,"slug",{get:function()
{return this._slug.value;}});Object.defineProperty(FORGE.Story.prototype,"description",{get:function()
{return this._description.value;}});Object.defineProperty(FORGE.Story.prototype,"scenes",{get:function()
{return FORGE.UID.get(this._scenes);}});Object.defineProperty(FORGE.Story.prototype,"scene",{get:function()
{if(this._sceneUid===null||this._sceneUid==="")
{return null;}
return FORGE.UID.get(this._sceneUid);},set:function(value)
{this.loadScene(value);}});Object.defineProperty(FORGE.Story.prototype,"sceneUids",{get:function()
{return this._scenes;}});Object.defineProperty(FORGE.Story.prototype,"sceneUid",{get:function()
{return this._sceneUid;},set:function(value)
{this.loadScene(value);}});Object.defineProperty(FORGE.Story.prototype,"groups",{get:function()
{return FORGE.UID.get(this._groups);}});Object.defineProperty(FORGE.Story.prototype,"group",{get:function()
{if(this._groupUid===null||this._groupUid==="")
{return null;}
return FORGE.UID.get(this._groupUid);},set:function(value)
{this.loadGroup(value);}});Object.defineProperty(FORGE.Story.prototype,"groupUids",{get:function()
{return this._groups;}});Object.defineProperty(FORGE.Story.prototype,"groupUid",{get:function()
{return this._groupUid;},set:function(value)
{this.loadGroup(value);}});Object.defineProperty(FORGE.Story.prototype,"onReady",{get:function()
{if(this._onReady===null)
{this._onReady=new FORGE.EventDispatcher(this);}
return this._onReady;}});Object.defineProperty(FORGE.Story.prototype,"onSceneLoadRequest",{get:function()
{if(this._onSceneLoadRequest===null)
{this._onSceneLoadRequest=new FORGE.EventDispatcher(this);}
return this._onSceneLoadRequest;}});Object.defineProperty(FORGE.Story.prototype,"onSceneLoadStart",{get:function()
{if(this._onSceneLoadStart===null)
{this._onSceneLoadStart=new FORGE.EventDispatcher(this);}
return this._onSceneLoadStart;}});Object.defineProperty(FORGE.Story.prototype,"onSceneLoadProgress",{get:function()
{if(this._onSceneLoadProgress===null)
{this._onSceneLoadProgress=new FORGE.EventDispatcher(this);}
return this._onSceneLoadProgress;}});Object.defineProperty(FORGE.Story.prototype,"onSceneLoadComplete",{get:function()
{if(this._onSceneLoadComplete===null)
{this._onSceneLoadComplete=new FORGE.EventDispatcher(this);}
return this._onSceneLoadComplete;}});Object.defineProperty(FORGE.Story.prototype,"onSceneLoadError",{get:function()
{if(this._onSceneLoadError===null)
{this._onSceneLoadError=new FORGE.EventDispatcher(this);}
return this._onSceneLoadError;}});Object.defineProperty(FORGE.Story.prototype,"onScenePreview",{get:function()
{if(this._onScenePreview===null)
{this._onScenePreview=new FORGE.EventDispatcher(this);}
return this._onScenePreview;}});Object.defineProperty(FORGE.Story.prototype,"onGroupChange",{get:function()
{if(this._onGroupChange===null)
{this._onGroupChange=new FORGE.EventDispatcher(this);}
return this._onGroupChange;}});FORGE.Group=function(viewer,config)
{this._viewer=viewer;this._config=config;this._name=null;this._color="#ffffff";this._alpha=1;this._slug=null;this._description=null;this._children=null;this._default="";this._parents=null;FORGE.BaseObject.call(this,"Group");this._boot();};FORGE.Group.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Group.prototype.constructor=FORGE.Group;FORGE.Group.prototype._boot=function()
{this.log("FORGE.Group._boot();");this._uid=this._config.uid;this._tags=this._config.tags;this._register();this._parents=[];this._children=[];this._name=new FORGE.LocaleString(this._viewer,this._config.name);this._slug=new FORGE.LocaleString(this._viewer,this._config.slug);this._description=new FORGE.LocaleString(this._viewer,this._config.description);if(typeof this._config.color==="string")
{this._color=this._config.color;}
if(typeof this._config.alpha==="number")
{this._alpha=this._config.alpha;}
this._parseChildren(this._config);};FORGE.Group.prototype._parseChildren=function(config)
{if(typeof config.children!=="undefined"&&FORGE.Utils.isArrayOf(config.children,"string")===true)
{this._children=config.children;}
else
{this.warn("A group has no children in its configuration, or configuration is not valid!");}
if(typeof config.default==="string")
{if(this._children.indexOf(config.default)!==-1)
{this._default=config.default;}
else
{this.warn("A group has a default child that is not in its children array!");}}};FORGE.Group.prototype.load=function(value)
{this.log("FORGE.Group.load();");if(this._children===null||this._children.length===0)
{throw"Group.load() : can't load a group that have no children";}
var uid="";if(typeof value==="undefined"||value===null)
{if(typeof this._default==="string"&&this._default!=="")
{uid=this._default;}
else
{uid=this._children[0];}}
else if(typeof value==="number"&&value>=0&&value<this._children.length)
{uid=this._children[value];}
else if(typeof value==="string")
{uid=value;}
else if(typeof value==="object"&&this.hasChild(value)===true)
{uid=value.uid;}
if(this._children.indexOf(uid)===-1)
{throw"Group.load() : uid \""+uid+"\" is not in children of the group!";}
if(FORGE.UID.isTypeOf(uid,"Scene")===true||FORGE.UID.isTypeOf(uid,"Group")===true)
{var child=FORGE.UID.get(uid);child.load();}
else
{throw"Impossible to load group child with uid "+uid+", it seems to be neither a scene or a group!";}};FORGE.Group.prototype.hasChild=function(value)
{if(typeof value==="string")
{return this._children.indexOf(value)!==-1;}
else if(FORGE.Utils.isTypeOf(value,"Scene")===true||FORGE.Utils.isTypeOf(value,"Group")===true)
{return this.hasChild(value.uid);}
return false;};FORGE.Group.prototype.hasScene=function(value)
{if(typeof value==="string"&&FORGE.UID.isTypeOf(value,"Scene"))
{return this._children.indexOf(value)!==-1;}
else if(FORGE.Utils.isTypeOf(value,"Scene")===true)
{return this.hasScene(value.uid);}
return false;};FORGE.Group.prototype.hasGroup=function(value)
{if(typeof value==="string"&&FORGE.UID.isTypeOf(value,"Group"))
{return this._children.indexOf(value)!==-1;}
else if(FORGE.Utils.isTypeOf(value,"Group")===true)
{return this.hasGroup(value.uid);}
return false;};FORGE.Group.prototype.hasChildren=function()
{return this._children.length!==0;};FORGE.Group.prototype.hasTypeOfChild=function(className)
{var uid;for(var i=0,ii=this._children.length;i<ii;i++)
{uid=this._children[i];if(FORGE.UID.isTypeOf(uid,className))
{return true;}}
return false;};FORGE.Group.prototype.hasScenes=function()
{return this.hasTypeOfChild("Scene");};FORGE.Group.prototype.hasGroups=function()
{return this.hasTypeOfChild("Group");};FORGE.Group.prototype.getChildrenUids=function(className)
{if(typeof className!=="string")
{return this._children;}
var children=[];for(var i=0,ii=this._children.length;i<ii;i++)
{if(FORGE.UID.isTypeOf(this._children[i],className))
{children.push(this._children[i]);}}
return children;};FORGE.Group.prototype.getChildren=function(className)
{var uids=this.getChildrenUids(className);return FORGE.UID.get(uids);};FORGE.Group.prototype.nextScene=function()
{if(this.hasScenes()===false)
{this.warn("Can't do Group.nextScene() on this group that have no scenes!");return;}
var scenesUids=this.scenesUids;var index=scenesUids.indexOf(this._viewer.story.sceneUid);var uid;if(index===-1)
{if(FORGE.UID.isTypeOf(this._default,"Scene"))
{uid=this._default;}
else
{uid=scenesUids[0];}}
if(index+1<scenesUids.length)
{uid=scenesUids[index+1];}
else if(index!==-1)
{uid=scenesUids[0];}
this.load(uid);};FORGE.Group.prototype.previousScene=function()
{if(this.hasScenes()===false)
{this.warn("Can't do Group.previousScene() on this group that have no scenes!");return;}
var scenesUids=this.scenesUids;var index=scenesUids.indexOf(this._viewer.story.sceneUid);var uid;if(index===-1)
{if(FORGE.UID.isTypeOf(this._default,"Scene"))
{uid=this._default;}
else
{uid=scenesUids[0];}}
if(index-1>=0)
{uid=scenesUids[index-1];}
else if(index!==-1)
{uid=scenesUids[scenesUids.length-1];}
this.load(uid);};FORGE.Group.prototype.destroy=function()
{this._viewer=null;this._children=null;this._name.destroy();this._name=null;this._slug.destroy();this._slug=null;this._description.destroy();this._description=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Group.prototype,"config",{get:function()
{return this._config;}});Object.defineProperty(FORGE.Group.prototype,"name",{get:function()
{return this._name.value;}});Object.defineProperty(FORGE.Group.prototype,"color",{get:function()
{return this._color;}});Object.defineProperty(FORGE.Group.prototype,"alpha",{get:function()
{return this._alpha;}});Object.defineProperty(FORGE.Group.prototype,"slug",{get:function()
{return this._slug.value;}});Object.defineProperty(FORGE.Group.prototype,"description",{get:function()
{return this._description.value;}});Object.defineProperty(FORGE.Group.prototype,"childrenUids",{get:function()
{return this.getChildrenUids();}});Object.defineProperty(FORGE.Group.prototype,"children",{get:function()
{return this.getChildren();}});Object.defineProperty(FORGE.Group.prototype,"scenesUids",{get:function()
{return this.getChildrenUids("Scene");}});Object.defineProperty(FORGE.Group.prototype,"scenes",{get:function()
{return this.getChildren("Scene");}});Object.defineProperty(FORGE.Group.prototype,"groupsUids",{get:function()
{return this.getChildrenUids("Group");}});Object.defineProperty(FORGE.Group.prototype,"groups",{get:function()
{return this.getChildren("Group");}});FORGE.Scene=function(viewer)
{this._viewer=viewer;this._config=null;this._name=null;this._slug=null;this._description=null;this._sync=[];this._viewCount=0;this._groups=null;this._booted=false;this._useExternalConfig=false;this._events={};this._media=null;this._onLoadRequest=null;this._onLoadStart=null;this._onLoadComplete=null;this._onUnloadStart=null;this._onUnloadComplete=null;this._onConfigLoadComplete=null;this._onMediaCreate=null;FORGE.BaseObject.call(this,"Scene");};FORGE.Scene.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Scene.prototype.constructor=FORGE.Scene;FORGE.Scene.prototype._parseConfig=function(config)
{this._config=config;this._uid=config.uid;this._tags=config.tags;this._register();this._name=new FORGE.LocaleString(this._viewer,this._config.name);this._slug=new FORGE.LocaleString(this._viewer,this._config.slug);this._description=new FORGE.LocaleString(this._viewer,this._config.description);this._sync=(FORGE.Utils.isArrayOf(this._config.sync,"string")===true)?this._config.sync:[];if(typeof config.events==="object"&&config.events!==null)
{this._createEvents(config.events);}
if(this._booted===false&&typeof config.url==="string"&&config.url!=="")
{this._useExternalConfig=true;this._viewer.load.json(this._uid,config.url,this._configLoadComplete,this);}
else
{this._booted=true;}};FORGE.Scene.prototype._configLoadComplete=function(file)
{this.log("config load complete");this._booted=true;if(typeof file.data==="string")
{file.data=(JSON.parse(file.data));}
this._config=(FORGE.Utils.extendSimpleObject(this._config,file.data));this._viewer.story.notifySceneConfigLoadComplete(this);if(this._onConfigLoadComplete!==null)
{this._onConfigLoadComplete.dispatch();}};FORGE.Scene.prototype._createEvents=function(events)
{this.log("create events");var event;for(var e in events)
{event=new FORGE.ActionEventDispatcher(this._viewer,e);event.addActions(events[e]);this._events[e]=event;}};FORGE.Scene.prototype._clearEvents=function()
{this.log("clear events");for(var e in this._events)
{this._events[e].destroy();this._events[e]=null;}};FORGE.Scene.prototype._createMedia=function(media)
{this.log("create media");if(this._media===null)
{this._media=new FORGE.Media(this._viewer,media);if(this._onMediaCreate!==null)
{this._onMediaCreate.dispatch({media:this._media});}}};FORGE.Scene.prototype.addConfig=function(config)
{this._parseConfig(config);};FORGE.Scene.prototype.load=function()
{this.log("load");if(this._viewer.story.scene===this)
{return;}
if(this._onLoadRequest!==null)
{this._onLoadRequest.dispatch();}
if(FORGE.Utils.isTypeOf(this._events.onLoadRequest,"ActionEventDispatcher")===true)
{this._events.onLoadRequest.dispatch();}};FORGE.Scene.prototype.loadStart=function(time)
{if(typeof time==="number"&&isNaN(time)===false&&typeof this._config.media!=="undefined")
{if(typeof this._config.media.options==="undefined")
{this._config.media.options={};}
this._config.media.options.startTime=time;}
this._createMedia(this._config.media);if(this._onLoadStart!==null)
{this._onLoadStart.dispatch();}
if(FORGE.Utils.isTypeOf(this._events.onLoadStart,"ActionEventDispatcher")===true)
{this._events.onLoadStart.dispatch();}
this._viewCount++;if(this._onLoadComplete!==null)
{this._onLoadComplete.dispatch();}
if(FORGE.Utils.isTypeOf(this._events.onLoadComplete,"ActionEventDispatcher")===true)
{this._events.onLoadComplete.dispatch();}};FORGE.Scene.prototype.unload=function()
{this.log("unload");if(this._onUnloadStart!==null)
{this._onUnloadStart.dispatch();}
if(FORGE.Utils.isTypeOf(this._events.onUnloadStart,"ActionEventDispatcher")===true)
{this._events.onUnloadStart.dispatch();}
this._media.destroy();this._media=null;if(this._onUnloadComplete!==null)
{this._onUnloadComplete.dispatch();}
if(FORGE.Utils.isTypeOf(this._events.onUnloadComplete,"ActionEventDispatcher")===true)
{this._events.onUnloadComplete.dispatch();}};FORGE.Scene.prototype.hasGroup=function(value)
{if(typeof value==="string"&&FORGE.UID.isTypeOf(value,"Group")===true)
{return FORGE.UID.get((value)).hasScene(this);}
else if(FORGE.Utils.isTypeOf(value,"Group")===true)
{return value.hasScene(this);}
return false;};FORGE.Scene.prototype.hasGroups=function()
{var groups=this._viewer.story.groups;var group;for(var i=0,ii=groups.length;i<ii;i++)
{group=groups[i];if(group.hasScene(this)===true)
{return true;}}
return false;};FORGE.Scene.prototype.hasSoundSource=function()
{if(typeof this._config.sound!=="undefined"&&typeof this._config.sound.source!=="undefined"&&((typeof this._config.sound.source.url!=="undefined"&&this._config.sound.source.url!=="")||(typeof this._config.sound.source.target!=="undefined"&&this._config.sound.source.target!=="")))
{return true;}
return false;};FORGE.Scene.prototype.hasSoundTarget=function(uid)
{if(typeof this._config.sound!=="undefined"&&typeof this._config.sound.source!=="undefined"&&typeof this._config.sound.source.target!=="undefined"&&this._config.sound.source.target!==""&&this._config.sound.source.target===uid)
{return true;}
return false;};FORGE.Scene.prototype.isAmbisonic=function()
{
//@todo real check of the UID target object rather then the isAmbisonic method of the FORGE.Sceneif(this.hasSoundSource()===true&&this._config.sound.type===FORGE.SoundType.AMBISONIC)
{return true;}
return false;};FORGE.Scene.prototype.destroy=function()
{this._viewer=null;this._name.destroy();this._name=null;this._slug.destroy();this._slug=null;this._description.destroy();this._description=null;if(this._onLoadStart!==null)
{this._onLoadStart.destroy();this._onLoadStart=null;}
if(this._onLoadComplete!==null)
{this._onLoadComplete.destroy();this._onLoadComplete=null;}
if(this._onUnloadStart!==null)
{this._onUnloadStart.destroy();this._onUnloadStart=null;}
if(this._onUnloadComplete!==null)
{this._onUnloadComplete.destroy();this._onUnloadComplete=null;}
this._clearEvents();this._events=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Scene.prototype,"booted",{get:function()
{return this._booted;}});Object.defineProperty(FORGE.Scene.prototype,"config",{get:function()
{return this._config;}});Object.defineProperty(FORGE.Scene.prototype,"viewCount",{get:function()
{return this._viewCount;}});Object.defineProperty(FORGE.Scene.prototype,"viewed",{get:function()
{return this._viewCount!==0;}});Object.defineProperty(FORGE.Scene.prototype,"name",{get:function()
{return this._name.value;}});Object.defineProperty(FORGE.Scene.prototype,"slug",{get:function()
{return this._slug.value;}});Object.defineProperty(FORGE.Scene.prototype,"description",{get:function()
{return this._description.value;}});Object.defineProperty(FORGE.Scene.prototype,"sync",{get:function()
{return this._sync;}});Object.defineProperty(FORGE.Scene.prototype,"groupsUid",{get:function()
{var groups=this._viewer.story.groups;var group;var result=[];for(var i=0,ii=groups.length;i<ii;i++)
{group=groups[i];if(group.hasScene(this)===true)
{result.push(group.uid);}}
return result;}});Object.defineProperty(FORGE.Scene.prototype,"groups",{get:function()
{return FORGE.UID.get(this.groupsUid);}});Object.defineProperty(FORGE.Scene.prototype,"thumbnails",{get:function()
{return this._config.thumbnails;}});Object.defineProperty(FORGE.Scene.prototype,"media",{get:function()
{return this._media;}});Object.defineProperty(FORGE.Scene.prototype,"background",{get:function()
{return(typeof this._config.background!=="undefined")?this._config.background:this._viewer.config.background;}});Object.defineProperty(FORGE.Scene.prototype,"onLoadRequest",{get:function()
{if(this._onLoadRequest===null)
{this._onLoadRequest=new FORGE.EventDispatcher(this);}
return this._onLoadRequest;}});Object.defineProperty(FORGE.Scene.prototype,"onLoadStart",{get:function()
{if(this._onLoadStart===null)
{this._onLoadStart=new FORGE.EventDispatcher(this);}
return this._onLoadStart;}});Object.defineProperty(FORGE.Scene.prototype,"onLoadComplete",{get:function()
{if(this._onLoadComplete===null)
{this._onLoadComplete=new FORGE.EventDispatcher(this);}
return this._onLoadComplete;}});Object.defineProperty(FORGE.Scene.prototype,"onUnloadStart",{get:function()
{if(this._onUnloadStart===null)
{this._onUnloadStart=new FORGE.EventDispatcher(this);}
return this._onUnloadStart;}});Object.defineProperty(FORGE.Scene.prototype,"onUnloadComplete",{get:function()
{if(this._onUnloadComplete===null)
{this._onUnloadComplete=new FORGE.EventDispatcher(this);}
return this._onUnloadComplete;}});Object.defineProperty(FORGE.Scene.prototype,"onConfigLoadComplete",{get:function()
{if(this._onConfigLoadComplete===null)
{this._onConfigLoadComplete=new FORGE.EventDispatcher(this);}
return this._onConfigLoadComplete;}});Object.defineProperty(FORGE.Scene.prototype,"onMediaCreate",{get:function()
{if(this._onMediaCreate===null)
{this._onMediaCreate=new FORGE.EventDispatcher(this);}
return this._onMediaCreate;}});FORGE.Math={};FORGE.Math.DEGREES="degrees";FORGE.Math.RADIANS="radians";FORGE.Math.DEG2RAD=Math.PI / 180.0;FORGE.Math.RAD2DEG=180.0 / Math.PI;FORGE.Math.TWOPI=Math.PI*2;FORGE.Math.degToRad=function(deg)
{return deg*FORGE.Math.DEG2RAD;};FORGE.Math.radToDeg=function(rad)
{return rad*FORGE.Math.RAD2DEG;};FORGE.Math.round10=function(value)
{return Math.round(value*10)/ 10;};FORGE.Math.clamp=function(value,min,max)
{min=(typeof min==="number"&&isNaN(min)===false)?min:-Infinity;max=(typeof max==="number"&&isNaN(max)===false)?max:Infinity;return Math.min(Math.max(value,min),max);};FORGE.Math.wrap=function(value,min,max)
{if(value===max)
{return max;}
var range=max-min;if(range===0)
{return min;}
return((value-min)%range+range)%range+min;};FORGE.Math.mix=function(a,b,mix)
{return a*mix+b*(1-mix);};FORGE.Math.smoothStep=function(value,edge0,edge1)
{value=FORGE.Math.clamp((value-edge0)/(edge1-edge0),0.0,1.0);return value*value*(3-2*value);};FORGE.Math.isPowerOfTwo=function(value)
{return((value!=0)&&!(value&(value-1)));};FORGE.Math.rotationMatrixToEuler=function(mat)
{return{yaw:Math.atan2(-mat.elements[2+0*4],mat.elements[2+2*4]),pitch:Math.asin(-mat.elements[2+1*4]),roll:Math.atan2(-mat.elements[0+1*4],mat.elements[1+1*4])};};FORGE.Math.eulerToRotationMatrix=function(yaw,pitch,roll,orderYPR)
{var cy=Math.cos(yaw);var sy=Math.sin(yaw);var cp=Math.cos(-pitch);var sp=Math.sin(-pitch);var cr=Math.cos(roll);var sr=Math.sin(roll);if(typeof orderYPR==="undefined")
{orderYPR=false;}
if(orderYPR)
{return new THREE.Matrix4().set(cy*cr+sy*sp*sr,-cy*sr+sy*sp*cr,sy*cp,0,cp*sr,cp*cr,-sp,0,-sy*cr+cy*sp*sr,sy*sr+cy*sp*cr,cy*cp,0,0,0,0,1);}
return new THREE.Matrix4().set(cr*cy-sr*sp*sy,-sr*cp,cr*sy+sr*sp*cy,0,sr*cy+cr*sp*sy,cr*cp,sr*sy-cr*sp*cy,0,-sy*cp,sp,cp*cy,0,0,0,0,1);};FORGE.Math.sphericalToCartesian=function(radius,theta,phi,unit)
{var res={};if(unit===FORGE.Math.DEGREES)
{theta=FORGE.Math.degToRad(theta);phi=FORGE.Math.degToRad(phi);}
phi=FORGE.Math.wrap(phi,-Math.PI / 2,Math.PI / 2);theta+=radius<0?Math.PI:0;theta=FORGE.Math.wrap(theta,0,2*Math.PI);radius=Math.abs(radius);res.x=radius*Math.cos(phi)*Math.sin(theta);res.y=radius*Math.sin(phi);res.z=-radius*Math.cos(phi)*Math.cos(theta);return res;};FORGE.Math.cartesianToSpherical=function(x,y,z,unit)
{var res={};res.radius=Math.sqrt(x*x+y*y+z*z);if(res.radius===0)
{return{radius:0,theta:0,phi:0};}
res.phi=Math.asin(y / res.radius);res.theta=Math.atan2(x,-z||0);if(unit===FORGE.Math.DEGREES)
{res.phi=FORGE.Math.radToDeg(res.phi);res.theta=FORGE.Math.radToDeg(res.theta);}
return res;};FORGE.Quaternion={};FORGE.Quaternion.toEuler=function(quat)
{var euler=new THREE.Euler().setFromQuaternion(quat,"XYZ");var result={yaw:euler.x,pitch:-euler.y,roll:euler.z};return result;};FORGE.Quaternion.fromEuler=function(yaw,pitch,roll)
{if(typeof yaw==="object")
{pitch=yaw.pitch;roll=yaw.roll;yaw=yaw.yaw;}
return new THREE.Quaternion().setFromEuler(new THREE.Euler(yaw,-pitch,roll,"ZXY"));};FORGE.Quaternion.toRotationMatrix=function(quat)
{var euler=FORGE.Quaternion.toEuler(quat);return FORGE.Math.eulerToRotationMatrix(euler.yaw,euler.pitch,euler.roll);};FORGE.Quaternion.fromRotationMatrix=function(mat)
{var euler=FORGE.Math.rotationMatrixToEuler(mat);return FORGE.Quaternion.fromEuler(euler);};FORGE.Quaternion.cancelRoll=function(quat)
{var euler=FORGE.Quaternion.toEuler(quat);return FORGE.Quaternion.fromEuler(euler.yaw,euler.pitch,0);};FORGE.Quaternion.diffBetweenQuaternions=function(q0,q1)
{return new THREE.Quaternion().copy(q0).inverse().multiply(q1);};FORGE.Quaternion.angularDistance=function(q0,q1)
{var d=Math.abs(q0.dot(q1));if(d>=1.0)
{return 0;}
return 2*Math.acos(d);};FORGE.Quaternion.multiplyScalar=function(scalar,quat)
{return new THREE.Quaternion(scalar*quat.x,scalar*quat.y,scalar*quat.z,scalar*quat.w);};FORGE.Quaternion.add=function(q0,q1)
{return new THREE.Quaternion(q0.x+q1.x,q0.y+q1.y,q0.z+q1.z,q0.w+q1.w);};FORGE.Quaternion.log=function(quat)
{var qres=new THREE.Quaternion(0,0,0,0);if(Math.abs(quat.w)<1)
{var angle=Math.acos(quat.w);var sin=Math.sin(angle);if(sin>0)
{qres.x=angle*quat.x / sin;qres.y=angle*quat.y / sin;qres.z=angle*quat.z / sin;}
return qres;}
qres.x=quat.x;qres.y=quat.y;qres.z=quat.z;return qres;};FORGE.Quaternion.exp=function(quat)
{var angle=Math.sqrt(quat.x*quat.x+quat.y*quat.y+quat.z*quat.z);var sin=Math.sin(angle);var qres=new THREE.Quaternion().copy(quat);qres.w=Math.cos(angle);if(Math.abs(sin)>Number.EPSILON)
{qres.x=sin*quat.x / angle;qres.y=sin*quat.y / angle;qres.z=sin*quat.z / angle;}
return qres;};FORGE.Quaternion.slerp=function(q0,q1,t)
{var qres=new THREE.Quaternion();THREE.Quaternion.slerp(q0,q1,qres,t);return qres;};FORGE.Quaternion.squad=function(q0,a0,a1,q1,qres,t)
{var slerp1=FORGE.Quaternion.slerp(q0,q1,t);var slerp2=FORGE.Quaternion.slerp(a0,a1,t);return FORGE.Quaternion.slerp(slerp1,slerp2,2*t*(1-t));};FORGE.Quaternion.nlerpNoInvert=function(q0,q1,t)
{return FORGE.Quaternion.add(FORGE.Quaternion.multiplyScalar(1-t,q0),FORGE.Quaternion.multiplyScalar(t,q1)).normalize();};FORGE.Quaternion.slerpNoInvert=function(q0,q1,t)
{var dot=q0.dot(q1);if(Math.abs(dot)>=0.95)
{return FORGE.Quaternion.nlerpNoInvert(q0,q1,t);}
var angle=Math.acos(dot);return FORGE.Quaternion.multiplyScalar(1.0 / Math.sin(angle),FORGE.Quaternion.add(FORGE.Quaternion.multiplyScalar(Math.sin(angle*(1-t)),q0),FORGE.Quaternion.multiplyScalar(Math.sin(angle*t),q1)));};FORGE.Quaternion.squadNoInvert=function(q0,a0,a1,q1,t)
{var qq=FORGE.Quaternion.slerpNoInvert(q0,q1,t);var qa=FORGE.Quaternion.slerpNoInvert(a0,a1,t);return FORGE.Quaternion.slerpNoInvert(qq,qa,2*t*(1-t));};FORGE.Quaternion.spline=function(q0,q1,q2)
{var q1Inv=new THREE.Quaternion().copy(q1).conjugate();var p0=new THREE.Quaternion().copy(q1Inv).multiply(q0);var p2=new THREE.Quaternion().copy(q1Inv).multiply(q2);var qLog0=FORGE.Quaternion.log(p0);var qLog2=FORGE.Quaternion.log(p2);var qLogSum=FORGE.Quaternion.add(qLog0,qLog2);var qLogSumQuater=FORGE.Quaternion.multiplyScalar(-0.25,qLogSum);var qExp=FORGE.Quaternion.exp(qLogSumQuater);return new THREE.Quaternion().copy(q1).multiply(qExp).normalize();};FORGE.Rectangle=function(x,y,width,height)
{this._x=typeof x==="number"?x:0;this._y=typeof y==="number"?y:0;this._width=typeof width==="number"?width:0;this._height=typeof height==="number"?height:0;};FORGE.Rectangle.prototype.constructor=FORGE.Rectangle;Object.defineProperty(FORGE.Rectangle.prototype,"x",{get:function()
{return this._x;},set:function(value)
{if(typeof value==="number")
{this._x=value;}}});Object.defineProperty(FORGE.Rectangle.prototype,"y",{get:function()
{return this._y;},set:function(value)
{if(typeof value==="number")
{this._y=value;}}});Object.defineProperty(FORGE.Rectangle.prototype,"width",{get:function()
{return this._width;},set:function(value)
{if(typeof value==="number")
{this._width=value;}}});Object.defineProperty(FORGE.Rectangle.prototype,"w",{get:function()
{return this.width;},set:function(value)
{this.width=value;}});Object.defineProperty(FORGE.Rectangle.prototype,"height",{get:function()
{return this._height;},set:function(value)
{if(typeof value==="number")
{this._height=value;}}});Object.defineProperty(FORGE.Rectangle.prototype,"h",{get:function()
{return this.height;},set:function(value)
{this.height=value;}});Object.defineProperty(FORGE.Rectangle.prototype,"center",{get:function()
{return new THREE.Vector2(this._x+0.5*this._width,this._y+0.5*this._height);}});Object.defineProperty(FORGE.Rectangle.prototype,"origin",{get:function()
{return new THREE.Vector2(this._x,this._y);}});Object.defineProperty(FORGE.Rectangle.prototype,"size",{get:function()
{return new FORGE.Size(this._width,this._height);}});FORGE.Size=function(width,height)
{this._width=width||0;this._height=height||0;};FORGE.Size.prototype.constructor=FORGE.Size;Object.defineProperty(FORGE.Size.prototype,"width",{get:function()
{return this._width;}});Object.defineProperty(FORGE.Size.prototype,"height",{get:function()
{return this._height;}});Object.defineProperty(FORGE.Size.prototype,"ratio",{get:function()
{return this._width / this._height;}});FORGE.MediaType={};FORGE.MediaType.UNDEFINED="undefined";FORGE.MediaType.IMAGE="image";FORGE.MediaType.VIDEO="video";FORGE.MediaType.GRID="grid";FORGE.MediaFormat={};FORGE.MediaFormat.EQUIRECTANGULAR="equi";FORGE.MediaFormat.CUBE="cube";FORGE.MediaFormat.FLAT="flat";FORGE.MediaFormat.HOTSPOT="hotspot";FORGE.Media=function(viewer,config)
{this._viewer=viewer;this._config=config;this._type="";this._options=null;this._displayObject=null;this._loaded=false;this._events=null;this._onLoadComplete=null;FORGE.BaseObject.call(this,"Media");this._boot();};FORGE.Media.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Media.prototype.constructor=FORGE.Media;FORGE.Media.prototype._boot=function()
{this._events={};this._onLoadComplete=new FORGE.EventDispatcher(this,true);this._parseConfig(this._config);};FORGE.Media.prototype._parseConfig=function(config)
{if(typeof config==="undefined"||config===null)
{this._type=FORGE.MediaType.UNDEFINED;this._notifyLoadComplete();return;}
this._uid=config.uid;this._options=(typeof config.options!=="undefined")?config.options:null;this._type=config.type;var source=config.source;if(typeof config.source!=="undefined"&&typeof config.source.format==="undefined")
{config.source.format=FORGE.MediaFormat.FLAT;}
if(typeof config.events==="object"&&config.events!==null)
{this._createEvents(config.events);}
if(this._type===FORGE.MediaType.GRID)
{this._notifyLoadComplete();return;}
if(typeof config.source==="undefined"||config.source===null)
{return;}
if(this._type===FORGE.MediaType.IMAGE)
{var imageConfig;if(!source.url)
{throw"Multi resolution not implemented yet !";}
if(source.format===FORGE.MediaFormat.EQUIRECTANGULAR)
{imageConfig={key:this._uid,url:source.url};this._displayObject=new FORGE.Image(this._viewer,imageConfig);}
else if(source.format===FORGE.MediaFormat.CUBE||source.format===FORGE.MediaFormat.FLAT)
{imageConfig={key:this._uid,url:source.url};this._displayObject=new FORGE.Image(this._viewer,imageConfig);}
else
{throw"Media format not supported";}
this._displayObject.onLoadComplete.addOnce(this._onImageLoadComplete,this);return;}
if(this._type===FORGE.MediaType.VIDEO)
{if(Array.isArray(source.levels))
{source.url=[];for(var i=0,ii=source.levels.length;i<ii;i++)
{if(FORGE.Device.check(source.levels[i].device)===false)
{continue;}
source.url.push(source.levels[i].url);}}
if(typeof source.url!=="string"&&source.url.length===0)
{return;}
if(typeof source.streaming!=="undefined"&&source.streaming.toLowerCase()===FORGE.VideoFormat.DASH)
{this._displayObject=new FORGE.VideoDash(this._viewer,this._uid);}
else
{var scene=this._viewer.story.scene;this._displayObject=new FORGE.VideoHTML5(this._viewer,this._uid,null,null,(scene.hasSoundTarget(this._uid)===true&&scene.isAmbisonic()===true?true:false));}
this._displayObject.load(source.url);this._displayObject.onLoadedMetaData.addOnce(this._onLoadedMetaDataHandler,this);this._displayObject.onPlay.add(this._onPlayHandler,this);this._displayObject.onPause.add(this._onPauseHandler,this);this._displayObject.onSeeked.add(this._onSeekedHandler,this);this._displayObject.onEnded.add(this._onEndedHandler,this);return;}};FORGE.Media.prototype._createEvents=function(events)
{var event;for(var e in events)
{event=new FORGE.ActionEventDispatcher(this._viewer,e);event.addActions(events[e]);this._events[e]=event;}};FORGE.Media.prototype._clearEvents=function()
{for(var e in this._events)
{this._events[e].destroy();this._events[e]=null;}};FORGE.Media.prototype._onImageLoadComplete=function()
{this._notifyLoadComplete();};FORGE.Media.prototype._onLoadedMetaDataHandler=function()
{if(this._options!==null)
{this._displayObject.volume=(typeof this._options.volume==="number")?this._options.volume:1;this._displayObject.loop=(typeof this._options.loop==="boolean")?this._options.loop:true;this._displayObject.currentTime=(typeof this._options.startTime==="number")?this._options.startTime:0;if(this._options.autoPlay===true&&document[FORGE.Device.visibilityState]==="visible")
{this._displayObject.play();}
this._displayObject.autoPause=this._options.autoPause;this._displayObject.autoResume=this._options.autoResume;}
this._notifyLoadComplete();};FORGE.Media.prototype._notifyLoadComplete=function()
{this._loaded=true;this._onLoadComplete.dispatch();};FORGE.Media.prototype._onPlayHandler=function()
{if(FORGE.Utils.isTypeOf(this._events.onPlay,"ActionEventDispatcher")===true)
{this._events.onPlay.dispatch();}};FORGE.Media.prototype._onPauseHandler=function()
{if(FORGE.Utils.isTypeOf(this._events.onPause,"ActionEventDispatcher")===true)
{this._events.onPause.dispatch();}};FORGE.Media.prototype._onSeekedHandler=function()
{if(FORGE.Utils.isTypeOf(this._events.onSeeked,"ActionEventDispatcher")===true)
{this._events.onSeeked.dispatch();}};FORGE.Media.prototype._onEndedHandler=function()
{if(FORGE.Utils.isTypeOf(this._events.onEnded,"ActionEventDispatcher")===true)
{this._events.onEnded.dispatch();}};FORGE.Media.prototype.destroy=function()
{if(this._displayObject!==null)
{this._displayObject.destroy();this._displayObject=null;}
if(this._onLoadComplete!==null)
{this._onLoadComplete.destroy();this._onLoadComplete=null;}
this._clearEvents();this._events=null;this._viewer=null;};Object.defineProperty(FORGE.Media.prototype,"config",{get:function()
{return this._config;}});Object.defineProperty(FORGE.Media.prototype,"type",{get:function()
{return this._type;}});Object.defineProperty(FORGE.Media.prototype,"displayObject",{get:function()
{return this._displayObject;}});Object.defineProperty(FORGE.Media.prototype,"loaded",{get:function()
{return this._loaded;}});Object.defineProperty(FORGE.Media.prototype,"onLoadComplete",{get:function()
{return this._onLoadComplete;}});FORGE.RenderManager=function(viewer)
{this._viewer=viewer;this._webGLRenderer=null;this._renderPipeline=null;this._renderDisplay=null;this._viewManager=null;this._mediaSound=null;this._pickingManager=null;this._backgroundRenderer=null;this._backgroundRendererType=FORGE.BackgroundType.UNDEFINED;this._camera=null;this._canvasResolution=null;this._displayResolution=null;this._objectRenderer=null;this._backgroundReady=false;this._renderPipelineReady=false;this._onBackgroundReady=null;this._onBeforeRender=null;this._onAfterRender=null;FORGE.BaseObject.call(this,"RenderManager");this._boot();};FORGE.RenderManager.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.RenderManager.prototype.constructor=FORGE.RenderManager;FORGE.RenderManager.DEPTH_NEAR=0.01;FORGE.RenderManager.DEPTH_FAR=10000;FORGE.RenderManager.prototype._boot=function()
{this._clock=new THREE.Clock();this._viewer.onReady.add(this._onViewerReady,this,1000);};FORGE.RenderManager.prototype._onViewerReady=function()
{var canvas=this._viewer.canvas.dom;var options={antialias:true,alpha:true,premultipliedAlpha:false,stencil:false,canvas:canvas};try
{this._webGLRenderer=new THREE.WebGLRenderer(options);}
catch(error)
{this.destroy();return;}
this._webGLRenderer.autoClear=false;this._webGLRenderer.autoClearDepth=true;this._webGLRenderer.autoClearColor=true;this._viewManager=new FORGE.ViewManager(this._viewer);this._viewManager.onChange.add(this._onViewChangeHandler,this);this._pickingManager=new FORGE.PickingManager(this._viewer);this._renderDisplay=new FORGE.RenderDisplay(this._viewer);this._objectRenderer=new FORGE.ObjectRenderer(this._viewer);this._renderPipeline=new FORGE.RenderPipeline(this._viewer);this._renderDisplay.onDisplayChange.add(this._renderDisplayChangeHandler,this);this._setRendererSize(this._renderDisplay.rendererSize);this._camera=new FORGE.Camera(this._viewer);this._viewer.canvas.onResize.add(this._canvasResizeHandler,this);this._viewer.story.onSceneLoadStart.add(this._onSceneLoadStartHandler,this);};FORGE.RenderManager.prototype._onSceneLoadStartHandler=function()
{this._viewer.story.scene.onUnloadStart.addOnce(this._onSceneUnloadStartHandler,this);var sceneConfig=this._viewer.story.scene.config;this._viewer.container.background=this._viewer.story.scene.background;this._objectRenderer.createRenderScenes();this._renderPipeline.addRenderScenes(this._objectRenderer.renderScenes);this._viewManager.load(sceneConfig.view);this._initCamera(sceneConfig);this._initSound(sceneConfig);this._setupMedia();};FORGE.RenderManager.prototype._setupMedia=function()
{var media=this._viewer.story.scene.media;media.onLoadComplete.addOnce(this._mediaLoadCompleteHandler,this);if(FORGE.Utils.isTypeOf(media.displayObject,["VideoHTML5","VideoDash"]))
{media.displayObject.onQualityChange.add(this._mediaQualityChangeHandler,this);}};FORGE.RenderManager.prototype._onSceneUnloadStartHandler=function()
{this._renderPipelineReady=false;this._clearBackgroundRenderer();if(this._objectRenderer!==null)
{this._objectRenderer.clear();}
if(this._pickingManager!==null)
{this._pickingManager.clear();}
if(this._renderPipeline!==null)
{this._renderPipeline.clear();}
if(this._mediaSound!==null)
{this._mediaSound.destroy();this._mediaSound=null;}};FORGE.RenderManager.prototype._initCamera=function(sceneConfig)
{var sceneCameraConfig=(sceneConfig.camera);var storyCameraConfig=(this._viewer.mainConfig.camera);var extendedCameraConfig=(FORGE.Utils.extendMultipleObjects(storyCameraConfig,sceneCameraConfig));this._camera.load(extendedCameraConfig);};FORGE.RenderManager.prototype._initSound=function(sceneConfig)
{var soundConfig=(sceneConfig.sound);if(typeof soundConfig!=="undefined"&&typeof soundConfig.source!=="undefined")
{var volume,loop,startTime,autoPlay;if(typeof soundConfig.options!=="undefined")
{volume=(typeof soundConfig.options.volume==="number")?FORGE.Math.clamp(soundConfig.options.volume,0,1):1;loop=(typeof soundConfig.options.loop==="boolean")?soundConfig.options.loop:false;startTime=(typeof soundConfig.options.startTime==="number")?soundConfig.options.startTime:0;autoPlay=(typeof soundConfig.options.autoPlay==="boolean")?soundConfig.options.autoPlay:false;}
if(typeof soundConfig.source.url!=="undefined"&&soundConfig.source.url!=="")
{this._mediaSound=new FORGE.Sound(this._viewer,sceneConfig.sound.uid,sceneConfig.sound.source.url,(sceneConfig.sound.type===FORGE.SoundType.AMBISONIC));if(typeof soundConfig.options!=="undefined"&&soundConfig.options!==null)
{this._mediaSound.volume=volume;this._mediaSound.loop=loop;this._mediaSound.startTime=startTime;if(autoPlay===true)
{this._mediaSound.play(this._mediaSound.startTime,this._mediaSound.loop,true);}}}}};FORGE.RenderManager.prototype._onViewChangeHandler=function()
{if(this._backgroundRenderer!==null)
{this._backgroundRenderer.updateAfterViewChange();}
this._pickingManager.updateForViewType(this._viewManager.type);if(this._viewManager.type===FORGE.ViewType.RECTILINEAR)
{this._renderPipeline.enablePicking(false);}
else
{this._renderPipeline.enablePicking(true,this._pickingManager.material,this._pickingManager.renderTarget);}};FORGE.RenderManager.prototype._mediaLoadCompleteHandler=function(event)
{this.log("Media load is complete");var media=event.emitter;this._setBackgroundRendererType(this._renderDisplay.presentingVR);this._setBackgroundRenderer(this._backgroundRendererType);if(this._backgroundRenderer!==null)
{this._backgroundRenderer.displayObject=media.displayObject;}
this._setupRenderPipeline();};FORGE.RenderManager.prototype._mediaQualityChangeHandler=function(event)
{this.log("Media quality has changed");this._backgroundRenderer.displayObject=event.emitter;};FORGE.RenderManager.prototype._setupRenderPipeline=function()
{var fxSet=null;var sceneConfig=this._viewer.story.scene.config;var mediaConfig=sceneConfig.media;if(typeof mediaConfig!=="undefined"&&mediaConfig!==null&&typeof mediaConfig.fx!=="undefined"&&mediaConfig.fx!==null)
{fxSet=this._viewer.postProcessing.getFxSetByUID(mediaConfig.fx);}
if(this._backgroundRenderer!==null)
{this._renderPipeline.addBackground(this._backgroundRenderer.renderTarget.texture,fxSet,1.0);}
if(typeof sceneConfig.fx!=="undefined"&&sceneConfig.fx!==null)
{var globalFxSet=this._viewer.postProcessing.getFxSetByUID(sceneConfig.fx);this._renderPipeline.addGlobalFx(globalFxSet);}
this._renderPipelineReady=true;};FORGE.RenderManager.prototype._drawBackground=function(camera)
{if(this._backgroundRenderer===null)
{return;}
this._backgroundRenderer.render(camera||null);};FORGE.RenderManager.prototype._setRendererSize=function(size)
{var vr=this._renderDisplay.presentingVR;var keepCanvasStyle=true;if(vr===true)
{size=this._renderDisplay.rendererSize;keepCanvasStyle=false;}
else
{this._renderDisplay.setSize(size);}
this.log("set renderer size: "+size.width+"x"+size.height);this._webGLRenderer.setSize(size.width,size.height,keepCanvasStyle);this._canvasResolution=size;this._displayResolution=new FORGE.Size(size.width,size.height);if(vr===true)
{this._displayResolution.width*=0.5;}
if(this._backgroundRenderer!==null)
{this._backgroundRenderer.setSize(this._displayResolution);}
this._pickingManager.setSize(this._displayResolution);this._renderPipeline.setSize(this._displayResolution);this.log("render size change in "+(vr?"VR":"screen")+" mode, resolution: "+this._displayResolution.width+"x"+this._displayResolution.height);};FORGE.RenderManager.prototype._canvasResizeHandler=function()
{this.log("canvas resize handler");var canvas=this._viewer.canvas.dom;this._setRendererSize(new FORGE.Size(canvas.width,canvas.height));};FORGE.RenderManager.prototype._renderDisplayChangeHandler=function()
{this.log("render display change handler");this._setRendererSize(this._renderDisplay.rendererSize);if(this._renderDisplay.presentingVR===true)
{this._pickingManager.mode=FORGE.PickingManager.modes.GAZE;}
else
{this._pickingManager.mode=FORGE.PickingManager.modes.POINTER;}};FORGE.RenderManager.prototype._setBackgroundRenderer=function(type)
{this.log("set background renderer");var displayObject=null;var renderTarget=null;if(this._backgroundRenderer!==null)
{if(this._backgroundRenderer.displayObject!==null)
{displayObject=this._backgroundRenderer.displayObject;}
if(this._backgroundRenderer.renderTarget!==null)
{renderTarget=this._backgroundRenderer.renderTarget;}}
this._clearBackgroundRenderer();var config={};var media=this._viewer.story.scene.media;var mediaConfig=media.config;if(typeof mediaConfig!=="undefined"&&mediaConfig!==null)
{config.type=mediaConfig.type;if(typeof mediaConfig.source!=="undefined"&&mediaConfig.source!==null)
{config.mediaFormat=mediaConfig.source.format;var ratio=media.displayObject.element.width / media.displayObject.element.height||1;if(typeof mediaConfig.source.fov!=="undefined")
{var vFov;if(typeof mediaConfig.source.fov==="number")
{vFov=mediaConfig.source.fov.vertical;}
else if(typeof mediaConfig.source.fov.vertical==="number")
{vFov=mediaConfig.source.fov.vertical;}
else if(typeof mediaConfig.source.fov.horizontal==="number")
{vFov=mediaConfig.source.fov.horizontal / ratio;}
else if(typeof mediaConfig.source.fov.diagonal==="number")
{vFov=mediaConfig.source.fov.diagonal / Math.sqrt(1+ratio*ratio);}
else
{vFov=90;}
config.verticalFov=FORGE.Math.degToRad(vFov);}}
if(typeof mediaConfig.options!=="undefined"&&mediaConfig.options!==null)
{if(typeof mediaConfig.options.color!=="undefined")
{config.color=mediaConfig.options.color;}}}
if(type===FORGE.BackgroundType.SHADER)
{this.log("Create background shader renderer");this._backgroundRenderer=new FORGE.BackgroundShaderRenderer(this._viewer,renderTarget,config);var size=this._webGLRenderer.getSize();this._setRendererSize(new FORGE.Size(size.width,size.height));}
else if(type===FORGE.BackgroundType.MESH)
{this.log("Create background mesh renderer");if(typeof mediaConfig!=="undefined"&&mediaConfig!==null)
{if(typeof mediaConfig.source!=="undefined"&&mediaConfig.source!==null)
{config.order=mediaConfig.source.order||"RLUDFB";if(typeof mediaConfig.source.tile==="number")
{config.tile=mediaConfig.source.tile;}
else if(Array.isArray(mediaConfig.source.levels)&&typeof mediaConfig.source.levels[0].tile==="number")
{config.tile=mediaConfig.source.levels[0].tile;}}}
this._backgroundRenderer=new FORGE.BackgroundMeshRenderer(this._viewer,renderTarget,config);}
else
{
//@todo not implemented}
if(displayObject!==null)
{this._backgroundRenderer.displayObject=displayObject;}
if(this._backgroundRenderer!==null)
{this._backgroundRenderer.updateAfterViewChange();}
this._backgroundReady=true;if(this._onBackgroundReady!==null)
{this._onBackgroundReady.dispatch();}};FORGE.RenderManager.prototype._setBackgroundRendererType=function(vrEnabled)
{this.log("set background renderer type");var media=this._viewer.story.scene.media;if(media.type===FORGE.MediaType.UNDEFINED)
{this._backgroundRendererType=FORGE.BackgroundType.UNDEFINED;return;}
if(vrEnabled===true)
{this.log("VR on - background type = MESH");this._backgroundRendererType=FORGE.BackgroundType.MESH;return;}
var mediaConfig=media.config;if(mediaConfig.type===FORGE.MediaType.GRID)
{this._backgroundRendererType=FORGE.BackgroundType.MESH;}
else if(typeof mediaConfig.source==="undefined"|| mediaConfig.source.format===FORGE.MediaFormat.CUBE|| mediaConfig.source.format===FORGE.MediaFormat.FLAT||typeof mediaConfig.source==="undefined"||typeof mediaConfig.source.format==="undefined")
{if(this._viewManager.current.type===FORGE.ViewType.FLAT)
{this._backgroundRendererType=FORGE.BackgroundType.SHADER;}
else
{this._backgroundRendererType=FORGE.BackgroundType.MESH;}}
else
{this._backgroundRendererType=FORGE.BackgroundType.SHADER;}
if(typeof mediaConfig.source==="undefined"||typeof mediaConfig.source.format==="undefined")
{this.log("VR off - view "+this._viewManager.current.type+", background type = "+this._backgroundRendererType);}
else
{this.log("VR off - media "+mediaConfig.source.format+", view "+this._viewManager.current.type+", background type = "+this._backgroundRendererType);}};FORGE.RenderManager.prototype._clearBackgroundRenderer=function()
{this.log("clear background renderer");if(this._backgroundRenderer!==null)
{this._backgroundRenderer.destroy();this._backgroundRenderer=null;}
this._backgroundReady=false;};FORGE.RenderManager.prototype.update=function()
{this._camera.update();};FORGE.RenderManager.prototype.render=function()
{if(this._viewManager===null||this._renderPipelineReady===false||this._renderPipeline===null)
{return;}
if(this._onBeforeRender!==null)
{this._onBeforeRender.dispatch();}
if(this._backgroundRenderer!==null)
{this._backgroundRenderer.update();}
var vr=this._renderDisplay.presentingVR;var renderParams=this._renderDisplay.getRenderParams();for(var i=0,ii=renderParams.length;i<ii;i++)
{var params=renderParams[i];var rect=params.rectangle;var camera=params.camera;this._webGLRenderer.setViewport(rect.origin.x,rect.origin.y,rect.size.width,rect.size.height);this._drawBackground((vr===true)?camera:null);this._renderPipeline.render(camera);this._webGLRenderer.clearDepth();if(vr===true)
{var scene=new THREE.Scene();scene.add(camera);this._webGLRenderer.render(scene,camera);}}
if(this._renderDisplay.presentingVR===true)
{this._renderDisplay.submitFrame();}
if(this._onAfterRender!==null)
{this._onAfterRender.dispatch();}};FORGE.RenderManager.prototype.enableVR=function()
{if(this._renderDisplay.presentingVR===true||FORGE.Device.webVR!==true)
{return;}
this._renderDisplay.enableVR();this._viewManager.enableVR();var sceneConfig=this._viewer.story.scene.config;if(typeof sceneConfig.media!=="undefined"&&sceneConfig.media!==null&&typeof sceneConfig.media.source!=="undefined"&&sceneConfig.media.source!==null&&sceneConfig.media.source.format===FORGE.MediaFormat.EQUIRECTANGULAR)
{this._setBackgroundRenderer(FORGE.BackgroundType.MESH);}};FORGE.RenderManager.prototype.disableVR=function()
{if(this._renderDisplay.presentingVR===false||FORGE.Device.webVR!==true)
{return;}
this._renderDisplay.disableVR();this._viewManager.disableVR();var sceneConfig=this._viewer.story.scene.config;var mediaConfig=sceneConfig.media;if(typeof mediaConfig!=="undefined"&&mediaConfig!==null&&typeof mediaConfig.source!=="undefined"&&mediaConfig.source!==null&&mediaConfig.source.format===FORGE.MediaFormat.EQUIRECTANGULAR)
{this._setBackgroundRendererType(false);this._setBackgroundRenderer(this._backgroundRendererType);}};FORGE.RenderManager.prototype.toggleVR=function()
{if(this._renderDisplay.presentingVR===true)
{this.disableVR();}
else
{this.enableVR();}};FORGE.RenderManager.prototype.destroy=function()
{this._viewer.canvas.onResize.remove(this._canvasResizeHandler,this);this._viewer.story.onSceneLoadStart.remove(this._onSceneLoadStartHandler,this);this._viewer.onReady.remove(this._onViewerReady,this);if(this._pickingManager!==null)
{this._pickingManager.destroy();this._pickingManager=null;}
if(this._onBackgroundReady!==null)
{this._onBackgroundReady.destroy();this._onBackgroundReady=null;}
if(this._mediaSound!==null)
{this._mediaSound.destroy();this._mediaSound=null;}
if(this._objectRenderer!==null)
{this._objectRenderer.destroy();this._objectRenderer=null;}
if(this._viewManager!==null)
{this._viewManager.destroy();this._viewManager=null;}
if(this._backgroundRenderer!==null)
{this._backgroundRenderer.destroy();this._backgroundRenderer=null;}
if(this._camera!==null)
{this._camera.destroy();this._camera=null;}
if(this._renderDisplay!==null)
{this._renderDisplay.onDisplayChange.remove(this._renderDisplayChangeHandler,this);this._renderDisplay.destroy();this._renderDisplay=null;}
if(this._renderPipeline!==null)
{this._renderPipeline.destroy();this._renderPipeline=null;}
if(this._onBeforeRender!==null)
{this._onBeforeRender.destroy();this._onBeforeRender=null;}
if(this._onAfterRender!==null)
{this._onAfterRender.destroy();this._onAfterRender=null;}
this._clock=null;this._webGLRenderer=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.RenderManager.prototype,"viewer",{get:function()
{return this._viewer;}});Object.defineProperty(FORGE.RenderManager.prototype,"mediaSound",{get:function()
{return this._mediaSound;}});Object.defineProperty(FORGE.RenderManager.prototype,"webGLRenderer",{get:function()
{return this._webGLRenderer;}});Object.defineProperty(FORGE.RenderManager.prototype,"renderPipeline",{get:function()
{return this._renderPipeline;}});Object.defineProperty(FORGE.RenderManager.prototype,"backgroundRenderer",{get:function()
{return this._backgroundRenderer;}});Object.defineProperty(FORGE.RenderManager.prototype,"pickingManager",{get:function()
{return this._pickingManager;}});Object.defineProperty(FORGE.RenderManager.prototype,"view",{get:function()
{return this._viewManager;}});Object.defineProperty(FORGE.RenderManager.prototype,"camera",{get:function()
{return this._camera;}});Object.defineProperty(FORGE.RenderManager.prototype,"canvasResolution",{get:function()
{return this._canvasResolution;}});Object.defineProperty(FORGE.RenderManager.prototype,"displayResolution",{get:function()
{return this._displayResolution;}});Object.defineProperty(FORGE.RenderManager.prototype,"presentingVR",{get:function()
{return this._renderDisplay.presentingVR;}});Object.defineProperty(FORGE.RenderManager.prototype,"display",{get:function()
{return this._renderDisplay;}});Object.defineProperty(FORGE.RenderManager.prototype,"backgroundReady",{get:function()
{return this._backgroundReady;}});Object.defineProperty(FORGE.RenderManager.prototype,"objects",{get:function()
{return this._objectRenderer;}});Object.defineProperty(FORGE.RenderManager.prototype,"onBackgroundReady",{get:function()
{if(this._onBackgroundReady===null)
{this._onBackgroundReady=new FORGE.EventDispatcher(this,true);}
return this._onBackgroundReady;}});Object.defineProperty(FORGE.RenderManager.prototype,"onBeforeRender",{get:function()
{if(this._onBeforeRender===null)
{this._onBeforeRender=new FORGE.EventDispatcher(this);}
return this._onBeforeRender;}});Object.defineProperty(FORGE.RenderManager.prototype,"onAfterRender",{get:function()
{if(this._onAfterRender===null)
{this._onAfterRender=new FORGE.EventDispatcher(this);}
return this._onAfterRender;}});FORGE.RenderScene=function(viewer,scene,camera,fxConfig)
{this._viewer=viewer;this._scene=scene;this._camera=camera;this._fxConfig=fxConfig;this._sceneComposer=null;this._pickingComposer=null;FORGE.BaseObject.call(this,"RenderScene");this._boot();};FORGE.RenderScene.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.RenderScene.prototype.constructor=FORGE.RenderScene;FORGE.RenderScene.prototype._boot=function()
{this._sceneComposer=new FORGE.EffectComposer(FORGE.EffectComposerType.RENDER,this._viewer.renderer.webGLRenderer);var renderPass=new FORGE.RenderPass(this._scene,this._camera);renderPass.position=FORGE.PassPosition.RENDER;this._sceneComposer.addPass(renderPass);var shaderPasses=this._parseShaderPasses(this._fxConfig);for(var j=0,jj=shaderPasses.length;j<jj;j++)
{var shaderPass=shaderPasses[j];shaderPass.renderToScreen=false;shaderPass.position=FORGE.PassPosition.RENDER;this._sceneComposer.addPass(shaderPass);}
this._pickingComposer=new FORGE.EffectComposer(FORGE.EffectComposerType.PICKING,this._viewer.renderer.webGLRenderer);var pickingPass=new FORGE.RenderPass(this._scene,this._camera);pickingPass.position=FORGE.PassPosition.RENDER;this._pickingComposer.addPass(pickingPass);};FORGE.RenderScene.prototype._parseShaderPasses=function(config)
{return this._viewer.postProcessing.parseShaderPasses(config);};FORGE.RenderScene.prototype.setSize=function(width,height)
{this._sceneComposer.setSize(width,height);this._pickingComposer.setSize(width,height);};FORGE.RenderScene.prototype.destroy=function()
{this._sceneComposer.readBuffer.dispose();this._sceneComposer.writeBuffer.dispose();while(this._sceneComposer.passes.length>0)
{var pass=this._sceneComposer.passes.pop();if(pass instanceof FORGE.TexturePass&&pass.hasOwnProperty("tDiffuse"))
{pass.uniforms["tDiffuse"].value.texture.dispose();pass.uniforms["tDiffuse"].value=null;}}
this._sceneComposer=null;this._pickingComposer.passes.length=0;this._pickingComposer=null;this._viewer=null;this._scene=null;this._camera=null;this._fxConfig=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.RenderScene.prototype,"scene",{get:function()
{return this._scene;}});Object.defineProperty(FORGE.RenderScene.prototype,"camera",{get:function()
{return this._camera;}});Object.defineProperty(FORGE.RenderScene.prototype,"sceneComposer",{get:function()
{return this._sceneComposer;}});Object.defineProperty(FORGE.RenderScene.prototype,"pickingComposer",{get:function()
{return this._pickingComposer;}});FORGE.RenderPipeline=function(viewer)
{this._viewer=viewer;this._renderComposer=null;this._subComposers=null;this._clock=null;this._enabled=true;FORGE.BaseObject.call(this,"RenderPipeline");this._boot();};FORGE.RenderPipeline.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.RenderPipeline.prototype.constructor=FORGE.RenderPipeline;FORGE.RenderPipeline.prototype._boot=function()
{this._clock=new THREE.Clock();this._subComposers=[];this._renderComposer=new FORGE.EffectComposer(FORGE.EffectComposerType.MAIN,this._viewer.renderer.webGLRenderer);};FORGE.RenderPipeline.prototype._getPassType=function(pass)
{if(pass instanceof FORGE.TexturePass)
{if(pass.hasOwnProperty("map"))
{var uid=pass.map.uuid.split("-")[0].slice(0,4);return"Texture("+uid+")";}
return"Texture";}
if(pass instanceof FORGE.RenderPass)
{return"Render";}
if(pass instanceof THREE.ClearMaskPass)
{return"ClearMask";}
if(pass instanceof THREE.MaskPass)
{return"Mask";}
if(pass instanceof FORGE.ShaderPass)
{return"Shader("+pass.type.replace("Shader","")+")";}
return"Pass";};FORGE.RenderPipeline.prototype._dumpComposer=function(composer)
{this.log("COMPOSER: "+composer.name);if(composer.passes.length===0)
{return;}
var types=[];var typesLength=0;for(var i=0,ii=composer.passes.length;i<ii;i++)
{var typei=this._getPassType(composer.passes[i]);types.push(typei);typesLength+=typei.length;}
var hdft="";for(var j=0,jj=types.length;j<jj;j++)
{var type=types[j];hdft+="| ";for(var m=0;m<type.length;m++)
{hdft+="-";}
hdft+=" |";if(j<jj-1)
{for(var l=0;l<5;l++)
{hdft+=" ";}}}
this.log(hdft);var line="";for(var k=0,kk=types.length;k<kk;k++)
{var typek=types[k];line+="| "+typek+" |";if(k<kk-1)
{line+=" --- ";}}
if(composer.passes[composer.passes.length-1].renderToScreen===false)
{line+=" --- tex";if(composer.readBuffer!==null&&typeof composer.readBuffer.name!=="undefined")
{line+="("+composer.readBuffer.name+")";};}
this.log(line);this.log(hdft);};FORGE.RenderPipeline.prototype._dumpPipeline=function()
{for(var i=0,ii=this._subComposers.length;i<ii;i++)
{var composer=this._subComposers[i];this._dumpComposer(composer);}
this._dumpComposer(this._renderComposer);};FORGE.RenderPipeline.prototype._addSubComposer=function(subComposer,renderToTarget)
{this._subComposers.push(subComposer);if(renderToTarget===false)
{var additionPass=new FORGE.AdditionPass(subComposer);this._renderComposer.addPass(additionPass);}
this._updateRenderPipeline();};FORGE.RenderPipeline.prototype._addShaderPasses=function(composer,passes,index)
{index=typeof index!=="undefined"?index:composer.passes.length;if(Array.isArray(passes))
{for(var i=passes.length-1;i>=0;i--)
{var shaderPass=passes[i];composer.insertPass(shaderPass,index);}}
else if(passes instanceof THREE.Pass)
{var shaderThreePass=passes;composer.insertPass(shaderThreePass,index);}};FORGE.RenderPipeline.prototype._setComposerShaderPassesStatus=function(composer,status)
{if(status===false)
{this._enabled=false;}
for(var i=composer.passes.length-1;i>=0;i--)
{var pass=composer.passes[i];if(pass instanceof THREE.ShaderPass)
{if(pass instanceof FORGE.AdditionPass)
{continue;}
pass.enabled=status;}}
if(composer.hasOwnProperty("enabled"))
{composer.enabled=status;}
this._updateRenderPipeline();};FORGE.RenderPipeline.prototype._setAllShaderPassesStatus=function(status)
{var composers=this._subComposers.concat(this._renderComposer);for(var i=0,ii=composers.length;i<ii;i++)
{var composer=composers[i];this._setComposerShaderPassesStatus(composer,status);}
this._enabled=status;};FORGE.RenderPipeline.prototype._updateRenderPipeline=function()
{var passes=this._renderComposer.passes;var backgrounds=[];passes.filter(function(element,index)
{if(element.position===FORGE.PassPosition.BACKGROUND)
{backgrounds.push(index);}});if(backgrounds.length>0&&backgrounds[0]>0)
{var bgdPasses=[];for(var i=backgrounds.length-1;i>=0;i--)
{var index=backgrounds[i];var passi=passes.splice(index,1)[0];bgdPasses.push(passi);}
for(var j=0,jj=bgdPasses.length;j<jj;j++)
{this._renderComposer.insertPass(bgdPasses[j],0);}}
var globals=[];passes.filter(function(element,index)
{if(element.position===FORGE.PassPosition.GLOBAL)
{globals.push(index);}});if(globals.length>0&&globals[globals.length-1]<passes.length-1)
{var globalPasses=[];for(var k=0,kk=globals.length;k<kk;k++)
{var indexk=globals[k];var passk=passes.splice(indexk,1)[0];globalPasses.push(passk);}
for(var l=0,ll=globalPasses.length;l<ll;l++)
{var passl=globalPasses[l];this._renderComposer.addPass(passl);}}
for(var m=0,mm=this._subComposers.length;m<mm;m++)
{var composer=this._subComposers[m];var sharingTarget=false;var s,ss=this._subComposers.length;for(s=0;s<ss;s++)
{if(s===m)
{continue;}
var anotherComposer=this._subComposers[s];if(composer.readBuffer===anotherComposer.readBuffer)
{sharingTarget=true;break;}}
sharingTarget=sharingTarget&&(m>s);for(var n=0,nn=composer.passes.length;n<nn;n++)
{var passn=composer.passes[n];if(sharingTarget===true)
{passn.clear=false;}
else
{passn.clear=(n===0);}}}
var rts=false;for(var p=passes.length-1;p>=0;p--)
{var passp=passes[p];if(rts===true)
{passp.renderToScreen=false;}
else if(passp.enabled===true)
{passp.renderToScreen=true;rts=true;}}
this._dumpPipeline();};FORGE.RenderPipeline.prototype._setupDefaultBackground=function()
{var canvas=document.createElement("canvas");canvas.width=canvas.height=1;var context=canvas.getContext("2d");context.fillStyle="rgb(0, 0, 0)";context.fillRect(0,0,canvas.width,canvas.height);var defaultTexture=new THREE.TextureLoader().load(canvas.toDataURL());defaultTexture.name="forge-default-texture";this.addBackground(defaultTexture,null,0);};FORGE.RenderPipeline.prototype._setAllRenderPassCamera=function(camera)
{var composers=this._subComposers.concat(this._renderComposer);for(var i=0,ii=composers.length;i<ii;i++)
{var composer=composers[i];for(var j=0,jj=composer.passes.length;j<jj;j++)
{var pass=composer.passes[j];if(pass instanceof FORGE.RenderPass)
{pass.camera=camera;}}}};FORGE.RenderPipeline.prototype.enablePicking=function(status,material,renderTarget)
{for(var i=0,ii=this._subComposers.length;i<ii;i++)
{var composer=this._subComposers[i];if(composer.type===FORGE.EffectComposerType.PICKING)
{composer.enabled=status;if(typeof material!=="undefined")
{composer.passes[0].overrideMaterial=material;}
if(typeof renderTarget!=="undefined")
{composer.renderTarget=renderTarget;}}}};FORGE.RenderPipeline.prototype.addBackground=function(texture,fxSet,opacity)
{if(typeof fxSet!=="undefined"&&fxSet!==null&&fxSet.length>0)
{var shaderPasses=this._viewer.postProcessing.parseShaderPasses(fxSet);for(var i=0,ii=shaderPasses.length;i<ii;i++)
{var pass=shaderPasses[i];pass.position=FORGE.PassPosition.BACKGROUND;}
this._addShaderPasses(this._renderComposer,shaderPasses,0);}
var texturePass=new FORGE.TexturePass(texture,opacity);texturePass.position=FORGE.PassPosition.BACKGROUND;this._renderComposer.insertPass(texturePass,0);this._updateRenderPipeline();};FORGE.RenderPipeline.prototype.addRenderScenes=function(renderScenes)
{for(var i=0,ii=renderScenes.length;i<ii;i++)
{this._addSubComposer(renderScenes[i].sceneComposer,false);this._addSubComposer(renderScenes[i].pickingComposer,true);}
this._updateRenderPipeline();};FORGE.RenderPipeline.prototype.addGlobalFx=function(fxSet)
{var shaderPasses=this._viewer.postProcessing.parseShaderPasses(fxSet);for(var i=0,ii=shaderPasses.length;i<ii;i++)
{var pass=shaderPasses[i];pass.position=FORGE.PassPosition.GLOBAL;}
this._addShaderPasses(this._renderComposer,shaderPasses);this._updateRenderPipeline();};FORGE.RenderPipeline.prototype.getShaderPassByUID=function(uid)
{if(this._renderComposer!==null)
{for(var i=0,ii=this._renderComposer.passes.length;i<ii;i++)
{var pass=this._renderComposer.passes[i];if(pass.uid===uid)
{return pass;}}}
if(this._subComposers!==null)
{for(var k=0,kk=this._subComposers.length;k<kk;k++)
{var composer=this._subComposers[k];for(var j=0,jj=composer.passes.length;j<jj;j++)
{var subPass=composer.passes[j];if(subPass.uid===uid)
{return subPass;}}}}
return null;};FORGE.RenderPipeline.prototype.setSize=function(size)
{for(var i=0,ii=this._subComposers.length;i<ii;i++)
{var composer=this._subComposers[i];composer.setSize(size.width,size.height);for(var c=0,cc=composer.passes.length;c<cc;c++)
{var pass=composer.passes[c];if(pass instanceof THREE.ShaderPass)
{if(typeof pass.uniforms.resolution!=="undefined")
{pass.uniforms.resolution.value=new THREE.Vector2(1 / size.width,1 / size.height);}}}}
this._renderComposer.setSize(size.width,size.height);for(var c=0,cc=this._renderComposer.passes.length;c<cc;c++)
{var pass=this._renderComposer.passes[c];if(pass instanceof THREE.ShaderPass)
{if(typeof pass.uniforms.resolution!=="undefined")
{pass.uniforms.resolution.value=new THREE.Vector2(1 / size.width,1 / size.height);}}}};FORGE.RenderPipeline.prototype.render=function(camera)
{if(this._renderComposer===null)
{return;}
if(!(this._renderComposer.passes[0]instanceof FORGE.TexturePass))
{this._setupDefaultBackground();}
for(var i=0,ii=this._renderComposer.passes.length;i<ii;i++)
{var pass=this._renderComposer.passes[i];if(pass instanceof FORGE.AdditionPass)
{var composer=pass.composer;var lastPass=composer.passes[composer.passes.length-1];var texture=composer.readBuffer.texture;if(typeof lastPass!=="undefined"&&lastPass.needsSwap===true)
{texture=composer.writeBuffer.texture;}
pass.uniforms["tAdd"].value=texture;}}
var delta=this._clock.getDelta();this._setAllRenderPassCamera(camera);for(var j=0,jj=this._subComposers.length;j<jj;j++)
{if(this._subComposers[j].enabled)
{this._subComposers[j].render(delta);}}
this._renderComposer.render(delta);};FORGE.RenderPipeline.prototype.clear=function()
{if(this._renderComposer!==null)
{this._renderComposer.readBuffer.dispose();this._renderComposer.writeBuffer.dispose();for(var i=0,ii=this._renderComposer.passes.length;i<ii;i++)
{var pass=this._renderComposer.passes[i];if(pass instanceof FORGE.ShaderPass&&pass.uniforms.hasOwnProperty("tAdd"))
{pass.uniforms["tAdd"].value=null;}}
this._renderComposer.passes=[];}
this._subComposers=[];};FORGE.RenderPipeline.prototype.destroy=function()
{this.clear();this._clock=null;for(var i=this._subComposers.length-1;i>0;i--)
{var composer=this._subComposers[i];for(var j=0,jj=composer.passes.length;j<jj;j++)
{var pass=composer.passes[j];if(typeof pass.destroy==="function")
{pass.destroy();}}
composer.passes.length=0;}
this._subComposers=null;for(var j=0,jj=this._renderComposer.passes.length;j<jj;j++)
{var pass=this._renderComposer.passes[j];if(typeof pass.destroy==="function")
{pass.destroy();}}
this._renderComposer.passes.length=0;this._renderComposer=null;this._viewer=null;};Object.defineProperty(FORGE.RenderPipeline.prototype,"enabled",{get:function()
{return this._enabled;},set:function(status)
{this._setAllShaderPassesStatus(status);}});FORGE.RenderDisplay=function(viewer)
{this._viewer=viewer;this._webVR=false;this._presentingVR=false;this._vrDisplay=null;this._leftBounds=null;this._rightBounds=null;this._rendererSize=null;this._rendererSizeScreen=null;this._rendererPixelRatio=1;this._frameData=null;this._onDisplayChange=null;FORGE.BaseObject.call(this,"RenderDisplay");this._boot();};FORGE.RenderDisplay.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.RenderDisplay.prototype.constructor=FORGE.RenderDisplay;FORGE.RenderDisplay.prototype._boot=function()
{var renderer=this._viewer.renderer.webGLRenderer;this._rendererPixelRatio=renderer.getPixelRatio();var size=renderer.getSize();this._rendererSizeScreen=new FORGE.Size(size.width,size.height);this._rendererSize=this._rendererSizeScreen;this._leftBounds=[0.0,0.0,0.5,1.0];this._rightBounds=[0.5,0.0,0.5,1.0];if("VRFrameData"in window)
{this._frameData=new VRFrameData();}
if(FORGE.Device.webVR===true)
{var self=this;navigator.getVRDisplays().then(function(displays)
{self._gotVRDisplays(displays);});this._addFullscreenListener();}
else
{this.warn("missing api navigator.getVRDisplays");}};FORGE.RenderDisplay.prototype._gotVRDisplays=function(displays,onError)
{this._webVR=displays.length>0;for(var i=0,ii=displays.length;i<ii;i++)
{if("VRDisplay"in window&&displays[i]instanceof VRDisplay)
{this._vrDisplay=displays[i];this._vrDisplay.depthNear=FORGE.RenderManager.DEPTH_NEAR;this._vrDisplay.depthFar=2*FORGE.RenderManager.DEPTH_FAR;break;}}
if(typeof this._vrDisplay==="undefined")
{if(typeof onError==="function")
{onError("HMD not available");}}};FORGE.RenderDisplay.prototype._addFullscreenListener=function()
{this._viewer.container.onFullscreenEnter.add(this._displayChangeHandler,this);this._viewer.container.onFullscreenExit.add(this._displayChangeHandler,this);window.addEventListener("vrdisplaypresentchange",this._displayChangeHandler.bind(this),false);};FORGE.RenderDisplay.prototype._removeFullscreenListener=function()
{this._viewer.container.onFullscreenEnter.remove(this._displayChangeHandler,this);this._viewer.container.onFullscreenExit.remove(this._displayChangeHandler,this);window.removeEventListener("vrdisplaypresentchange",this._displayChangeHandler.bind(this));};FORGE.RenderDisplay.prototype._displayChangeHandler=function()
{var wasPresentingVR=this._presentingVR;var renderer=this._viewer.renderer.webGLRenderer;this._presentingVR=typeof this._vrDisplay!=="undefined"&&(this._vrDisplay.isPresenting===true||(this._webVR===false&&document[FORGE.Device.fullscreenElement]instanceof window.HTMLElement));var displaySize;if(this._presentingVR===true)
{var eyeParamsL=this._vrDisplay.getEyeParameters("left");if(this._webVR===true)
{this._eyeWidth=eyeParamsL.renderWidth;this._eyeHeight=eyeParamsL.renderHeight;this.log("Window size: "+window.innerWidth+"x"+window.innerHeight);this.log("Render size: "+this._eyeWidth+"x"+this._eyeHeight);this._leftBounds=[0.0,0.0,0.5,1.0];this._rightBounds=[0.5,0.0,0.5,1.0];if(this._vrDisplay.getLayers)
{var layers=this._vrDisplay.getLayers();if(layers.length>0&&layers[0].leftBounds!==null&&layers[0].leftBounds.length===4)
{this._leftBounds=layers[0].leftBounds;this._rightBounds=layers[0].rightBounds;}}
this.log("Bounds L:["+this._leftBounds[0]+", "+this._leftBounds[1]+", "+this._leftBounds[2]+", "+this._leftBounds[3]+"], "+"R:["+this._rightBounds[0]+", "+this._rightBounds[1]+", "+this._rightBounds[2]+", "+this._rightBounds[3]+"]");}
if(wasPresentingVR===false)
{this._rendererPixelRatio=renderer.getPixelRatio();var size=renderer.getSize();this._rendererSizeScreen.width=size.width;this._rendererSizeScreen.height=size.height;this._rendererSize=new FORGE.Size(this._eyeWidth*2,this._eyeHeight);renderer.setPixelRatio(1);}}
else if(wasPresentingVR===true)
{this._rendererSize=this._rendererSizeScreen;renderer.setPixelRatio(this._rendererPixelRatio);}
if(this._presentingVR!==wasPresentingVR&&this._onDisplayChange!==null)
{this._onDisplayChange.dispatch();}};FORGE.RenderDisplay.prototype._setFullScreen=function(status)
{var canvas=this._viewer.renderer.webGLRenderer.domElement;return new Promise(function(resolve,reject)
{if(typeof this._vrDisplay==="undefined")
{reject(new Error("No VR hardware found."));return;}
if(this._presentingVR===status)
{resolve();return;}
if(this._webVR===true)
{if(status)
{resolve(this._vrDisplay.requestPresent([{source:canvas}]));}
else
{resolve(this._vrDisplay.exitPresent());}}}.bind(this));};FORGE.RenderDisplay.prototype._vrControlsReset=function()
{if(this._vrDisplay!==null)
{if(typeof this._vrDisplay.resetPose!=="undefined")
{this._vrDisplay.resetPose();}
else if(typeof this._vrDisplay.resetSensor!=="undefined")
{this._vrDisplay.resetSensor();}
else if(typeof this._vrDisplay.zeroSensor!=="undefined")
{this._vrDisplay.zeroSensor();}}};FORGE.RenderDisplay.prototype._requestPresent=function()
{this._viewer.raf.stop();this._viewer.raf.start(this._vrDisplay);return this._setFullScreen(true);};FORGE.RenderDisplay.prototype._exitPresent=function()
{this._viewer.raf.stop();this._viewer.raf.start(window);return this._setFullScreen(false);};FORGE.RenderDisplay.prototype.enableVR=function()
{this._requestPresent();};FORGE.RenderDisplay.prototype.disableVR=function()
{this._exitPresent();};FORGE.RenderDisplay.prototype.getQuaternionFromPose=function()
{if(this._vrDisplay===null)
{return null;}
var pose=null;if(this._frameData!==null&&typeof this._frameData.pose!=="undefined")
{pose=this._frameData.pose;}
else
{pose=this._vrDisplay.getPose();}
if(pose===null||pose.orientation===null)
{return new THREE.Quaternion();}
var o=pose.orientation;return new THREE.Quaternion(-o[1],-o[0],-o[2],o[3]);};FORGE.RenderDisplay.prototype.getRenderParams=function()
{var renderer=this._viewer.renderer.webGLRenderer;var canvas=renderer.domElement;var camera=this._viewer.renderer.camera;var renderParams=[];if(typeof this._vrDisplay!=="undefined"&&this._vrDisplay!==null&&this._presentingVR===true)
{var rx=this._rendererSize.width*this._leftBounds[0],ry=this._rendererSize.height*this._leftBounds[1],rw=this._rendererSize.width*this._leftBounds[2],rh=this._rendererSize.height*this._leftBounds[3];var renderRectL=new FORGE.Rectangle(rx,ry,rw,rh);rx=this._rendererSize.width*this._rightBounds[0];ry=this._rendererSize.height*this._rightBounds[1];rw=this._rendererSize.width*this._rightBounds[2];rh=this._rendererSize.height*this._rightBounds[3];var renderRectR=new FORGE.Rectangle(rx,ry,rw,rh);renderParams.push(new FORGE.RenderParams(renderRectL,camera.left));renderParams.push(new FORGE.RenderParams(renderRectR,camera.right));}
else
{var rectangle=new FORGE.Rectangle(0,0,this._rendererSizeScreen.width,this._rendererSizeScreen.height);var renderCamera=this._viewer.renderer.view.type===FORGE.ViewType.FLAT?camera.flat:camera.main;renderParams.push(new FORGE.RenderParams(rectangle,renderCamera));}
return renderParams;};FORGE.RenderDisplay.prototype.setSize=function(size)
{this._rendererSizeScreen=size;var renderer=this._viewer.renderer.webGLRenderer;renderer.setPixelRatio(1);};FORGE.RenderDisplay.prototype.submitFrame=function()
{if(this._webVR===true&&typeof this._vrDisplay!=="undefined"&&this._presentingVR===true)
{if(this._vrDisplay.capabilities.hasExternalDisplay===true)
{this._vrDisplay.submitFrame();}}};FORGE.RenderDisplay.prototype.destroy=function()
{this._removeFullscreenListener();this._vrDisplay=null;this._frameData=null;this._leftBounds=null;this._rightBounds=null;this._rendererSize=null;this._viewer=null;};Object.defineProperty(FORGE.RenderDisplay.prototype,"presentingVR",{get:function()
{return this._presentingVR;}});Object.defineProperty(FORGE.RenderDisplay.prototype,"vrDisplay",{get:function()
{return this._vrDisplay;}});Object.defineProperty(FORGE.RenderDisplay.prototype,"vrFrameData",{get:function()
{if(this._vrDisplay!==null&&typeof this._vrDisplay.getFrameData==="function"&&this._frameData!==null)
{this._vrDisplay.getFrameData(this._frameData);return this._frameData;}
return null;}});Object.defineProperty(FORGE.RenderDisplay.prototype,"rendererSize",{get:function()
{return this._rendererSize;}});Object.defineProperty(FORGE.RenderDisplay.prototype,"onDisplayChange",{get:function()
{if(this._onDisplayChange===null)
{this._onDisplayChange=new FORGE.EventDispatcher(this);}
return this._onDisplayChange;}});FORGE.RenderParams=function(rectangle,camera)
{this._rectangle=rectangle||null;this._camera=camera||null;};FORGE.RenderParams.prototype.constructor=FORGE.RenderParams;Object.defineProperty(FORGE.RenderParams.prototype,"rectangle",{get:function()
{return this._rectangle;}});Object.defineProperty(FORGE.RenderParams.prototype,"camera",{get:function()
{return this._camera;}});FORGE.BackgroundRenderer=function(viewer,target,options,type)
{this._viewer=viewer;this._canvas=null;this._mesh=null;this._scene=null;this._camera=null;this._mediaFormat=options.mediaFormat||FORGE.MediaFormat.CUBE;this._renderTarget=target|| null;FORGE.BaseObject.call(this,type||"BackgroundRenderer");this._boot();};FORGE.BackgroundRenderer.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.BackgroundRenderer.prototype.constructor=FORGE.BackgroundRenderer;FORGE.BackgroundRenderer.prototype._boot=function()
{this._scene=new THREE.Scene();if(this._renderTarget===null)
{var width=this._viewer.renderer.canvasResolution.width;var height=this._viewer.renderer.canvasResolution.height;var rtParams={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:false};this._renderTarget=new THREE.WebGLRenderTarget(width,height,rtParams);}};FORGE.BackgroundRenderer.prototype._setDisplayObject=function(displayObject)
{this.log(displayObject);
//@closurethrow"Please implement "+this._className+"::_setDisplayObject";};FORGE.BackgroundRenderer.prototype._clear=function()
{throw"Please implement "+this._className+"::_clear";};FORGE.BackgroundRenderer.prototype._updateTexture=function()
{if(this._texture===null||this._textureCanvas===null||this._textureContext===null||this._displayObject===null||this._displayObject.element===null||(FORGE.Utils.isTypeOf(this._displayObject,["VideoHTML5","VideoDash"])===true&&this._displayObject.playing===false))
{return;}
var video=this._displayObject.element;if(video instanceof HTMLVideoElement&&video.readyState===HTMLMediaElement.HAVE_ENOUGH_DATA)
{if(this._textureContext)
{this._textureContext.drawImage(video,0,0,video.videoWidth,video.videoHeight,0,0,this._textureCanvas.width,this._textureCanvas.height);this._texture.needsUpdate=true;this.log("texture update done");}}};FORGE.BackgroundRenderer.prototype.updateAfterViewChange=function()
{throw new Error(this._className+"::updateAfterViewChange not implemented");};FORGE.BackgroundRenderer.prototype.setSize=function(size)
{if(this.renderTarget!==null)
{this.renderTarget.setSize(size.width,size.height);}};FORGE.BackgroundRenderer.prototype.render=function(camera)
{if(this._viewer.renderer===null||this._renderTarget===null)
{return;}
this._updateTexture();if(camera!==null)
{this._viewer.renderer.webGLRenderer.render(this._scene,camera,this._renderTarget,true);}
else
{this._viewer.renderer.webGLRenderer.render(this._scene,this._camera,this._renderTarget,true);}};FORGE.BackgroundRenderer.prototype.update=function()
{if(this._mesh===null||!(this._mesh.material instanceof THREE.ShaderMaterial))
{return;}
var resolution=this._viewer.renderer.displayResolution;if(this._mesh.material.uniforms.hasOwnProperty("tViewportResolution"))
{this._mesh.material.uniforms.tViewportResolution.value=new THREE.Vector2(resolution.width,resolution.height);}
if(this._mesh.material.uniforms.hasOwnProperty("tViewportResolutionRatio"))
{this._mesh.material.uniforms.tViewportResolutionRatio.value=resolution.ratio;}
if(this._mesh.material.uniforms.hasOwnProperty("tModelViewMatrixInverse"))
{this._mesh.material.uniforms.tModelViewMatrixInverse.value=this._viewer.renderer.camera.modelViewInverse;}
this._viewer.renderer.view.current.updateUniforms(this._mesh.material.uniforms);};FORGE.BackgroundRenderer.prototype.destroy=function()
{this._camera=null;if(this._renderTarget!==null)
{this._renderTarget.dispose();this._renderTarget=null;}
while(this._scene.children.length>0)
{var mesh=this._scene.children.pop();if(mesh.geometry!==null)
{mesh.geometry.dispose();mesh.geometry=null;}
this._scene.remove(mesh);}
this._scene=null;this._viewer=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.BackgroundRenderer.prototype,"textureSize",{get:function()
{if(this._texture===null||typeof this._texture.image==="undefined")
{return null;}
return new FORGE.Size(this._texture.image.width,this._texture.image.height);}});Object.defineProperty(FORGE.BackgroundRenderer.prototype,"renderTarget",{get:function()
{return this._renderTarget;}});Object.defineProperty(FORGE.BackgroundRenderer.prototype,"displayObject",{get:function()
{return this._displayObject;},set:function(value)
{if(value===null)
{this._clear();}
else
{this._setDisplayObject(value);}}});Object.defineProperty(FORGE.BackgroundRenderer.prototype,"scene",{get:function()
{return this._scene;}});FORGE.BackgroundType={};FORGE.BackgroundType.UNDEFINED="undefined";FORGE.BackgroundType.SHADER="shader";FORGE.BackgroundType.MESH="mesh";FORGE.BackgroundMeshRenderer=function(viewer,target,options)
{this._displayObject=null;this._texture=null;this._textureCanvas=null;this._textureContext=null;this._mediaType=options.type||FORGE.MediaType.GRID;this._mediaVFov=options.verticalFov||90;this._gridColor=options.color||"#ffffff";this._layout=options.order||"RLUDFB";this._faces=new THREE.Vector2(0,0);this._tile=options.tile||512;this._size=0;this._subdivision=0;this._videoReductionFactor=1;FORGE.BackgroundRenderer.call(this,viewer,target,options,"BackgroundMeshRenderer");};FORGE.BackgroundMeshRenderer.prototype=Object.create(FORGE.BackgroundRenderer.prototype);FORGE.BackgroundMeshRenderer.prototype.constructor=FORGE.BackgroundMeshRenderer;FORGE.BackgroundMeshRenderer.DEFAULT_TEXTURE_NAME="Default Texture";FORGE.BackgroundMeshRenderer.prototype._boot=function()
{FORGE.BackgroundRenderer.prototype._boot.call(this);this._camera=this._viewer.renderer.camera.main;this._size=2*FORGE.RenderManager.DEPTH_FAR;this._subdivision=32;};FORGE.BackgroundMeshRenderer.prototype._setDisplayObject=function(displayObject)
{if(this._mesh===null)
{this._updateInternals();}
this._displayObject=displayObject;if(FORGE.Utils.isTypeOf(displayObject,"Image"))
{this._texture=new THREE.Texture();this._texture.image=displayObject.element;}
else if(FORGE.Utils.isTypeOf(displayObject,"Canvas"))
{this._texture=new THREE.Texture();this._texture.image=displayObject.element;}
else if(FORGE.Utils.isTypeOf(displayObject,["VideoHTML5","VideoDash"]))
{if(FORGE.Device.browser.toLowerCase()==="safari"&&displayObject.originalHeight>1440)
{this._videoReductionFactor=2;}
this._textureCanvas=document.createElement("canvas");this._textureCanvas.width=displayObject.originalWidth / this._videoReductionFactor;this._textureCanvas.height=displayObject.originalHeight / this._videoReductionFactor;this._textureContext=this._textureCanvas.getContext("2d");this._texture=new THREE.Texture(this._textureCanvas);}
else
{throw"Wrong type of display object "+displayObject.type;}
this._texture.format=THREE.RGBAFormat;this._texture.mapping=THREE.Texture.DEFAULT_MAPPING;if(typeof this._mesh.material.uniforms.tTextureRatio!=="undefined")
{this._mesh.material.uniforms.tTextureRatio.value=this._texture.image.width / this._texture.image.height;}
this._texture.generateMipmaps=false;this._texture.minFilter=THREE.LinearFilter;if(this._mediaFormat===FORGE.MediaFormat.FLAT)
{if(FORGE.Math.isPowerOfTwo(displayObject.width)&&FORGE.Math.isPowerOfTwo(displayObject.height))
{this._texture.generateMipmaps=true;this._texture.minFilter=THREE.LinearMipMapLinearFilter;}
if(this._mesh.geometry!=null)
{this._mesh.geometry.dispose();this._mesh.geometry=null;}
var canvasHeight=this._viewer.container.height;var canvasWidth=this._viewer.container.width;var canvasRatio=canvasWidth / canvasHeight;var texHeight=displayObject.height;var texRatio=displayObject.width / displayObject.height;var geomWidth=this._size;var geomHeight=Math.round(geomWidth / texRatio);var geomDepth=geomHeight /(2*Math.tan(0.5*this._mediaVFov));var geometry=new THREE.PlaneBufferGeometry(geomWidth,geomHeight);this._mesh.geometry=geometry;this._mesh.position.set(0,0,-geomDepth);var fovMax=FORGE.Math.radToDeg(2*Math.atan(0.5*geomHeight / geomDepth));var fovMin=FORGE.Math.radToDeg(2*Math.atan((0.5*geomHeight / geomDepth)*(canvasHeight / texHeight)));this.log("Flat rendering boundaries ["+fovMin.toFixed()+", "+fovMax.toFixed()+"]");}
this._texture.needsUpdate=true;this._mesh.material.wireframe=false;if(this._texture.image!==null)
{this._faces.x=this._texture.image.width / this._tile;this._faces.y=this._texture.image.height / this._tile;}
this._mesh.onBeforeRender=this._onBeforeRender.bind(this);var uvMap=this._setUVMapping();if(uvMap!==null)
{this._mesh.geometry.attributes.uv.set(uvMap);}};FORGE.BackgroundMeshRenderer.prototype._onBeforeRender=function()
{if(typeof this._mesh.material.uniforms==="undefined")
{return;}
if(this._mesh.material.uniforms.hasOwnProperty("tTexture"))
{this._mesh.material.uniforms.tTexture.value=this._texture;}
if(this._mesh.material.uniforms.hasOwnProperty("tOpacity"))
{this._mesh.material.uniforms.tOpacity.value=1.0;}};FORGE.BackgroundMeshRenderer.prototype._setUVMappingCube=function()
{var uvMap=new Float32Array((this._subdivision+1)*(this._subdivision+1)*6*2);var it=FORGE.Utils.arrayKeys(uvMap);var layout=this._layout.split("");var u=(1 / 1.01)*((1 / this._faces.x)/ this._subdivision);var v=(1 / 1.01)*((1 / this._faces.y)/ this._subdivision);var uto=0.005*(1 / this._faces.x);var vto=0.005*(1 / this._faces.y);function applyUVMapForFace(idx,x,y,sub,upOrDown)
{if(idx===-1)
{throw"Unknown face for cube mapping.";}
var i,j,ii,jj;var uo=(idx%x)/ x;var vo=1-((1+parseInt(idx / x,10))/ y);if(upOrDown)
{for(i=0,ii=sub;i<=ii;i++)
{for(j=0,jj=sub;j<=jj;j++)
{uvMap[it.next().value]=uto+u*j+uo;uvMap[it.next().value]=vto+v*i+vo;}}}
else
{for(i=0,ii=sub;i<=ii;ii--)
{for(j=0,jj=sub;j<=jj;jj--)
{uvMap[it.next().value]=uto+u*jj+uo;uvMap[it.next().value]=vto+v*ii+vo;}}}}
applyUVMapForFace(layout.indexOf("R"),this._faces.x,this._faces.y,this._subdivision);applyUVMapForFace(layout.indexOf("L"),this._faces.x,this._faces.y,this._subdivision);applyUVMapForFace(layout.indexOf("U"),this._faces.x,this._faces.y,this._subdivision,true);applyUVMapForFace(layout.indexOf("D"),this._faces.x,this._faces.y,this._subdivision,true);applyUVMapForFace(layout.indexOf("B"),this._faces.x,this._faces.y,this._subdivision);applyUVMapForFace(layout.indexOf("F"),this._faces.x,this._faces.y,this._subdivision);return uvMap;};FORGE.BackgroundMeshRenderer.prototype._setUVMappingSphere=function()
{var uvMap=new Float32Array(this._mesh.geometry.attributes.uv.array.byteLength / 4);var it=uvMap.keys();var div=this._subdivision;var d=1 / div;var ix,iy;for(iy=0;iy<=div;iy++)
{var v=iy*d;for(ix=0;ix<=div;ix++)
{var u=ix*d;uvMap[it.next().value]=1-u;uvMap[it.next().value]=1-v;}}
return uvMap;};FORGE.BackgroundMeshRenderer.prototype._setUVMapping=function()
{if(this._mesh.geometry instanceof THREE.BoxBufferGeometry)
{return this._setUVMappingCube();}
if(this._mesh.geometry instanceof THREE.SphereBufferGeometry)
{return this._setUVMappingSphere();}
return null;};FORGE.BackgroundMeshRenderer.prototype._clear=function()
{this._viewer.renderer.webGLRenderer.clearColor();};FORGE.BackgroundMeshRenderer.prototype._addQuadrilateralCoordsAttribute=function()
{if(this._mesh===null||typeof this._mesh.geometry==="undefined")
{return;}
var size=this._mesh.geometry.attributes.position.array.length*2 / 3;var quadri=new Int8Array(size);var it=FORGE.Utils.arrayKeys(quadri);var qa=new THREE.Vector2(1,1);var qb=new THREE.Vector2(1,-1);var qc=new THREE.Vector2(-1,1);var qd=new THREE.Vector2(-1,-1);var ipd=this._subdivision+1;for(var f=0;f<6;f++)
{for(var r=0;r<ipd;r++)
{var q0,q1;if(r&1)
{q0=qa;q1=qb;}
else
{q0=qc;q1=qd;}
for(var c=0;c<ipd;c++)
{if(c&1)
{quadri[it.next().value]=q1.x;quadri[it.next().value]=q1.y;}
else
{quadri[it.next().value]=q0.x;quadri[it.next().value]=q0.y;}}}}
this._mesh.geometry.addAttribute("quadrilateralCoords",new THREE.BufferAttribute(quadri,2));};FORGE.BackgroundMeshRenderer.prototype._updateInternals=function()
{if(this._viewer.renderer.view.current===null)
{this.log("Background renderer cannot update internals without a defined view");return;}
var shader;if(this._mediaType===FORGE.MediaType.GRID)
{shader=FORGE.Utils.clone(this._viewer.renderer.view.current.shaderWTS).wireframe;this.log("Media "+this._mediaType+", use wireframe shader");this._subdivision=8;}
else
{shader=FORGE.Utils.clone(this._viewer.renderer.view.current.shaderWTS).mapping;this.log("Media "+this._mediaType+", use mapping shader");}
var vertexShader=FORGE.ShaderLib.parseIncludes(shader.vertexShader);var fragmentShader=FORGE.ShaderLib.parseIncludes(shader.fragmentShader);var material=new THREE.RawShaderMaterial({fragmentShader:fragmentShader,vertexShader:vertexShader,uniforms:(shader.uniforms),name:"BackgroundMeshMaterial",transparent:true,side:THREE.BackSide});var geometry=null;if(this._texture!==null)
{if(this._mesh.material.uniforms.hasOwnProperty("tTexture"))
{material.uniforms.tTexture.value=this._texture;}
if(this._mesh.material.uniforms.hasOwnProperty("tTextureRatio"))
{material.uniforms.tTextureRatio.value=this._texture.image.width / this._texture.image.height;}}
if(this._mediaType===FORGE.MediaType.GRID)
{material.uniforms.tColor.value=new THREE.Color(this._gridColor);material.blending=THREE.CustomBlending;material.blendEquationAlpha=THREE.AddEquation;material.blendSrcAlpha=THREE.SrcAlphaFactor;material.blendDstAlpha=THREE.OneMinusSrcAlphaFactor;}
if(this._scene.children.length===0)
{if(this._mediaFormat===FORGE.MediaFormat.EQUIRECTANGULAR)
{this._subdivision=64;geometry=new THREE.SphereBufferGeometry(this._size,this._subdivision,this._subdivision);this.log("Create sphere geometry");}
else if(this._mediaFormat===FORGE.MediaFormat.FLAT)
{geometry=new THREE.PlaneBufferGeometry(this._size,this._size);this.log("Create plane geometry");}
else
{geometry=new THREE.BoxBufferGeometry(this._size,this._size,this._size,this._subdivision,this._subdivision,this._subdivision);this.log("Create box geometry");}
this._mesh=new THREE.Mesh(geometry,material);if(this._mediaType===FORGE.MediaType.GRID)
{this._addQuadrilateralCoordsAttribute();}
if(this._mediaFormat===FORGE.MediaFormat.FLAT)
{this._mesh.position.set(0,0,-this._size*0.5);this._mesh.material.side=THREE.FrontSide;}
if(this._mediaFormat===FORGE.MediaFormat.EQUIRECTANGULAR)
{this._mesh.rotation.set(0,Math.PI / 2,0,"YXZ");}
this._scene.add(this._mesh);}
else
{this._mesh=(this._scene.children[0]);this._mesh.material.dispose();}
this._mesh.material=material;material.needsUpdate=true;};FORGE.BackgroundMeshRenderer.prototype.updateAfterViewChange=function()
{this._updateInternals();if(typeof this._mesh.material.uniforms.tTextureRatio!=="undefined")
{this._mesh.material.uniforms.tTextureRatio.value=this._texture.image.width / this._texture.image.height;}};FORGE.BackgroundMeshRenderer.prototype.render=function(camera)
{if(this._viewer.renderer===null)
{return;}
FORGE.BackgroundRenderer.prototype.render.call(this,camera);};FORGE.BackgroundMeshRenderer.prototype.destroy=function()
{this._clear();this._displayObject=null;this._textureCanvas=null;this._textureContext=null;if(this._mesh!==null)
{this.log("Destroy mesh (dispose geometry and material)");if(this._mesh.geometry!==null)
{this._mesh.geometry.dispose();this._mesh.geometry=null;}
if(this._mesh.material!==null)
{this._mesh.material.dispose();this._mesh.material=null;}
this._mesh=null;}
if(this._texture!==null)
{this._texture.dispose();this._texture=null;}
FORGE.BackgroundRenderer.prototype.destroy.call(this);};Object.defineProperty(FORGE.BackgroundMeshRenderer.prototype,"texture",{get:function()
{return this._texture;}});FORGE.BackgroundShaderRenderer=function(viewer,target,options)
{this._displayObject=null;this._texture=null;this._textureCanvas=null;this._textureContext=null;this._videoReductionFactor=1;FORGE.BackgroundRenderer.call(this,viewer,target,options,"BackgroundShaderRenderer");};FORGE.BackgroundShaderRenderer.prototype=Object.create(FORGE.BackgroundRenderer.prototype);FORGE.BackgroundShaderRenderer.prototype.constructor=FORGE.BackgroundShaderRenderer;FORGE.BackgroundShaderRenderer.prototype._boot=function()
{FORGE.BackgroundRenderer.prototype._boot.call(this);this._updateInternals();this._camera=new THREE.OrthographicCamera(-1,1,1,-1,-1,1);};FORGE.BackgroundShaderRenderer.prototype._setDisplayObject=function(displayObject)
{this._displayObject=displayObject;if(FORGE.Utils.isTypeOf(displayObject,"Image")||FORGE.Utils.isTypeOf(displayObject,"Canvas"))
{this._texture=new THREE.Texture();this._texture.image=displayObject.element;}
else if(FORGE.Utils.isTypeOf(displayObject,["VideoHTML5","VideoDash"]))
{if(FORGE.Device.browser.toLowerCase()==="safari"&&displayObject.originalHeight>1440)
{this._videoReductionFactor=2;}
if(this._displayObject.onQualityChange.has(this._mediaQualityChangeHandler,this))
{this._displayObject.onQualityChange.remove(this._mediaQualityChangeHandler,this);}
this._displayObject.onQualityChange.add(this._mediaQualityChangeHandler,this);this._textureCanvas=document.createElement("canvas");this._textureCanvas.width=displayObject.originalWidth / this._videoReductionFactor;this._textureCanvas.height=displayObject.originalHeight / this._videoReductionFactor;this._textureContext=this._textureCanvas.getContext("2d");this._texture=new THREE.Texture(this._textureCanvas);}
else
{throw"Wrong type of display object "+displayObject.className;}
this._texture.format=THREE.RGBFormat;this._texture.mapping=THREE.Texture.DEFAULT_MAPPING;this._texture.magFilter=THREE.LinearFilter;this._texture.wrapS=THREE.ClampToEdgeWrapping;this._texture.wrapT=THREE.ClampToEdgeWrapping;this._texture.generateMipmaps=false;this._texture.minFilter=THREE.LinearFilter;if(this._mediaFormat===FORGE.MediaFormat.FLAT&&FORGE.Math.isPowerOfTwo(displayObject.width)&&FORGE.Math.isPowerOfTwo(displayObject.height))
{this._texture.generateMipmaps=true;this._texture.minFilter=THREE.LinearMipMapLinearFilter;}
this._texture.needsUpdate=true;this._mesh.material.uniforms.tTexture.value=this._texture;if(this._mesh.material.uniforms.hasOwnProperty("tTextureRatio"))
{this._mesh.material.uniforms.tTextureRatio.value=this._texture.image.width / this._texture.image.height;}
if(this._mesh.material.uniforms.hasOwnProperty("tTextureSize"))
{this._mesh.material.uniforms.tTextureSize.value=new THREE.Vector2(this._texture.image.width,this._texture.image.height);}};FORGE.BackgroundShaderRenderer.prototype._mediaQualityChangeHandler=function(event)
{this.log("Media quality has changed");var displayObject=event.emitter;this._textureCanvas.width=displayObject.originalWidth / this._videoReductionFactor;this._textureCanvas.height=displayObject.originalHeight / this._videoReductionFactor;};FORGE.BackgroundShaderRenderer.prototype._updateInternals=function()
{var shaderSTW=this._viewer.renderer.view.current.shaderSTW;var vertexShader=FORGE.ShaderLib.parseIncludes(shaderSTW.vertexShader);var fragmentShader=FORGE.ShaderLib.parseIncludes(shaderSTW.fragmentShader);var material=new THREE.ShaderMaterial({uniforms:(shaderSTW.uniforms),vertexShader:vertexShader,fragmentShader:fragmentShader,side:THREE.FrontSide});if(this._texture!==null)
{material.uniforms.tTexture.value=this._texture;}
if(this._scene.children.length===0)
{var geometry=new THREE.PlaneBufferGeometry(2,2);this._mesh=new THREE.Mesh(geometry,material);this._scene.add(this._mesh);}
else
{this._mesh=(this._scene.children[0]);this._mesh.material=null;}
this._mesh.material=material;material.needsUpdate=true;};FORGE.BackgroundShaderRenderer.prototype._clear=function()
{this._viewer.renderer.webGLRenderer.clearColor();};FORGE.BackgroundShaderRenderer.prototype.render=function(camera)
{if(this._viewer.renderer===null)
{return;}
camera=null;
//@closureFORGE.BackgroundRenderer.prototype.render.call(this,camera);};FORGE.BackgroundShaderRenderer.prototype.updateAfterViewChange=function()
{this._updateInternals();if(this._texture!==null&&typeof this._texture.image!=="undefined")
{if(this._mesh.material.uniforms.hasOwnProperty("tTextureRatio"))
{this._mesh.material.uniforms.tTextureRatio.value=this._texture.image.width / this._texture.image.height;}
if(this._mesh.material.uniforms.hasOwnProperty("tTextureSize"))
{this._mesh.material.uniforms.tTextureSize.value=new THREE.Vector2(this._texture.image.width,this._texture.image.height);}}};FORGE.BackgroundShaderRenderer.prototype.destroy=function()
{this._clear();if(typeof this._displayObject.onQualityChange!=="undefined"&&this._displayObject.onQualityChange.has(this._mediaQualityChangeHandler,this))
{this._displayObject.onQualityChange.remove(this._mediaQualityChangeHandler,this);}
this._displayObject=null;this._textureCanvas=null;this._textureContext=null;if(this._texture!==null)
{this._texture.dispose();this._texture=null;}
FORGE.BackgroundRenderer.prototype.destroy.call(this);};Object.defineProperty(FORGE.BackgroundShaderRenderer.prototype,"texture",{get:function()
{return this._texture;}});FORGE.PostProcessing=function(viewer)
{this._viewer=viewer;this._config=null;this._sets=null;FORGE.BaseObject.call(this,"PostProcessing");this._boot();};FORGE.PostProcessing.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.PostProcessing.prototype.constructor=FORGE.PostProcessing;FORGE.PostProcessing.prototype._boot=function()
{this._sets={};};FORGE.PostProcessing.prototype._parseConfig=function(config)
{this._uid=config.uid;if(typeof config.fxSets!=="undefined"&&config.fxSets.length>0)
{for(var i=0,ii=config.fxSets.length;i<ii;i++)
{var fxConfig=config.fxSets[i];this._sets[fxConfig.uid]=fxConfig.set;}}};FORGE.PostProcessing.prototype._parseShaderConfig=function(shaderConfig)
{var shader=THREE[shaderConfig.type];var pass=new FORGE.ShaderPass(shaderConfig.uid,shaderConfig.type,shader);if(typeof pass.uniforms!=="undefined")
{for(var param in shaderConfig.params)
{var paramValue=shaderConfig.params[param];var value=paramValue;if(typeof paramValue==="object"&&paramValue.hasOwnProperty("type")&&paramValue.hasOwnProperty("args"))
{var args=paramValue.args;switch(paramValue.type)
{case"THREE.Color":if(args.length===3)
{value=new THREE.Color(args[0],args[1],args[2]);}
else if(typeof args==="string"||typeof args==="number")
{value=new THREE.Color(args);}
else
{throw new Error("Cannot create THREE.Color with "+(typeof args)+" (length "+args.length+")");}
break;case"THREE.Vector2":value=new THREE.Vector2(args[0],args[1]);break;case"THREE.Vector3":value=new THREE.Vector3(args[0],args[1],args[2]);break;}}
pass.uniforms[param].value=value;}}
return pass;};FORGE.PostProcessing.prototype._parsePassConfig=function(passConfig)
{var constructor=THREE[passConfig.type];var args=[];if(typeof passConfig.args!=="undefined")
{if(passConfig.args instanceof Array)
{args=[null].concat(passConfig.args);}
else
{args=[null];for(var prop in passConfig.args)
{args.push(passConfig.args[prop]);}}}
var pass=new(Function.prototype.bind.apply(constructor,args));pass.uid=passConfig.uid;if(typeof passConfig.params!=="undefined")
{for(var param in passConfig.params)
{pass[param]=passConfig.params[param];}}
return pass;};FORGE.PostProcessing.prototype.parseShaderPasses=function(fxConfig)
{if(typeof fxConfig==="undefined"||fxConfig===null||fxConfig.length===0)
{return[];}
var passes=[];for(var j=0,jj=fxConfig.length;j<jj;j++)
{var fx=(fxConfig[j]);if(!THREE.hasOwnProperty(fx.type))
{this.warn("Unknown image effect ("+fx.type+")");continue;}
var pass=null;if(fx.type.indexOf("Shader")!=-1)
{pass=this._parseShaderConfig(fx);}
else if(fx.type.indexOf("Pass")!=-1)
{pass=this._parsePassConfig(fx);}
if(pass!==null)
{passes.push(pass);}}
return passes;};FORGE.PostProcessing.prototype.getFxSetByUID=function(uid)
{return this._sets[uid];};FORGE.PostProcessing.prototype.addConfig=function(config)
{this._config=config;this._parseConfig(this._config);};FORGE.PostProcessing.prototype.destroy=function()
{this._viewer=null;this._sets=null;};FORGE.EffectComposerType={};FORGE.EffectComposerType.MAIN="main";FORGE.EffectComposerType.RENDER="render";FORGE.EffectComposerType.PICKING="picking";FORGE.EffectComposer=function(type,renderer,renderTarget)
{this._type=type||FORGE.EffectComposerType.RENDER;this._renderTarget=renderTarget||null;this._name="";this._enabled=true;this._deltaSum=0;THREE.EffectComposer.call(this,renderer,renderTarget);this._boot();};FORGE.EffectComposer.prototype=Object.create(THREE.EffectComposer.prototype);FORGE.EffectComposer.prototype.constructor=FORGE.EffectComposer;FORGE.EffectComposer.prototype._boot=function()
{this._name=FORGE.EffectComposer.getUniqueName(this._type);};FORGE.EffectComposer.prototype.render=function(delta)
{this._deltaSum+=delta;var time=this._deltaSum;for(var i=0,ii=this.passes.length;i<ii;i++)
{var pass=this.passes[i];if(typeof pass.uniforms!=="undefined")
{if(typeof pass.uniforms.time!=="undefined")
{pass.uniforms.time.value=time;}}
if(typeof pass.time!=="undefined")
{pass.time=time;}}
THREE.EffectComposer.prototype.render.call(this,delta);};FORGE.EffectComposer.prototype.destroy=function()
{this._renderTarget=null;this.writeBuffer.dispose();this.writeBuffer=null;this.readBuffer.dispose();this.readBuffer=null;};FORGE.EffectComposer.uid=0;FORGE.EffectComposer.getUniqueName=function(type)
{return"FORGE.EffectComposer."+type+"."+(FORGE.EffectComposer.uid++);};Object.defineProperty(FORGE.EffectComposer.prototype,"type",{get:function()
{return this._type;}});Object.defineProperty(FORGE.EffectComposer.prototype,"renderTarget",{get:function()
{return this.readBuffer;},set:function(value)
{if(this.readBuffer!==null)
{this.readBuffer.dispose();}
this.readBuffer=value;}});Object.defineProperty(FORGE.EffectComposer.prototype,"enabled",{get:function()
{return this._enabled;},set:function(value)
{this._enabled=value;}});Object.defineProperty(FORGE.EffectComposer.prototype,"name",{get:function()
{return this._name;}});FORGE.PassPosition={};FORGE.PassPosition.UNKNOWN="";FORGE.PassPosition.BACKGROUND="background";FORGE.PassPosition.RENDER="render";FORGE.PassPosition.GLOBAL="global";FORGE.TexturePass=function(map,opacity)
{this._position="";THREE.TexturePass.call(this,map,opacity);};FORGE.TexturePass.prototype=Object.create(THREE.TexturePass.prototype);FORGE.TexturePass.prototype.constructor=FORGE.TexturePass;Object.defineProperty(FORGE.TexturePass.prototype,"position",{get:function()
{return this._position;},set:function(position)
{this._position=position;}});FORGE.ShaderPass=function(uid,type,shader,textureID)
{this._uid=uid;this._type=type||"shader";this._position=FORGE.PassPosition.UNKNOWN;this._deltaSum=0;THREE.ShaderPass.call(this,shader,textureID|| "tDiffuse");};FORGE.ShaderPass.prototype=Object.create(THREE.ShaderPass.prototype);FORGE.ShaderPass.prototype.constructor=FORGE.ShaderPass;FORGE.ShaderPass.prototype.render=function(renderer,writeBuffer,readBuffer,delta,maskActive)
{this._deltaSum+=delta;if(this.uniforms.hasOwnProperty("time"))
{this.uniforms["time"].value=this._deltaSum;}
THREE.ShaderPass.prototype.render.call(this,renderer,writeBuffer,readBuffer,delta,maskActive);};Object.defineProperty(FORGE.ShaderPass.prototype,"uid",{get:function()
{return this._uid;}});Object.defineProperty(FORGE.ShaderPass.prototype,"type",{get:function()
{return this._type;}});Object.defineProperty(FORGE.ShaderPass.prototype,"position",{get:function()
{return this._position;},set:function(position)
{this._position=position;}});FORGE.AdditionPass=function(composer)
{this._composer=composer;this._material=null;var vertexShader=FORGE.ShaderLib.parseIncludes(FORGE.ShaderChunk.wts_vert_rectilinear);var fragmentShader=FORGE.ShaderLib.parseIncludes(FORGE.ShaderChunk.wts_frag_addition);var uniforms={tTexture:{type:"t",value:null},tAdd:{type:"t",value:null}};this._material=new THREE.RawShaderMaterial({fragmentShader:fragmentShader,vertexShader:vertexShader,uniforms:uniforms,side:THREE.FrontSide,name:"FORGE.AdditionPassMaterial"});FORGE.ShaderPass.call(this,"","Addition",this._material,"tTexture");};FORGE.AdditionPass.prototype=Object.create(FORGE.ShaderPass.prototype);FORGE.AdditionPass.prototype.constructor=FORGE.AdditionPass;FORGE.AdditionPass.prototype._boot=function()
{};FORGE.AdditionPass.prototype.destroy=function()
{if(this._material===null)
{this._material.dispose();this._material=null;}
this._composer=null;};Object.defineProperty(FORGE.AdditionPass.prototype,"composer",{get:function()
{return this._composer;}});FORGE.RenderPass=function(scene,camera,overrideMaterial,clearColor,clearAlpha)
{this._position="";THREE.RenderPass.call(this,scene,camera,overrideMaterial,clearColor,clearAlpha);};FORGE.RenderPass.prototype=Object.create(THREE.RenderPass.prototype);FORGE.RenderPass.prototype.constructor=FORGE.RenderPass;Object.defineProperty(FORGE.RenderPass.prototype,"position",{get:function()
{return this._position;},set:function(position)
{this._position=position;}});FORGE.ShaderChunk={};var coordinates="\nvec3 toCartesian(in vec3 rtp) {\n    float r = rtp.x;\n    float theta = rtp.y;\n    float phi = rtp.z;\n    float x = r * cos(phi) * sin(theta);\n    float y = r * sin(phi);\n    float z = r * cos(phi) * cos(theta);\n    return vec3(x,y,z);\n}\nvec3 toSpherical(in vec3 pt) {\n    float r = length(pt);\n    float theta = -atan(pt.x, pt.z);\n    float phi = asin(pt.y / r);\n    return vec3(r,theta,phi);\n}\n";FORGE.ShaderChunk["coordinates"]=coordinates;var defines="precision highp float;\nprecision highp int;\n#define PI_2  1.5707963268\n#define PI  3.141592653589793\n#define PI2 6.28318530717959\n#define RECIPROCAL_PI2 0.1591549430919\n#define isTrue(a) ((a) != 0)\n";FORGE.ShaderChunk["defines"]=defines;var helpers="\nfloat wrap(in float x, in float min, in float max) {\n    return x - ((max - min) * (1.0 - step(x, min) - step(x, max)));\n}\nvec2 getFragment() {\n    return (2.0 * gl_FragCoord.xy / tViewportResolution - 1.0) * vec2(tViewportResolutionRatio, 1.0);\n}\nvec2 smoothTexUV(vec2 uv, vec2 texSize) {\n    uv = uv * texSize + 0.5;\n    vec2 iuv = floor(uv);\n    vec2 fuv = uv - iuv;\n    uv = iuv + fuv * fuv * fuv * (fuv * (fuv * 6.0 - 15.0) + 10.0);\n    return (uv - 0.5) / texSize;\n}\n";FORGE.ShaderChunk["helpers"]=helpers;var texcoords="\nvec2 toEquirectangularTexCoords(in vec2 thetaphi) {\n    thetaphi.x = wrap(thetaphi.x + PI, -PI, PI);\n    vec2 coords = 0.5 + thetaphi / vec2(PI2, PI);\n    return coords;\n}\n";FORGE.ShaderChunk["texcoords"]=texcoords;var uniforms="uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\n";FORGE.ShaderChunk["uniforms"]=uniforms;var vert_attributes="attribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n";FORGE.ShaderChunk["vert_attributes"]=vert_attributes;var vert_attributes_wireframe="attribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 quadrilateralCoords;\n";FORGE.ShaderChunk["vert_attributes_wireframe"]=vert_attributes_wireframe;var stw_frag_proj_flat="\n#include <defines>\nuniform sampler2D tTexture;\nuniform vec2 tViewportResolution;\nuniform float tViewportResolutionRatio;\nuniform float tTextureRatio;\nuniform float tFov;\nuniform float tYaw;\nuniform float tPitch;\nuniform int tRepeatX;\nuniform int tRepeatY;\n#include <helpers>\n#include <coordinates>\n#include <texcoords>\nvoid main() {\n    vec2 sTexResolution = PI * vec2(tTextureRatio, 1.0);\n    vec2 sReference = vec2(tYaw, tPitch) + sTexResolution / 2.0;\n    vec2 sTexel = sReference + (tFov * 0.5) * getFragment();\n    vec2 uv = sTexel / sTexResolution;\n    if (isTrue(tRepeatX)) {\n        uv.x = mod(uv.x, 1.0);\n    }\n    else if (uv.x > 1.0 || uv.x < 0.0) {\n        discard;\n    }\n    if (isTrue(tRepeatY)) {\n        uv.y = mod(uv.y, 1.0);\n    }\n    else if (uv.y > 1.0 || uv.y < 0.0) {\n        discard;\n    }\n    gl_FragColor = vec4(texture2D(tTexture, uv).rgb, 1.0);\n}\n";FORGE.ShaderChunk["stw_frag_proj_flat"]=stw_frag_proj_flat;var stw_frag_proj_gopro="\n#include <defines>\nuniform sampler2D tTexture;\nuniform vec2 tViewportResolution;\nuniform float tViewportResolutionRatio;\nuniform mat4 tModelViewMatrixInverse;\nuniform float tProjectionDistance;\nuniform float tProjectionScale;\n#include <helpers>\n#include <coordinates>\n#include <texcoords>\nvec2 projection() {\n    vec2 frag = getFragment();\n    vec2 c = tProjectionScale * frag;\n    float zs = tProjectionDistance;\n    float xy2 = dot(c,c);\n    float zs12 = (zs + 1.0) * (zs + 1.0);\n    float delta = 4.0 * (zs * zs * xy2 * xy2 - (xy2 + zs12) * (xy2 * zs * zs - zs12));\n    if (delta < 0.0) { return vec2(-1.); }\n    float z = (2.0 * zs * xy2 - sqrt(delta)) / (2.0 * (zs12 + xy2));\n    float x = c.x * ((zs - z) / (zs + 1.0));\n    float y = c.y * ((zs - z) / (zs + 1.0));\n    vec3 vx = vec3(tModelViewMatrixInverse * vec4(x, y, z, 1.0));\n    return toSpherical(vx).yz;\n}\nvoid main() {\n    vec2 texCoords = toEquirectangularTexCoords(projection());\n    gl_FragColor = vec4(texture2D(tTexture, texCoords).rgb, 1.0);\n}\n";FORGE.ShaderChunk["stw_frag_proj_gopro"]=stw_frag_proj_gopro;var stw_frag_proj_rectilinear="\n#include <defines>\nuniform sampler2D tTexture;\nuniform vec2 tViewportResolution;\nuniform float tViewportResolutionRatio;\nuniform mat4 tModelViewMatrixInverse;\nuniform float tProjectionScale;\n#include <helpers>\n#include <coordinates>\n#include <texcoords>\nvec2 projection() {\n    vec2 frag = tProjectionScale * getFragment();\n    vec4 screenPT = vec4(frag, -1.0, 1.0);\n    vec4 worldPT = tModelViewMatrixInverse * screenPT;\n    return toSpherical(worldPT.xyz).yz;\n}\nvoid main() {\n    vec2 texCoords = toEquirectangularTexCoords(projection());\n    gl_FragColor = vec4(texture2D(tTexture, texCoords).rgb, 1.0);\n}\n";FORGE.ShaderChunk["stw_frag_proj_rectilinear"]=stw_frag_proj_rectilinear;var stw_vert_proj="\n#include <defines>\nvoid main() {\n   gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n";FORGE.ShaderChunk["stw_vert_proj"]=stw_vert_proj;var wts_frag="\n#include <defines>\nuniform sampler2D tTexture;\nuniform float tOpacity;\nvarying vec2 vUv;\nvoid main() {\n    vec4 texel = texture2D( tTexture, vUv );\n    gl_FragColor = vec4(texel.rgb, texel.a * tOpacity);\n}\n";FORGE.ShaderChunk["wts_frag"]=wts_frag;var wts_frag_addition="\n#include <defines>\nuniform sampler2D tTexture;\nuniform sampler2D tAdd;\nvarying vec2 vUv;\nvoid main() {\n    vec4 texel = texture2D( tTexture, vUv );\n    vec4 texelAdd = texture2D( tAdd, vUv );\n    float alpha = max(texel.a, texelAdd.a);\n    gl_FragColor = vec4(vec3(texelAdd.a * texelAdd.rgb + (1.0 - texelAdd.a) * texel.rgb), alpha);\n}\n";FORGE.ShaderChunk["wts_frag_addition"]=wts_frag_addition;var wts_frag_color="\n#include <defines>\nuniform vec3 tColor;\nuniform float tOpacity;\nvarying vec2 vUv;\nvoid main() {\n    vec2 texCoords = vUv;\n    gl_FragColor = vec4(tColor, tOpacity);\n}\n";FORGE.ShaderChunk["wts_frag_color"]=wts_frag_color;var wts_frag_wireframe="\n#extension GL_OES_standard_derivatives : enable \n#include <defines>\n#define WIRE_THICKNESS 1.50\nuniform vec3 tColor;\nvarying vec2 vQuadrilateralCoords;\nvoid main() {\n    vec2 dfdx = dFdx(vQuadrilateralCoords);\n    vec2 dfdy = dFdy(vQuadrilateralCoords);\n    vec2 threshold = vec2(WIRE_THICKNESS * sqrt(dfdx * dfdx + dfdy * dfdy));\n    vec2 amount = smoothstep(vec2(0.0), WIRE_THICKNESS * threshold, vec2(1.0) - abs(vQuadrilateralCoords));\n    float alpha = 1.0 - amount.x * amount.y;\n    gl_FragColor = vec4(tColor.rgb, alpha);\n}\n";FORGE.ShaderChunk["wts_frag_wireframe"]=wts_frag_wireframe;var wts_vert_gopro="\n#include <defines>\n#include <vert_attributes>\n#include <uniforms>\nuniform float tProjectionDistance;\nvarying vec2 vUv;\nvoid main() {\n    vec4 spherePt = normalize(modelViewMatrix * vec4( position, 1.0 ));\n    float radius = 1.0 - 0.5 * tProjectionDistance;\n    float offset = radius - 1.0;\n    spherePt.xyz *= radius;\n    spherePt.z += offset;\n    gl_Position = projectionMatrix * spherePt;\n    vUv = uv;\n}\n";FORGE.ShaderChunk["wts_vert_gopro"]=wts_vert_gopro;var wts_vert_gopro_wireframe="\n#include <defines>\n#include <vert_attributes_wireframe>\n#include <uniforms>\nuniform float tProjectionDistance;\nvarying vec2 vQuadrilateralCoords;\nvoid main() {\n    vec4 spherePt = normalize(modelViewMatrix * vec4( position, 1.0 ));\n    float radius = 1.0 - 0.5 * tProjectionDistance;\n    float offset = radius - 1.0;\n    spherePt.xyz *= radius;\n    spherePt.z += offset;\n    gl_Position = projectionMatrix * spherePt;\n    vQuadrilateralCoords = quadrilateralCoords;\n}\n";FORGE.ShaderChunk["wts_vert_gopro_wireframe"]=wts_vert_gopro_wireframe;var wts_vert_rectilinear="\n#include <defines>\n#include <vert_attributes>\n#include <uniforms>\nvarying vec2 vUv;\nvoid main() {\n    vec4 camPt = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * camPt;\n    vUv = uv;\n}\n";FORGE.ShaderChunk["wts_vert_rectilinear"]=wts_vert_rectilinear;var wts_vert_rectilinear_wireframe="\n#include <defines>\n#include <vert_attributes_wireframe>\n#include <uniforms>\nvarying vec2 vQuadrilateralCoords;\nvoid main() {\n    vec4 camPt = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * camPt;\n    vQuadrilateralCoords = quadrilateralCoords;\n}\n";FORGE.ShaderChunk["wts_vert_rectilinear_wireframe"]=wts_vert_rectilinear_wireframe;FORGE.ShaderLib={screenToWorld:{rectilinear:{uniforms:{tTexture:{type:"t",value:null},tViewportResolution:{type:"v2",value:new THREE.Vector2()},tViewportResolutionRatio:{type:"f",value:1.0},tModelViewMatrixInverse:{type:"m4",value:new THREE.Matrix4()},tProjectionScale:{type:"f",value:1.0}},vertexShader:FORGE.ShaderChunk.stw_vert_proj,fragmentShader:FORGE.ShaderChunk.stw_frag_proj_rectilinear},flat:{uniforms:{tTexture:{type:"t",value:null},tTextureRatio:{type:"f",value:1.0},tViewportResolution:{type:"v2",value:new THREE.Vector2()},tViewportResolutionRatio:{type:"f",value:1.0},tFov:{type:"f",value:0.0},tYaw:{type:"f",value:0.0},tPitch:{type:"f",value:0.0},tRepeatX:{type:"i",value:0},tRepeatY:{type:"i",value:0}},vertexShader:FORGE.ShaderChunk.stw_vert_proj,fragmentShader:FORGE.ShaderChunk.stw_frag_proj_flat},gopro:{uniforms:{tTexture:{type:"t",value:null},tViewportResolution:{type:"v2",value:new THREE.Vector2()},tViewportResolutionRatio:{type:"f",value:1.0},tModelViewMatrixInverse:{type:"m4",value:new THREE.Matrix4()},tProjectionDistance:{type:"f",value:0.0},tProjectionScale:{type:"f",value:1.0}},vertexShader:FORGE.ShaderChunk.stw_vert_proj,fragmentShader:FORGE.ShaderChunk.stw_frag_proj_gopro}},worldToScreen:{rectilinear:{mapping:{uniforms:{tOpacity:{type:"f",value:1.0},tTexture:{type:"t",value:null}},vertexShader:FORGE.ShaderChunk.wts_vert_rectilinear,fragmentShader:FORGE.ShaderChunk.wts_frag},wireframe:{uniforms:{tColor:{type:"c",value:null},tModelViewMatrixInverse:{type:"m4",value:null}},vertexShader:FORGE.ShaderChunk.wts_vert_rectilinear_wireframe,fragmentShader:FORGE.ShaderChunk.wts_frag_wireframe}},flat:{mapping:{uniforms:{tOpacity:{type:"f",value:1.0},tTexture:{type:"t",value:null}},vertexShader:FORGE.ShaderChunk.wts_vert_rectilinear,fragmentShader:FORGE.ShaderChunk.wts_frag},wireframe:{uniforms:{tColor:{type:"c",value:null},tModelViewMatrixInverse:{type:"m4",value:null}},vertexShader:FORGE.ShaderChunk.wts_vert_rectilinear_wireframe,fragmentShader:FORGE.ShaderChunk.wts_frag_wireframe}},gopro:{mapping:{uniforms:{tOpacity:{type:"f",value:1.0},tTexture:{type:"t",value:null},tProjectionDistance:{type:"f",value:1}},vertexShader:FORGE.ShaderChunk.wts_vert_gopro,fragmentShader:FORGE.ShaderChunk.wts_frag},wireframe:{uniforms:{tColor:{type:"c",value:null},tProjectionDistance:{type:"f",value:1}},vertexShader:FORGE.ShaderChunk.wts_vert_gopro_wireframe,fragmentShader:FORGE.ShaderChunk.wts_frag_wireframe}}}};FORGE.ShaderLib.parseIncludes=function(string)
{var pattern=/#include +<([\w\d.]+)>/g;function replace(match,include)
{var r=FORGE.ShaderChunk[include];if(typeof r==="undefined")
{r=THREE.ShaderChunk[include];if(typeof r==="undefined")
{throw new Error("Can not resolve #include <"+include+">");}}
return FORGE.ShaderLib.parseIncludes(r);}
return string.replace(pattern,replace);};FORGE.ViewManager=function(viewer)
{this._viewer=viewer;this._view=null;this._ready=false;this._viewTypeBackup="";this._onChange=null;FORGE.BaseObject.call(this,"ViewManager");};FORGE.ViewManager.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.ViewManager.prototype.constructor=FORGE.ViewManager;FORGE.ViewManager.prototype._setView=function(type)
{if(this._view!==null&&this._view.type===type)
{return;}
this._clearView();this.log("set view "+type);switch(type)
{case FORGE.ViewType.GOPRO:this._view=new FORGE.ViewGoPro(this._viewer);break;case FORGE.ViewType.FLAT:this._view=new FORGE.ViewFlat(this._viewer);break;case FORGE.ViewType.RECTILINEAR:default:this._view=new FORGE.ViewRectilinear(this._viewer);break;}
this._ready=true;this.notifyChange();};FORGE.ViewManager.prototype._clearView=function()
{this._ready=false;if(this._view!==null)
{this.log("clear view");this._view.destroy();this._view=null;}};FORGE.ViewManager.prototype.notifyChange=function()
{if(this._onChange!==null)
{this._onChange.dispatch();}};FORGE.ViewManager.prototype.load=function(config)
{var sceneViewConfig=(config);var globalViewConfig=(this._viewer.mainConfig.view);var extendedViewConfig=(FORGE.Utils.extendMultipleObjects(globalViewConfig,sceneViewConfig));var type=(typeof extendedViewConfig.type==="string")?extendedViewConfig.type.toLowerCase():FORGE.ViewType.RECTILINEAR;this._setView(type);};FORGE.ViewManager.prototype.enableVR=function()
{this._viewTypeBackup=this._view.type;this._setView(FORGE.ViewType.RECTILINEAR);};FORGE.ViewManager.prototype.disableVR=function()
{if(this._viewTypeBackup!=="")
{this._setView(this._viewTypeBackup);this._viewer.camera.roll=0;}};FORGE.ViewManager.prototype.worldToScreen=function(worldPt,parallax)
{return this._view.worldToScreen(worldPt,parallax);};FORGE.ViewManager.prototype.screenToWorld=function(screenPt)
{return this._view.screenToWorld(screenPt);};FORGE.ViewManager.prototype.destroy=function()
{this._viewer=null;if(this._view!==null)
{this._view.destroy();this._view=null;}
if(this._onChange!==null)
{this._onChange.destroy();this._onChange=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.ViewManager.prototype,"current",{get:function()
{return this._view;}});Object.defineProperty(FORGE.ViewManager.prototype,"ready",{get:function()
{return this._ready;}});Object.defineProperty(FORGE.ViewManager.prototype,"type",{get:function()
{return(this._view!==null)?this._view.type:null;},set:function(value)
{this._setView(value);}});Object.defineProperty(FORGE.ViewManager.prototype,"onChange",{get:function()
{if(this._onChange===null)
{this._onChange=new FORGE.EventDispatcher(this);}
return this._onChange;}});FORGE.ViewType={};FORGE.ViewType.UNDEFINED="undefined";FORGE.ViewType.FLAT="flat";FORGE.ViewType.RECTILINEAR="rectilinear";FORGE.ViewType.GOPRO="gopro";FORGE.ViewBase=function(viewer,className,type)
{this._viewer=viewer;this._projectionScale=1.0;this._type=type;this._yawMin=-Infinity;this._yawMax=Infinity;this._pitchMin=-Infinity;this._pitchMax=Infinity;this._rollMin=-Infinity;this._rollMax=Infinity;this._fovMin=0;this._fovMax=Infinity;this._shaderSTW=null;this._shaderWTS=null;FORGE.BaseObject.call(this,className||"ViewBase");};FORGE.ViewBase.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.ViewBase.prototype.constructor=FORGE.ViewBase;FORGE.ViewBase.prototype._boot=function()
{};FORGE.ViewBase.prototype._screenToFragment=function(screenPt)
{var resolution=this._viewer.renderer.displayResolution;var fx=(2.0*screenPt.x / resolution.width)-1.0;var fy=(2.0*screenPt.y / resolution.height)-1.0;return new THREE.Vector2(fx*resolution.ratio,fy);};FORGE.ViewBase.prototype._fragmentToScreen=function(fragment)
{var resolution=this._viewer.renderer.displayResolution;var sx=((fragment.x / resolution.ratio)+1.0)*(resolution.width / 2.0);var sy=(fragment.y+1.0)*(resolution.height / 2.0);return new THREE.Vector2(Math.round(sx),resolution.height-Math.round(sy));};FORGE.ViewBase.prototype.updateUniforms=function(uniforms)
{this.log(uniforms);
//@closurethrow"Please implement "+this._className+"::updateUniforms";};FORGE.ViewBase.prototype.worldToScreen=function(worldPt,parallax)
{this.log(worldPt);
//@closurethis.log(parallax);
//@closurethrow"Please implement "+this._className+"::worldToScreen";};FORGE.ViewBase.prototype.screenToWorld=function(screenPt)
{this.log(screenPt);
//@closurethrow"Please implement "+this._className+"::screenToWorld";};FORGE.ViewBase.prototype.getProjectionFov=function()
{return FORGE.Math.degToRad(this._viewer.renderer.camera.fov);};FORGE.ViewBase.prototype.destroy=function()
{this._viewer=null;this._camera=null;this._shaderSTW=null;this._shaderWTS=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.ViewBase.prototype,"type",{get:function()
{return this._type;}});Object.defineProperty(FORGE.ViewBase.prototype,"yawMin",{get:function()
{return this._yawMin;}});Object.defineProperty(FORGE.ViewBase.prototype,"yawMax",{get:function()
{return this._yawMax;}});Object.defineProperty(FORGE.ViewBase.prototype,"pitchMin",{get:function()
{return this._pitchMin;}});Object.defineProperty(FORGE.ViewBase.prototype,"pitchMax",{get:function()
{return this._pitchMax;}});Object.defineProperty(FORGE.ViewBase.prototype,"rollMin",{get:function()
{return this._rollMin;}});Object.defineProperty(FORGE.ViewBase.prototype,"rollMax",{get:function()
{return this._rollMax;}});Object.defineProperty(FORGE.ViewBase.prototype,"fovMin",{get:function()
{return this._fovMin;}});Object.defineProperty(FORGE.ViewBase.prototype,"fovMax",{get:function()
{return this._fovMax;}});Object.defineProperty(FORGE.ViewBase.prototype,"shaderSTW",{get:function()
{return this._shaderSTW;}});Object.defineProperty(FORGE.ViewBase.prototype,"shaderWTS",{get:function()
{return this._shaderWTS;}});FORGE.ViewFlat=function(viewer)
{FORGE.ViewBase.call(this,viewer,"ViewFlat",FORGE.ViewType.FLAT);this._repeatX=false;this._repeatY=false;this._boot();};FORGE.ViewFlat.prototype=Object.create(FORGE.ViewBase.prototype);FORGE.ViewFlat.prototype.constructor=FORGE.ViewFlat;FORGE.ViewFlat.prototype._boot=function()
{FORGE.ViewBase.prototype._boot.call(this);this._shaderSTW=(FORGE.Utils.extendSimpleObject({},FORGE.ShaderLib.screenToWorld.flat));this._shaderWTS=(FORGE.Utils.extendSimpleObject({},FORGE.ShaderLib.worldToScreen.flat));this._yawMin=FORGE.Math.degToRad(-360);this._yawMax=FORGE.Math.degToRad(360);this._pitchMin=FORGE.Math.degToRad(-180);this._pitchMax=FORGE.Math.degToRad(180);this._fovMin=FORGE.Math.degToRad(20);this._fovMax=FORGE.Math.degToRad(180);};FORGE.ViewFlat.prototype._updateViewParams=function()
{var vfov=FORGE.Math.degToRad(this._viewer.camera.fov);if(this._viewer.renderer.backgroundRenderer instanceof FORGE.BackgroundShaderRenderer)
{if(this._repeatX===false)
{var hfov=vfov*this._viewer.renderer.displayResolution.ratio;var texRatio=this._viewer.renderer.backgroundRenderer.textureSize.ratio;this._yawMax=Math.min(360,Math.max(0,(Math.PI*texRatio-hfov)*0.5));this._yawMin=-this._yawMax;}
else
{this._yawMin=FORGE.Math.degToRad(-360);this._yawMax=FORGE.Math.degToRad(360);}
if(this._repeatY===false)
{this._pitchMax=0.5*Math.max(0,Math.PI-vfov);this._pitchMin=-this._pitchMax;}
else
{this._pitchMin=FORGE.Math.degToRad(-180);this._pitchMax=FORGE.Math.degToRad(180);}
this._viewer.view.notifyChange();}
else
{this._yawMax=this._pitchMax=FORGE.Math.degToRad(20);this._yawMin=-this._yawMax;this._pitchMin=-this._pitchMax;}};FORGE.ViewFlat.prototype.updateUniforms=function(uniforms)
{this._updateViewParams();if(typeof uniforms==="undefined")
{return;}
if(uniforms.hasOwnProperty("tRepeatX"))
{uniforms.tRepeatX.value=this._repeatX?1:0;}
if(uniforms.hasOwnProperty("tRepeatY"))
{uniforms.tRepeatY.value=this._repeatY?1:0;}
if(uniforms.hasOwnProperty("tYaw"))
{uniforms.tYaw.value=FORGE.Math.degToRad(this._viewer.camera.yaw);}
if(uniforms.hasOwnProperty("tPitch"))
{uniforms.tPitch.value=FORGE.Math.degToRad(this._viewer.camera.pitch);}
if(uniforms.hasOwnProperty("tFov"))
{uniforms.tFov.value=FORGE.Math.degToRad(this._viewer.renderer.camera.fov);}};FORGE.ViewFlat.prototype.worldToScreen=function()
{return new THREE.Vector2();};FORGE.ViewFlat.prototype.screenToWorld=function()
{return new THREE.Vector3();};FORGE.ViewFlat.prototype.destroy=function()
{FORGE.ViewBase.prototype.destroy.call(this);};Object.defineProperty(FORGE.ViewFlat.prototype,"repeatX",{get:function()
{return this._repeatX;},set:function(value)
{this._repeatX=value;this._updateViewParams();this._viewer.view.notifyChange();}});Object.defineProperty(FORGE.ViewFlat.prototype,"repeatY",{get:function()
{return this._repeatY;},set:function(value)
{this._repeatY=value;this._updateViewParams();this._viewer.view.notifyChange();}});FORGE.ViewGoPro=function(viewer)
{this._projectionDistance=0;FORGE.ViewBase.call(this,viewer,"ViewGoPro",FORGE.ViewType.GOPRO);this._boot();};FORGE.ViewGoPro.prototype=Object.create(FORGE.ViewBase.prototype);FORGE.ViewGoPro.prototype.constructor=FORGE.ViewGoPro;FORGE.ViewGoPro.prototype._boot=function()
{FORGE.ViewBase.prototype._boot.call(this);this._shaderSTW=(FORGE.Utils.extendSimpleObject({},FORGE.ShaderLib.screenToWorld.gopro));this._shaderWTS=(FORGE.Utils.extendSimpleObject({},FORGE.ShaderLib.worldToScreen.gopro));this._fovMin=FORGE.Math.degToRad(30);this._fovMax=FORGE.Math.degToRad(330);};FORGE.ViewGoPro.prototype._updateViewParams=function()
{var projFovLow=90;var projFovHigh=180;var distance=0;var fov=FORGE.Math.clamp(this._viewer.camera.fov,this._viewer.camera.fovMin,this._viewer.camera.fovMax);var fn=0;if(fov<projFovLow)
{distance=0;fn=0;}
else if(fov>projFovHigh)
{distance=1;fn=1;}
else
{fn=(fov-projFovLow)/(projFovHigh-projFovLow);distance=0.5*(1.0+Math.sin(Math.PI / 2.0*(2.0*fn-1)));}
this._projectionDistance=distance;var fovRad=0.5*FORGE.Math.degToRad(fov);this._projectionScale=(distance+1)*Math.sin(fovRad)/(distance+Math.cos(fovRad));};FORGE.ViewGoPro.prototype.updateUniforms=function(uniforms)
{this._updateViewParams();if(typeof uniforms==="undefined")
{return;}
if(uniforms.hasOwnProperty("tProjectionDistance"))
{uniforms.tProjectionDistance.value=this._projectionDistance;}
if(uniforms.hasOwnProperty("tProjectionScale"))
{uniforms.tProjectionScale.value=this._projectionScale;}};FORGE.ViewGoPro.prototype.worldToScreen=function(worldPt,parallaxFactor)
{worldPt=worldPt||new THREE.Vector3();worldPt.normalize();parallaxFactor=parallaxFactor||0;var worldPt4=new THREE.Vector4(-worldPt.x,-worldPt.y,worldPt.z,1.0);var camEuler=FORGE.Math.rotationMatrixToEuler(this._viewer.camera.modelView);var rotation=FORGE.Math.eulerToRotationMatrix(camEuler.yaw,camEuler.pitch,-camEuler.roll,true);rotation=rotation.transpose();worldPt4.applyMatrix4(rotation);if(worldPt4.z>this._projectionDistance)
{return null;}
var alpha=(this._projectionDistance+1)/(this._projectionDistance-worldPt4.z);var x=-worldPt4.x*alpha;var y=-worldPt4.y*alpha;x /=(1+parallaxFactor)*this._projectionScale;y /=this._projectionScale;return this._fragmentToScreen(new THREE.Vector2(x,y));};FORGE.ViewGoPro.prototype.screenToWorld=function(screenPt)
{var resolution=this._viewer.renderer.displayResolution;screenPt=screenPt||new THREE.Vector2(resolution.width / 2,resolution.height / 2);var widthMargin=FORGE.ViewRectilinear.OFF_SCREEN_MARGIN*resolution.width,heightMargin=FORGE.ViewRectilinear.OFF_SCREEN_MARGIN*resolution.height;if(screenPt.x<-widthMargin||screenPt.x>resolution.width+widthMargin||screenPt.y<-heightMargin||screenPt.y>resolution.height+heightMargin)
{return null;}
var fragment=this._screenToFragment(screenPt);fragment.multiplyScalar(this._projectionScale);var xy2=fragment.dot(fragment);var zs12=Math.pow(this._projectionDistance+1,2);var delta=4*(this._projectionDistance*this._projectionDistance*xy2*xy2
-(xy2+zs12)*(xy2*this._projectionDistance*this._projectionDistance-zs12));if(delta<0)
{return null;}
var worldPt=new THREE.Vector4();worldPt.z=(2*this._projectionDistance*xy2-Math.sqrt(delta))/(2*(zs12+xy2));worldPt.x=fragment.x*((this._projectionDistance-worldPt.z)/(this._projectionDistance+1));worldPt.y=fragment.y*((this._projectionDistance-worldPt.z)/(this._projectionDistance+1));var camEuler=FORGE.Math.rotationMatrixToEuler(this._viewer.camera.modelView);var rotation=FORGE.Math.eulerToRotationMatrix(-camEuler.yaw,camEuler.pitch,-camEuler.roll,true);worldPt.applyMatrix4(rotation);return new THREE.Vector3(worldPt.x,-worldPt.y,worldPt.z).normalize();};FORGE.ViewGoPro.prototype.getProjectionFov=function()
{this._updateViewParams();var theta=0.5*FORGE.Math.degToRad(this._viewer.camera.fov);var radius=1.0-this._projectionDistance / 2.0;var offset=Math.abs(radius-1);var fov=2*Math.atan2(radius*Math.sin(theta),offset+radius*Math.cos(theta));return fov;};FORGE.ViewGoPro.prototype.destroy=function()
{FORGE.ViewBase.prototype.destroy.call(this);};FORGE.ViewRectilinear=function(viewer)
{FORGE.ViewBase.call(this,viewer,"ViewRectilinear",FORGE.ViewType.RECTILINEAR);this._boot();};FORGE.ViewRectilinear.prototype=Object.create(FORGE.ViewBase.prototype);FORGE.ViewRectilinear.prototype.constructor=FORGE.ViewRectilinear;FORGE.ViewRectilinear.OFF_SCREEN_MARGIN=0.5;FORGE.ViewRectilinear.prototype._boot=function()
{FORGE.ViewBase.prototype._boot.call(this);this._shaderSTW=(FORGE.Utils.extendSimpleObject({},FORGE.ShaderLib.screenToWorld.rectilinear));this._shaderWTS=(FORGE.Utils.extendSimpleObject({},FORGE.ShaderLib.worldToScreen.rectilinear));this._pitchMin=-FORGE.Math.degToRad(90);this._pitchMax=FORGE.Math.degToRad(90);this._fovMin=FORGE.Math.degToRad(40);this._fovMax=FORGE.Math.degToRad(140);};FORGE.ViewRectilinear.prototype._updateViewParams=function()
{var fov=FORGE.Math.clamp(this._viewer.camera.fov,this._viewer.camera.fovMin,this._viewer.camera.fovMax);this._projectionScale=Math.tan(FORGE.Math.degToRad(fov / 2));};FORGE.ViewRectilinear.prototype.updateUniforms=function(uniforms)
{this._updateViewParams();if(typeof uniforms==="undefined")
{return;}
if(uniforms.hasOwnProperty("tProjectionScale"))
{uniforms.tProjectionScale.value=this._projectionScale;}};FORGE.ViewRectilinear.prototype.worldToScreen=function(worldPt,parallaxFactor)
{worldPt=worldPt||new THREE.Vector3();worldPt.normalize();parallaxFactor=parallaxFactor||0;var worldPt4=new THREE.Vector4(worldPt.x,worldPt.y,-worldPt.z,1.0);var camEuler=FORGE.Math.rotationMatrixToEuler(this._viewer.camera.modelView);var rotation=FORGE.Math.eulerToRotationMatrix(camEuler.yaw,camEuler.pitch,-camEuler.roll,true);rotation=rotation.transpose();worldPt4.applyMatrix4(rotation);if(worldPt4.z<0)
{return null;}
var projScale=Math.max(Number.EPSILON,worldPt4.z);var znPt=new THREE.Vector2(worldPt4.x,worldPt4.y).divideScalar(projScale);znPt.x /=(1+parallaxFactor)*this._projectionScale;znPt.y /=this._projectionScale;return this._fragmentToScreen(znPt);};FORGE.ViewRectilinear.prototype.screenToWorld=function(screenPt)
{var resolution=this._viewer.renderer.displayResolution;screenPt=screenPt||new THREE.Vector2(resolution.width / 2,resolution.height / 2);var widthMargin=FORGE.ViewRectilinear.OFF_SCREEN_MARGIN*resolution.width,heightMargin=FORGE.ViewRectilinear.OFF_SCREEN_MARGIN*resolution.height;if(screenPt.x<-widthMargin||screenPt.x>resolution.width+widthMargin||screenPt.y<-heightMargin||screenPt.y>resolution.height+heightMargin)
{return null;}
var fragment=this._screenToFragment(screenPt);fragment.multiplyScalar(this._projectionScale);var worldPt=new THREE.Vector4(fragment.x,fragment.y,-1,0);var camEuler=FORGE.Math.rotationMatrixToEuler(this._viewer.camera.modelView);var rotation=FORGE.Math.eulerToRotationMatrix(-camEuler.yaw,camEuler.pitch,-camEuler.roll,true);worldPt.applyMatrix4(rotation);return new THREE.Vector3(worldPt.x,-worldPt.y,worldPt.z).normalize();};FORGE.ViewRectilinear.prototype.destroy=function()
{FORGE.ViewBase.prototype.destroy.call(this);};FORGE.Timeline=function(keyframes)
{this._keyframes=keyframes||[];FORGE.BaseObject.call(this,"Timeline");this._boot();};FORGE.Timeline.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Timeline.prototype.constructor=FORGE.Timeline;FORGE.Timeline.prototype._boot=function()
{if(FORGE.Utils.isArrayOf(this._keyframes,"Keyframe"))
{this._keyframes=FORGE.Utils.sortArrayByProperty(this._keyframes,"time");}
else
{this._keyframes=[];}};FORGE.Timeline.prototype.hasKeyframes=function()
{return(this._keyframes!==null&&this._keyframes.length>0);};FORGE.Timeline.prototype.addKeyframe=function(keyframe)
{if(FORGE.Utils.isTypeOf(keyframe,"Keyframe"))
{this._keyframes.push(keyframe);this._keyframes=FORGE.Utils.sortArrayByProperty(this._keyframes,"time");}};FORGE.Timeline.prototype.getKeyframes=function(time)
{var indexes=this.getKeyframesIndexes(time);return{previous:this._keyframes[indexes.previous],next:this._keyframes[indexes.next]||null};};FORGE.Timeline.prototype.getKeyframesIndexes=function(time)
{var previous=-1,next=-1;for(var i=this._keyframes.length-1;i>=0;i--)
{if(time>=this._keyframes[i].time)
{previous=i;break;}}
if(previous!==this._keyframes.length-1)
{next=previous+1;}
return{previous:previous,next:next};};FORGE.Timeline.prototype.getSideKeyframes=function(time)
{var indexes=this.getSideKeyframesIndexes(time);return{previous:this._keyframes[indexes.previous]||null,next:this._keyframes[indexes.next]||null};};FORGE.Timeline.prototype.getSideKeyframesIndexes=function(time)
{var indexes=this.getKeyframesIndexes(time);var previous=0,next=indexes.next;if(indexes.previous>0)
{previous=indexes.previous-1;}
if(indexes.next<this._keyframes.length-2)
{next=indexes.next+1;}
return{previous:previous,next:next};};FORGE.Timeline.prototype.emptyKeyframes=function()
{while(this._keyframes.length>0)
{var kf=this._keyframes.pop();kf.data=null;kf=null;}
this._keyframes=[];};FORGE.Timeline.prototype.destroy=function()
{while(this._keyframes.length>0)
{var kf=this._keyframes.pop();kf.data=null;kf=null;}
this._keyframes=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Timeline.prototype,"keyframes",{get:function()
{return this._keyframes;},set:function(value)
{if(FORGE.Utils.isArrayOf(value,"Keyframe"))
{this._keyframes=FORGE.Utils.sortArrayByProperty(value,"time");}}});FORGE.Keyframe=function(time,data)
{FORGE.BaseObject.call(this,"Keyframe");this._time=time;this._data=data;};FORGE.Keyframe.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Keyframe.prototype.constructor=FORGE.Keyframe;Object.defineProperty(FORGE.Keyframe.prototype,"time",{get:function()
{return this._time;},set:function(value)
{if(typeof value==="number")
{this._time=value;}}});Object.defineProperty(FORGE.Keyframe.prototype,"data",{get:function()
{return this._data;},set:function(value)
{this._data=value;}});FORGE.Animation=function(viewer,target)
{this._viewer=viewer;this._target=target||null;this._instruction=null;this._timeline=null;this._kfp=null;this._kfn=null;this._time=0;this._duration=0;this._running=false;this._tween=null;this._tweenTime=0;this._smooth=false;this._sp=null;this._sn=null;this._onPlay=null;this._onStop=null;this._onProgress=null;this._onComplete=null;FORGE.BaseObject.call(this,"Animation");this._boot();};FORGE.Animation.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Animation.prototype.constructor=FORGE.Animation;FORGE.Animation.prototype._boot=function()
{this._register();this._tween=new FORGE.Tween(this._viewer,this);this._tween.onStart.add(this._onTweenStartHandler,this);this._tween.onStop.add(this._onTweenStopHandler,this);this._tween.onProgress.add(this._onTweenProgressHandler,this);this._tween.onComplete.add(this._onTweenCompleteHandler,this);this._viewer.tween.add(this._tween);this._timeline=new FORGE.Timeline();};FORGE.Animation.prototype._getProp=function(prop,target)
{var acc=prop.split(".");var res=target;for(var i=0,ii=acc.length;i<ii-1;i++)
{res=res[acc[i]];}
return[res,acc[i]];};FORGE.Animation.prototype._at=function(t)
{if(this._kfn===null)
{return;}
this._time=(t*this._duration)+this._kfp.time;var props=[],prop,i,ii;if(!Array.isArray(this._instruction.prop))
{this._instruction.prop=[this._instruction.prop];}
ii=this._instruction.prop.length;for(i=0;i<ii;i++)
{props.push(this._getProp(this._instruction.prop[i],this._target));}
if(this._instruction.smooth===true&&this._instruction.prop[0]==="quaternion")
{prop=props[0];prop[0].quaternion=FORGE.Quaternion.squadNoInvert(this._kfp.data.quaternion,this._sp,this._sn,this._kfn.data.quaternion,t);}
else if(this._instruction.prop[0]==="quaternion")
{prop=props[0];prop[0].quaternion=FORGE.Quaternion.slerp(this._kfp.data.quaternion,this._kfn.data.quaternion,t);}
else
{var alpha=this._tween.easing(t);var pp,pn,offset=0;for(i=0;i<ii;i++)
{pp=this._getProp(this._instruction.prop[i],this._kfp.data);pn=this._getProp(this._instruction.prop[i],this._kfn.data);prop=props[i];pp=pp[0][pp[1]];pn=pn[0][pn[1]];if(this._instruction.wrap&&this._instruction.wrap[i])
{var ilow=this._instruction.wrap[i][0];var ihigh=this._instruction.wrap[i][1];offset=Math.abs(ilow-ihigh)/ 2;if(Math.abs(pp-pn)>offset)
{pp=FORGE.Math.wrap(pp+offset,ilow,ihigh);pn=FORGE.Math.wrap(pn+offset,ilow,ihigh);}
else
{offset=0;}}
prop[0][prop[1]]=(1-alpha)*pp+alpha*pn-offset;}}
if(typeof this._instruction.fun==="function")
{this._instruction.fun.call(this,t);}};FORGE.Animation.prototype._goTo=function(time)
{time=time||this._time;this.log("going to the next keyframes at "+time);var kfs=this._timeline.getKeyframesIndexes(time||this._time);this._kfn=this._timeline.keyframes[kfs.next];this._kfp=this._timeline.keyframes[kfs.previous];if(this._kfn===null||kfs.next===-1)
{return false;};if(this._smooth)
{this._prepareSQUAD(time);}
this._duration=this._kfn.time-this._kfp.time;this._tween.to({"tweenTime":1},this._duration);this._tweenTime=0;this._tween.start();return true;};FORGE.Animation.prototype._prepareSQUAD=function(time)
{var sideKfs=this._timeline.getSideKeyframes(time);if(sideKfs.previous===null||sideKfs.next===null)
{return;}
var qp=new THREE.Quaternion().copy(this._kfp.data.quaternion).normalize();var qn=new THREE.Quaternion().copy(this._kfn.data.quaternion).normalize();var qpp=new THREE.Quaternion().copy(sideKfs.previous.data.quaternion).normalize();var qnn=new THREE.Quaternion().copy(sideKfs.next.data.quaternion).normalize();this._sp=FORGE.Quaternion.spline(qpp,qp,qn);this._sn=FORGE.Quaternion.spline(qp,qn,qnn);};FORGE.Animation.prototype._onTweenStartHandler=function()
{if(this._running!==true)
{if(this._onPlay!==null)
{this._onPlay.dispatch();}
this._running=true;}};FORGE.Animation.prototype._onTweenStopHandler=function()
{this._running=false;if(this._onStop!==null)
{this._onStop.dispatch();}};FORGE.Animation.prototype._onTweenProgressHandler=function()
{this._at(this._tweenTime);if(this._onProgress!==null)
{this._onProgress.dispatch({progress:this._time / this._duration});}};FORGE.Animation.prototype._onTweenCompleteHandler=function()
{if(!this._goTo())
{if(this._onComplete!==null)
{this._onComplete.dispatch();}}};FORGE.Animation.prototype.play=function(time)
{this._time=time||0;this._goTo(this._time);};FORGE.Animation.prototype.stop=function()
{this._tween.stop();};FORGE.Animation.prototype.resume=function()
{this._goTo();};FORGE.Animation.prototype.destroy=function()
{if(this._timeline!==null)
{this._timeline.destroy();this._timeline=null;}
if(this._tween!==null)
{this._tween.destroy();this._tween=null;}
if(this._onPlay!==null)
{this._onPlay.destroy();this._onPlay=null;}
if(this._onStop!==null)
{this._onStop.destroy();this._onStop=null;}
if(this._onProgress!==null)
{this._onProgress.destroy();this._onProgress=null;}
if(this._onComplete!==null)
{this._onComplete.destroy();this._onComplete=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Animation.prototype,"running",{get:function()
{return this._running;}});Object.defineProperty(FORGE.Animation.prototype,"timeline",{get:function()
{return this._timeline;}});Object.defineProperty(FORGE.Animation.prototype,"instruction",{get:function()
{return this._instruction;},set:function(value)
{this._instruction=value;}});Object.defineProperty(FORGE.Animation.prototype,"tween",{get:function()
{return this._tween;},set:function(value)
{this._tween=value;}});Object.defineProperty(FORGE.Animation.prototype,"tweenTime",{get:function()
{return this._tweenTime;},set:function(value)
{this._tweenTime=value;}});Object.defineProperty(FORGE.Animation.prototype,"smooth",{get:function()
{return this._smooth;},set:function(value)
{this._smooth=value;}});Object.defineProperty(FORGE.Animation.prototype,"onPlay",{get:function()
{if(this._onPlay===null)
{this._onPlay=new FORGE.EventDispatcher(this);}
return this._onPlay;}});Object.defineProperty(FORGE.Animation.prototype,"onStop",{get:function()
{if(this._onStop===null)
{this._onStop=new FORGE.EventDispatcher(this);}
return this._onStop;}});Object.defineProperty(FORGE.Animation.prototype,"onProgress",{get:function()
{if(this._onProgress===null)
{this._onProgress=new FORGE.EventDispatcher(this);}
return this._onProgress;}});Object.defineProperty(FORGE.Animation.prototype,"onComplete",{get:function()
{if(this._onComplete===null)
{this._onComplete=new FORGE.EventDispatcher(this);}
return this._onComplete;}});FORGE.MetaAnimation=function(viewer,target,name)
{this._viewer=viewer;this._target=target||null;this._animations=null;this._finished=0;this._instructions=null;this._onComplete=null;FORGE.BaseObject.call(this,name);};FORGE.MetaAnimation.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.MetaAnimation.prototype.constructor=FORGE.MetaAnimation;FORGE.MetaAnimation.prototype.stop=function()
{if(this._animations===null)
{return;}
for(var i=0,ii=this._animations.length;i<ii;i++)
{this._animations[i].stop();}};FORGE.MetaAnimation.prototype.resume=function()
{if(this._animations===null)
{return;}
for(var i=0,ii=this._animations.length;i<ii;i++)
{this._animations[i].resume();}};FORGE.MetaAnimation.prototype._onTrackPartialCompleteHandler=function()
{this._finished++;if(this._finished===this._animations.length&&this._onComplete!==null)
{this._onComplete.dispatch();}};FORGE.MetaAnimation.prototype._computeIntermediateValue=function(time,kfs,prop,easing,ns)
{var kp=null,kn=null,res;kfs=FORGE.Utils.sortArrayByProperty(kfs,"time");for(var i=0;i<kfs.length;i++)
{var p=(typeof ns==="string")?kfs[i].data[ns][prop]:kfs[i].data[prop];if(typeof p!=="undefined"&&p!==null)
{if(kfs[i].time<time)
{kp=kfs[i];}
if(kfs[i].time>time)
{kn=kfs[i];break;}}}
if(kp===null)
{kp={time:0,data:{}};if(typeof ns==="string")
{kp.data[ns]=this._target[ns];}
else
{kp.data[prop]=this._target[prop];}}
if(kn===null)
{return(typeof ns==="string")?kp.data[ns][prop]:kp.data[prop];}
var ratio=(time-kp.time)/(kn.time-kp.time);var alpha=easing(ratio);var kpp=(typeof ns==="string")?kp.data[ns][prop]:kp.data[prop];var knp=(typeof ns==="string")?kn.data[ns][prop]:kn.data[prop];return(1-alpha)*kpp+alpha*knp;};FORGE.MetaAnimation.prototype._emptyAnimations=function()
{var animation;while(this._animations&&this._animations.length>0)
{animation=this._animations.pop();animation.onComplete.remove(this._onTrackPartialCompleteHandler,this);animation.destroy();}
this._animations=[];this._finished=0;};FORGE.MetaAnimation.prototype.destroy=function()
{this._emptyAnimations();this._animations=null;var instruction;while(this._instructions&&this._instructions.length>0)
{instruction=this._instructions.pop();instruction=null;}
this._instructions=null;if(this._onComplete!==null)
{this._onComplete.destroy();this._onComplete=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.MetaAnimation.prototype,"running",{get:function()
{for(var i=0,ii=this._animations.length;i<ii;i++)
{if(this._animations[i].running===true)
{return true;}}
return false;}});Object.defineProperty(FORGE.MetaAnimation.prototype,"onComplete",{get:function()
{if(this._onComplete===null)
{this._onComplete=new FORGE.EventDispatcher(this);}
return this._onComplete;}});FORGE.Track=function(name)
{this._name=null;this._description=null;this._keyframes=null;this._count=0;this._easing=null;this._offset=0;FORGE.BaseObject.call(this,name);};FORGE.Track.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Track.prototype.constructor=FORGE.Track;FORGE.Track.prototype._boot=function(config)
{this._uid=config.uid;this._name=config.name;this._description=config.description;this._keyframes=config.keyframes;this._easing="linear";this._offset=0;if(typeof config.easing==="object"&&config.easing!==null)
{this._easing=config.easing.default||this._easing;this._offset=config.easing.offset||this._offset;}
this._register();};FORGE.Track.prototype.destroy=function()
{this._unregister();};Object.defineProperty(FORGE.Track.prototype,"name",{get:function()
{return this._name;}});Object.defineProperty(FORGE.Track.prototype,"description",{get:function()
{return this._description;}});Object.defineProperty(FORGE.Track.prototype,"keyframes",{get:function()
{return this._keyframes;}});Object.defineProperty(FORGE.Track.prototype,"count",{set:function(value)
{if(typeof value==="number")
{this._count=value;}},get:function()
{return this._count;}});Object.defineProperty(FORGE.Track.prototype,"easing",{get:function()
{return this._easing;}});Object.defineProperty(FORGE.Track.prototype,"offset",{get:function()
{return this._offset;}});Object.defineProperty(FORGE.Track.prototype,"duration",{get:function()
{var res=this._keyframes[0].time;for(var i=1,ii=this._keyframes.length;i<ii;i++)
{if(this._keyframes[i].time>res)
{res=this._keyframes[i].time;}}
return res;}});FORGE.Object3D=function(viewer,className)
{this._viewer=viewer;this._mesh=null;this._fx="";this._visible=true;this._interactive=true;this._events=null;this._hovered=false;this._pickingColor=null;this._ready=false;this._onClick=null;this._onOver=null;this._onOut=null;this._onReady=null;FORGE.BaseObject.call(this,className||"Object3D");this._boot();};FORGE.Object3D.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Object3D.prototype.constructor=FORGE.Object3D;FORGE.Object3D.prototype._boot=function()
{this._events={};this._mesh=new THREE.Mesh();this._pickingColor=FORGE.PickingDrawPass.colorFrom3DObject(this._mesh);this._viewer.renderer.objects.register(this);};FORGE.Object3D.prototype._createEvents=function(events)
{var event;for(var e in events)
{event=new FORGE.ActionEventDispatcher(this._viewer,e);event.addActions(events[e]);this._events[e]=event;}};FORGE.Object3D.prototype._clearEvents=function()
{for(var e in this._events)
{this._events[e].destroy();this._events[e]=null;}};FORGE.Object3D.prototype.click=function()
{this.log("click "+this._mesh.id);if(FORGE.Utils.isTypeOf(this._events.onClick,"ActionEventDispatcher")===true)
{this._events.onClick.dispatch();}
if(this._onClick!==null)
{this._onClick.dispatch();}};FORGE.Object3D.prototype.over=function()
{this.log("over "+this._mesh.id);if(FORGE.Utils.isTypeOf(this._events.onOver,"ActionEventDispatcher")===true)
{this._events.onOver.dispatch();}
if(this._onOver!==null)
{this._onOver.dispatch();}};FORGE.Object3D.prototype.out=function()
{if(this!=null&&this._events!=null&&this._events.onOut!=null){if(FORGE.Utils.isTypeOf(this._events.onOut,"ActionEventDispatcher")===true)
{this._events.onOut.dispatch();}}
if(this._onOut!==null)
{this._onOut.dispatch();}};FORGE.Object3D.prototype.destroy=function()
{this._viewer.renderer.objects.unregister(this);if(this._mesh!==null)
{this._mesh.userData=null;if(this._mesh.geometry!==null)
{this._mesh.geometry.dispose();this._mesh.geometry=null;}
this._mesh.material=null;this._mesh=null;}
if(this._onClick!==null)
{this._onClick.destroy();this._onClick=null;}
if(this._onOver!==null)
{this._onOver.destroy();this._onOver=null;}
if(this._onOut!==null)
{this._onOut.destroy();this._onOut=null;}
if(this._onReady!==null)
{this._onReady.destroy();this._onReady=null;}
this._clearEvents();this._events=null;this._viewer=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Object3D.prototype,"mesh",{get:function()
{return this._mesh;}});Object.defineProperty(FORGE.Object3D.prototype,"visible",{get:function()
{return this._visible;},set:function(value)
{this._visible=Boolean(value);if(this._mesh!==null)
{this._mesh.visible=this._visible;}}});Object.defineProperty(FORGE.Object3D.prototype,"hovered",{get:function()
{return this._hovered;},set:function(value)
{this._hovered=Boolean(value);}});Object.defineProperty(FORGE.Object3D.prototype,"interactive",{get:function()
{return this._interactive;},set:function(value)
{this._interactive=Boolean(value);}});Object.defineProperty(FORGE.Object3D.prototype,"fx",{get:function()
{return this._fx;}});Object.defineProperty(FORGE.Object3D.prototype,"events",{get:function()
{return this._events;}});Object.defineProperty(FORGE.Object3D.prototype,"ready",{get:function()
{return this._ready;}});Object.defineProperty(FORGE.Object3D.prototype,"onClick",{get:function()
{if(this._onClick===null)
{this._onClick=new FORGE.EventDispatcher(this);}
return this._onClick;}});Object.defineProperty(FORGE.Object3D.prototype,"onOver",{get:function()
{if(this._onOver===null)
{this._onOver=new FORGE.EventDispatcher(this);}
return this._onOver;}});Object.defineProperty(FORGE.Object3D.prototype,"onOut",{get:function()
{if(this._onOut===null)
{this._onOut=new FORGE.EventDispatcher(this);}
return this._onOut;}});Object.defineProperty(FORGE.Object3D.prototype,"onReady",{get:function()
{if(this._onReady===null)
{this._onReady=new FORGE.EventDispatcher(this);}
return this._onReady;}});FORGE.ObjectRenderer=function(viewer)
{this._viewer=viewer;this._objects=null;this._renderScenes=null;FORGE.BaseObject.call(this,"ObjectRenderer");this._boot();};FORGE.ObjectRenderer.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.ObjectRenderer.prototype.constructor=FORGE.ObjectRenderer;FORGE.ObjectRenderer.prototype._boot=function()
{this._objects=[];this._renderScenes=[];};FORGE.ObjectRenderer.prototype._getByFX=function(fx)
{var result=[];if(typeof fx==="undefined"||fx===""||fx===null)
{result=this._objects.filter(function(hs)
{return(typeof hs.fx==="undefined"||hs.fx===""||hs.fx===null);});}
else
{result=this._objects.filter(function(hs)
{return hs.fx===fx;});}
return result;};FORGE.ObjectRenderer.prototype._getWithoutFX=function()
{var result=this._getByFX(null);return result;};FORGE.ObjectRenderer.prototype._getWithFX=function()
{var withoutFX=this._getWithoutFX();var result=FORGE.Utils.arrayByDifference(this._objects,withoutFX);return result;};FORGE.ObjectRenderer.prototype._getFX=function()
{var withFX=this._getWithFX();var result=withFX.reduce(function(list,spot)
{if(list.indexOf(spot.fx)<0)
{list.push(spot.fx);}
return list;},[]);return result;};FORGE.ObjectRenderer.prototype.register=function(object)
{this._objects.push(object);};FORGE.ObjectRenderer.prototype.unregister=function(object)
{this._objects.splice(this._objects.indexOf(object),1);};FORGE.ObjectRenderer.prototype.createRenderScenes=function()
{var camera=this._viewer.renderer.camera.main;var withoutFX=this._getWithoutFX();if(withoutFX.length>0)
{var scene=new THREE.Scene();for(var i=0,ii=withoutFX.length;i<ii;i++)
{scene.add(withoutFX[i].mesh);}
var renderScene=new FORGE.RenderScene(this._viewer,scene,camera,null);this._renderScenes.push(renderScene);}
var fxList=this._getFX();for(var j=0,jj=fxList.length;j<jj;j++)
{var fx=fxList[j];var renderList=this._getByFX(fx);var sceneFx=new THREE.Scene();for(var k=0,kk=renderList.length;k<kk;k++)
{sceneFx.add(renderList[k].mesh);}
var fxSet=this._viewer.postProcessing.getFxSetByUID(fx);var renderScene=new FORGE.RenderScene(this._viewer,sceneFx,camera,fxSet);this._renderScenes.push(renderScene);}};FORGE.ObjectRenderer.prototype.getRaycastable=function()
{var result=this._objects.filter(function(object)
{return(object.ready===true&&object.interactive===true);});return result;};FORGE.ObjectRenderer.prototype.getByMesh=function(mesh)
{for(var i=0,ii=this._objects.length;i<ii;i++)
{if(this._objects[i].mesh===mesh)
{return this._objects[i];}}
return null;};FORGE.ObjectRenderer.prototype.clear=function()
{var count=this._renderScenes.length;while(count--)
{var renderScene=this._renderScenes.pop();renderScene.destroy();}};FORGE.ObjectRenderer.prototype.destroy=function()
{this.clear();this._renderScenes=null;this._viewer=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.ObjectRenderer.prototype,"all",{get:function()
{return this._objects;}});Object.defineProperty(FORGE.ObjectRenderer.prototype,"renderScenes",{get:function()
{return this._renderScenes;}});FORGE.Raycaster=function(viewer)
{this._viewer=viewer;this._raycaster=null;this._hoveredObject=null;FORGE.BaseObject.call(this,"Raycaster");this._boot();};FORGE.Raycaster.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Raycaster.prototype.constructor=FORGE.Raycaster;FORGE.Raycaster.prototype._boot=function()
{};FORGE.Raycaster.prototype.start=function(mode)
{this.log("Raycaster start");if(this._raycaster===null)
{this._raycaster=new THREE.Raycaster();}
if(mode===FORGE.PickingManager.modes.POINTER)
{this._startPointer();}
else if(mode===FORGE.PickingManager.modes.GAZE)
{this._startGaze();}};FORGE.Raycaster.prototype._startPointer=function()
{this.log("Raycating start pointer");if(this._viewer.canvas.pointer.onClick.has(this._canvasPointerClickHandler,this)===false)
{this._viewer.canvas.pointer.onClick.add(this._canvasPointerClickHandler,this);}
if(this._viewer.canvas.pointer.onMove.has(this._canvasPointerMoveHandler,this)===false)
{this._viewer.canvas.pointer.onMove.add(this._canvasPointerMoveHandler,this);}};FORGE.Raycaster.prototype._startGaze=function()
{this.log("Raycating start gaze");if(this._viewer.renderer.camera.onCameraChange.has(this._cameraChangeHandler,this)===false)
{this._viewer.renderer.camera.onCameraChange.add(this._cameraChangeHandler,this);}};FORGE.Raycaster.prototype.stop=function()
{this.log("Raycaster stop");if(this._viewer.canvas.pointer.onClick.has(this._canvasPointerClickHandler,this))
{this._viewer.canvas.pointer.onClick.remove(this._canvasPointerClickHandler,this);}
if(this._viewer.canvas.pointer.onMove.has(this._canvasPointerMoveHandler,this))
{this._viewer.canvas.pointer.onMove.remove(this._canvasPointerMoveHandler,this);}
if(this._viewer.renderer.camera.onCameraChange.has(this._cameraChangeHandler,this))
{this._viewer.renderer.camera.onCameraChange.remove(this._cameraChangeHandler,this);}
this._out();this._raycaster=null;};FORGE.Raycaster.prototype._canvasPointerClickHandler=function(event)
{var position=FORGE.Pointer.getRelativeMousePosition(event.data);this._raycast("click",position);};FORGE.Raycaster.prototype._canvasPointerMoveHandler=function(event)
{var position=FORGE.Pointer.getRelativeMousePosition(event.data);this._raycast("move",position);};FORGE.Raycaster.prototype._cameraChangeHandler=function()
{this._raycast("move");};FORGE.Raycaster.prototype._raycast=function(event,screenPoint)
{if(this._hoveredObject!==null&&this._hoveredObject.ready===false)
{return;}
var resolution=this._viewer.renderer.canvasResolution;screenPoint=screenPoint||new THREE.Vector2(resolution.width / 2,resolution.height / 2);var camera=this._viewer.renderer.camera;var ndc=new THREE.Vector2(screenPoint.x / resolution.width,1.0-screenPoint.y / resolution.height).multiplyScalar(2).addScalar(-1);var objects=this._viewer.renderer.objects.getRaycastable();this._setHovered(objects,false);var intersected=this._intersect(objects,ndc,camera);if(intersected!==null)
{if(event==="click")
{this._hoveredObject=intersected;this.click();}
else if(event==="move")
{if(intersected!==this._hoveredObject)
{this._out();this._hoveredObject=intersected;intersected.over();if(this._viewer.renderer.pickingManager.mode===FORGE.PickingManager.modes.GAZE)
{this._viewer.renderer.camera.gaze.start();}}}}
else
{this._out();}};FORGE.Raycaster.prototype._out=function()
{if(this._hoveredObject!==null)
{this._hoveredObject.out();this._hoveredObject=null;if(this._viewer.renderer.pickingManager.mode===FORGE.PickingManager.modes.GAZE)
{this._viewer.renderer.camera.gaze.stop();}}};FORGE.Raycaster.prototype._setHovered=function(objects,hovered)
{for(var i=0,ii=objects.length;i<ii;i++)
{objects[i].hovered=hovered;}};FORGE.Raycaster.prototype._intersect=function(objects,ndc,camera)
{var result=null;this._raycaster.setFromCamera(ndc,camera.main);var meshes=[];for(var i=0,ii=objects.length;i<ii;i++)
{meshes.push(objects[i].mesh);}
var intersects=this._raycaster.intersectObjects(meshes);while(result===null&&intersects.length>0)
{var intersect=intersects.shift();var mesh=intersect.object;var uv=intersect.uv;var object=this._viewer.renderer.objects.getByMesh(mesh);if(mesh.material.transparent===false)
{result=object;}
else
{var color=this._getObjectColorFromUVCoords(object,uv);if(color===null||(color!=null&&color.alpha>10))
{result=object;}}}
return result;};FORGE.Raycaster.prototype._getObjectColorFromUVCoords=function(object,uv)
{var color=null;if(object.mesh!==null&&object.mesh.material!==null&&typeof object.mesh.material.uniforms.tTexture!=="undefined")
{var texture=object.mesh.material.uniforms.tTexture.value;var canvas=null;if(texture!==null&&texture.image!==null)
{if(texture.image.nodeName.toLowerCase()==="img")
{canvas=document.createElement("canvas");canvas.width=texture.image.width;canvas.height=texture.image.height;canvas.getContext("2d").drawImage(texture.image,0,0);}
else if(texture.image.nodeName.toLowerCase()==="canvas")
{canvas=texture.image;}
if(canvas!==null)
{var w=canvas.width;var h=canvas.height;var x=Math.floor(uv.x*w);var y=Math.floor(h-uv.y*h);var idx=4*(y*w+x);var data=canvas.getContext("2d").getImageData(0,0,w,h).data;color=new FORGE.ColorRGBA(data[idx+0],data[idx+1],data[idx+2],data[idx+3]);}}}
else if(typeof object.mesh.material.color!=="undefined")
{color=object.mesh.material.color;}
return color;};FORGE.Raycaster.prototype.click=function()
{if(this._hoveredObject!==null)
{this._hoveredObject.click();}};FORGE.Raycaster.prototype.clear=function()
{this._hoveredObject=null;};Object.defineProperty(FORGE.Raycaster.prototype,"hoveredObject",{get:function()
{return this._hoveredObject;}});FORGE.PickingDrawPass=function(viewer)
{this._viewer=viewer;this._target=null;this._material=null;this._hoveredObject=null;this._scaling=3;FORGE.BaseObject.call(this,"PickingDrawPass");this._boot();};FORGE.PickingDrawPass.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.PickingDrawPass.prototype.constructor=FORGE.PickingDrawPass;FORGE.PickingDrawPass.prototype._boot=function()
{var shader=FORGE.Utils.clone(this._viewer.renderer.view.current.shaderWTS.mapping);shader.uniforms.tColor={type:"c",value:new THREE.Color(0x000000)};this._material=new THREE.RawShaderMaterial({fragmentShader:FORGE.ShaderLib.parseIncludes(FORGE.ShaderChunk.wts_frag_color),vertexShader:FORGE.ShaderLib.parseIncludes(shader.vertexShader),uniforms:shader.uniforms,side:THREE.FrontSide,name:"PickingMaterial"});var rtParams={format:THREE.RGBAFormat};var width=this._viewer.renderer.canvasResolution.width / this._scaling;var height=this._viewer.renderer.canvasResolution.height / this._scaling;this._target=new THREE.WebGLRenderTarget(width,height,rtParams);this._target.name="Picking RenderTarget";};FORGE.PickingDrawPass.prototype._getObjectByID=function(id)
{var objects=this._viewer.renderer.objects.all;for(var i=0,ii=objects.length;i<ii;i++)
{if(objects[i].mesh.id===id)
{return objects[i];}}
return null;};FORGE.PickingDrawPass.colorFrom3DObject=function(object)
{return new THREE.Color(object.id);};FORGE.PickingDrawPass.prototype._colorTo3DObject=function(color)
{var id=((color.r&0x0000ff)<<16)|((color.g&0x0000ff)<<8)+(color.b&0x0000ff);return this._getObjectByID(id);};FORGE.PickingDrawPass.prototype._getObjectAtXnYn=function(xn,yn)
{var renderer=this._viewer.renderer.webGLRenderer;var data=new Uint8Array(4);renderer.readRenderTargetPixels(this._target,xn*this._target.width,yn*this._target.height,1,1,data);return this._colorTo3DObject(new THREE.Color(data[0],data[1],data[2]));};FORGE.PickingDrawPass.prototype._getObjectUnderPointerEvent=function(event)
{var e=event.data;var position=FORGE.Pointer.getRelativeMousePosition(e);var xn=position.x / event.data.target.width;var yn=1-position.y / event.data.target.height;return this._getObjectAtXnYn(xn,yn);};FORGE.PickingDrawPass.prototype._canvasPointerClickHandler=function(event)
{var object=this._getObjectUnderPointerEvent(event);if(object===null)
{return;}
object.click();};FORGE.PickingDrawPass.prototype._canvasPointerMoveHandler=function(event)
{var object=this._getObjectUnderPointerEvent(event);if(object===null)
{if(this._hoveredObject!==null)
{this._hoveredObject.out();this._hoveredObject=null;}
return;}
if(object!==this._hoveredObject)
{if(this._hoveredObject!==null)
{this._hoveredObject.out();}
object.over();this._hoveredObject=object;}};FORGE.PickingDrawPass.prototype.start=function()
{this._viewer.canvas.pointer.enabled=true;if(this._viewer.canvas.pointer.onClick.has(this._canvasPointerClickHandler,this)===false)
{this._viewer.canvas.pointer.onClick.add(this._canvasPointerClickHandler,this);}
if(this._viewer.canvas.pointer.onMove.has(this._canvasPointerMoveHandler,this)===false)
{this._viewer.canvas.pointer.onMove.add(this._canvasPointerMoveHandler,this);}};FORGE.PickingDrawPass.prototype.stop=function()
{if(this._viewer.canvas.pointer.onClick.has(this._canvasPointerClickHandler,this))
{this._viewer.canvas.pointer.onClick.remove(this._canvasPointerClickHandler,this);}
if(this._viewer.canvas.pointer.onMove.has(this._canvasPointerMoveHandler,this))
{this._viewer.canvas.pointer.onMove.remove(this._canvasPointerMoveHandler,this);}};FORGE.PickingDrawPass.prototype.click=function()
{if(this._hoveredObject!==null&&this._viewer.canvas.pointer.onClick.has(this._canvasPointerClickHandler,this))
{this._hoveredObject.click();}};FORGE.PickingDrawPass.prototype.setSize=function(size)
{if(this._target!==null)
{this._target.setSize(size.width,size.height);}};FORGE.PickingDrawPass.prototype.clear=function()
{this._hoveredObject=null;};FORGE.PickingDrawPass.prototype.destroy=function()
{if(this._material!==null)
{this._material.dispose();this._material=null;}
if(this._target!==null)
{this._target.dispose();this._target=null;}
this._viewer=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.PickingDrawPass.prototype,"material",{get:function()
{return this._material;}});Object.defineProperty(FORGE.PickingDrawPass.prototype,"renderTarget",{get:function()
{return this._target;}});FORGE.PickingManager=function(viewer)
{this._viewer=viewer;this._pickingDrawPass=null;this._raycaster=null;this._mode=FORGE.PickingManager.modes.POINTER;FORGE.BaseObject.call(this,"PickingManager");this._boot();};FORGE.PickingManager.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.PickingManager.prototype.constructor=FORGE.PickingManager;FORGE.PickingManager.modes={};FORGE.PickingManager.modes.POINTER="pointer";FORGE.PickingManager.modes.GAZE="gaze";FORGE.PickingManager.prototype._boot=function()
{};FORGE.PickingManager.prototype._startRaycastPicking=function()
{if(this._raycaster!==null)
{return;}
if(this._pickingDrawPass!==null)
{this._pickingDrawPass.stop();this._pickingDrawPass.destroy();this._pickingDrawPass=null;}
this._raycaster=new FORGE.Raycaster(this._viewer);this._raycaster.start(this._mode);};FORGE.PickingManager.prototype._startDrawpassPicking=function()
{if(this._pickingDrawPass!==null)
{return;}
if(this._raycaster!==null)
{this._raycaster.stop();this._raycaster.destroy();this._raycaster=null;}
this._pickingDrawPass=new FORGE.PickingDrawPass(this._viewer);this._pickingDrawPass.start();};FORGE.PickingManager.prototype.updateForViewType=function(type)
{if(type===FORGE.ViewType.RECTILINEAR)
{this._startRaycastPicking();}
else
{this._startDrawpassPicking();}};FORGE.PickingManager.prototype.clear=function()
{if(this._raycaster!==null)
{this._raycaster.clear();}
if(this._pickingDrawPass!==null)
{this._pickingDrawPass.clear();}};FORGE.PickingManager.prototype.setSize=function(size)
{if(this._pickingDrawPass!==null)
{this._pickingDrawPass.setSize(size);}};FORGE.PickingManager.prototype.click=function()
{if(this._raycaster!==null)
{this._raycaster.click();}
if(this._pickingDrawPass!==null)
{this._pickingDrawPass.click();}};FORGE.PickingManager.prototype.start=function()
{if(this._raycaster!==null)
{this._raycaster.start(this._mode);}
if(this._pickingDrawPass!==null)
{this._pickingDrawPass.start();}};FORGE.PickingManager.prototype.stop=function()
{if(this._raycaster!==null)
{this._raycaster.stop();}
if(this._pickingDrawPass!==null)
{this._pickingDrawPass.stop();}};FORGE.PickingManager.prototype.destroy=function()
{if(this._raycaster!==null)
{this._raycaster.stop();this._raycaster.destroy();this._raycaster=null;}
if(this._pickingDrawPass!==null)
{this._pickingDrawPass.stop();this._pickingDrawPass.destroy();this._pickingDrawPass=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.PickingManager.prototype,"renderTarget",{get:function()
{if(this._pickingDrawPass===null)
{return null;}
return this._pickingDrawPass.renderTarget;}});Object.defineProperty(FORGE.PickingManager.prototype,"material",{get:function()
{if(this._pickingDrawPass===null)
{return null;}
return this._pickingDrawPass.material;}});Object.defineProperty(FORGE.PickingManager.prototype,"mode",{get:function()
{return this._mode;},set:function(value)
{if(value!==FORGE.PickingManager.modes.POINTER&&value!==FORGE.PickingManager.modes.GAZE)
{return;}
if(value!==this._mode)
{this._mode=value;this.start();}}});FORGE.HotspotManager=function(viewer)
{this._viewer=viewer;this._config=null;this._hotspots=[];FORGE.BaseObject.call(this,"HotspotManager");};FORGE.HotspotManager.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.HotspotManager.prototype.constructor=FORGE.HotspotManager;FORGE.HotspotManager.prototype._parseConfig=function(config)
{for(var i=0,ii=config.length;i<ii;i++)
{this.create(config[i]);}};FORGE.HotspotManager.prototype.create=function(config)
{var hotspot=null;var type=config.type||FORGE.HotspotType.THREE_DIMENSIONAL;switch(type)
{case FORGE.HotspotType.THREE_DIMENSIONAL:hotspot=new FORGE.Hotspot3D(this._viewer,config);break;case FORGE.HotspotType.DOM:hotspot=new FORGE.HotspotDOM(this._viewer,config);break;}
if(hotspot!==null)
{this._hotspots.push(hotspot);return hotspot;}
return false;};FORGE.HotspotManager.prototype.remove=function(hotspot)
{if(FORGE.Utils.isTypeOf(hotspot,"string")===true)
{hotspot=FORGE.UID.get(hotspot);}
if(FORGE.Utils.isTypeOf(hotspot,"Hotspot3D")===true)
{var index=this._hotspots.indexOf(hotspot);this._hotspots.splice(index,1);hotspot.destroy();}};FORGE.HotspotManager.prototype._parseTracks=function(tracks)
{for(var i=0,ii=tracks.length;i<ii;i++)
{new FORGE.HotspotAnimationTrack(tracks[i]);}};FORGE.HotspotManager.prototype._checkHotspotsReady=function()
{for(var i=0,ii=this._hotspots.length;i<ii;i++)
{var hotspot=this._hotspots[i];if(hotspot.ready===false)
{return false;}}
return true;};FORGE.HotspotManager.prototype._sceneLoadStartHandler=function()
{var scene=this._viewer.story.scene;scene.onUnloadStart.addOnce(this._sceneUnloadStartHandler,this);if(typeof scene.config.hotspots!=="undefined")
{var hotspots=scene.config.hotspots;this.addConfig(hotspots);}};FORGE.HotspotManager.prototype._sceneUnloadStartHandler=function()
{this.clear();};FORGE.HotspotManager.prototype.boot=function()
{this._config=[];this._viewer.story.onSceneLoadStart.add(this._sceneLoadStartHandler,this);};FORGE.HotspotManager.prototype.getByType=function(type)
{var result=this._hotspots.filter(function(hotspot)
{return hotspot.type===type;});return result;};FORGE.HotspotManager.prototype.addConfig=function(config)
{this._parseConfig(config);};FORGE.HotspotManager.prototype.addTracks=function(config)
{if(config.tracks!==null&&typeof config.tracks!=="undefined")
{this._parseTracks(config.tracks);}};FORGE.HotspotManager.prototype.update=function()
{for(var i=0,ii=this._hotspots.length;i<ii;i++)
{this._hotspots[i].update();}};FORGE.HotspotManager.prototype.clear=function(type)
{this._hotspots=this._hotspots.filter(function(hs)
{var keep=(typeof type==="string"&&hs.type!==type);if(keep===false)
{hs.destroy();}
return keep;});};FORGE.HotspotManager.prototype.dump=function()
{var dump=[];for(var i=0,ii=this._hotspots.length;i<ii;i++)
{dump.push(this._hotspots[i].dump());}
return dump;};FORGE.HotspotManager.prototype.destroy=function()
{this.clear();this._viewer=null;this._hotspots=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.HotspotManager.prototype,"all",{get:function()
{return this._hotspots;}});Object.defineProperty(FORGE.HotspotManager.prototype,"uids",{get:function()
{var uids=[];for(var i=0,ii=this._hotspots.length;i<ii;i++)
{uids.push(this._hotspots[i].uid);}
return uids;}});Object.defineProperty(FORGE.HotspotManager.prototype,"count",{get:function()
{return this._hotspots.length;}});FORGE.HotspotDOM=function(viewer,config)
{this._viewer=viewer;this._config=config;this._transform=null;this._dom=null;this._events=null;this._visible=true;this._interactive=true;this._facingCenter=false;this._cursor="pointer";FORGE.BaseObject.call(this,"HotspotDOM");this._boot();};FORGE.HotspotDOM.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.HotspotDOM.prototype.constructor=FORGE.HotspotDOM;FORGE.HotspotDOM.DEFAULT_CONFIG={dom:{id:"hostpot-dom",width:320,height:240,color:"white",index:10}};FORGE.HotspotDOM.prototype._boot=function()
{this._transform=new FORGE.HotspotTransform();this._events={};this._parseConfig(this._config);this._register();this._viewer.renderer.view.onChange.add(this._viewChangeHandler,this);};FORGE.HotspotDOM.prototype._parseConfig=function(config)
{config=(FORGE.Utils.extendMultipleObjects(FORGE.HotspotDOM.DEFAULT_CONFIG,config));this._uid=config.uid;if(typeof config.events==="object"&&config.events!==null)
{this._createEvents(config.events);}
var dom=config.dom;if(dom!==null&&typeof dom!=="undefined")
{var id;if(typeof dom.id==="string")
{id=dom.id;}
else
{id=this._uid;}
var div=document.getElementById(id);if(div!==null)
{this._dom=div;}
else
{this._dom=document.createElement("div");this._dom.id=id;}
this._dom.classList.add("hotspot-dom");this._dom.style.position="absolute";if(typeof dom.class==="string")
{this._dom.classList.add(dom.class);}
else if(Array.isArray(dom.class)===true)
{for(var i=0,ii=dom.class.length;i<ii;i++)
{this._dom.classList.add(dom.class[i]);}}
var rule="."+this._dom.id+"-basic-class {";if(typeof dom.width==="number")
{rule+="width: "+dom.width+"px;";}
else if(typeof dom.width==="string")
{rule+="width: "+dom.width+";";}
if(typeof dom.height==="number")
{rule+="height: "+dom.height+"px;";}
else if(typeof dom.height==="string")
{rule+="height: "+dom.height+";";}
if(typeof dom.color==="string")
{rule+="background-color: "+dom.color+";";}
if(typeof dom.index==="number")
{rule+="z-index: "+dom.index+";";}
rule+="}";this._viewer.domHotspotStyle.sheet.insertRule(rule,0);this._dom.classList.add(this._dom.id+"-basic-class");}
this._dom.style.pointerEvents="auto";this._dom.addEventListener("click",this._domClickHandler.bind(this));this._dom.addEventListener("mouseover",this._domOverHandler.bind(this));this._dom.addEventListener("mouseout",this._domOutHandler.bind(this));if(config.transform!==null&&typeof config.transform!=="undefined")
{this._transform.load(config.transform,false);}
this._visible=(typeof config.visible==="boolean")?config.visible:true;this._interactive=(typeof config.interactive==="boolean")?config.interactive:true;this._cursor=(typeof config.cursor==="string")?config.cursor:"pointer";this.show();};FORGE.HotspotDOM.prototype._domClickHandler=function()
{if(FORGE.Utils.isTypeOf(this._events.onClick,"ActionEventDispatcher")===true)
{this._events.onClick.dispatch();}};FORGE.HotspotDOM.prototype._domOverHandler=function()
{if(FORGE.Utils.isTypeOf(this._events.onOver,"ActionEventDispatcher")===true)
{this._events.onOver.dispatch();}
this._dom.style.cursor=this._cursor;};FORGE.HotspotDOM.prototype._domOutHandler=function()
{if(FORGE.Utils.isTypeOf(this._events.onOut,"ActionEventDispatcher")===true)
{this._events.onOut.dispatch();}
this._dom.style.cursor="default";};FORGE.HotspotDOM.prototype._createEvents=function(events)
{var event;for(var e in events)
{event=new FORGE.ActionEventDispatcher(this._viewer,e);event.addActions(events[e]);this._events[e]=event;}};FORGE.HotspotDOM.prototype._clearEvents=function()
{for(var e in this._events)
{this._events[e].destroy();this._events[e]=null;}};FORGE.HotspotDOM.prototype._viewChangeHandler=function()
{this._dom.style.display="block";if((this._viewer.view.type!==FORGE.ViewType.RECTILINEAR&&this._viewer.view.type!==FORGE.ViewType.GOPRO)||this._visible===false)
{this._dom.style.display="none";}};FORGE.HotspotDOM.prototype.show=function()
{this._viewer.domHotspotContainer.dom.appendChild(this._dom);};FORGE.HotspotDOM.prototype.hide=function()
{this._viewer.domHotspotContainer.dom.removeChild(this._dom,false);};FORGE.HotspotDOM.prototype.update=function()
{var position=this._viewer.view.worldToScreen(this._transform.position.values);if(position!==null)
{var x=position.x-this._dom.clientWidth / 2;var y=position.y-this._dom.clientHeight / 2;this._dom.style.left=x+"px";this._dom.style.top=y+"px";}
else
{this._dom.style.left="99999px";this._dom.style.top="99999px";}};FORGE.HotspotDOM.prototype.destroy=function()
{this._dom=null;this._transform.destroy();this._transform=null;this._clearEvents();this._events=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.HotspotDOM.prototype,"dom",{get:function()
{return this._dom;}});Object.defineProperty(FORGE.HotspotDOM.prototype,"visible",{get:function()
{return this._visible;},set:function(value)
{this._visible=Boolean(value);if(this._visible===true)
{this._viewChangeHandler();}
else
{this._dom.style.display="none";}}});Object.defineProperty(FORGE.HotspotDOM.prototype,"interactive",{get:function()
{return this._interactive;},set:function(value)
{this._interactive=Boolean(value);if(this._interactive===true)
{this._dom.style.pointerEvents="auto";}
else
{this._dom.style.pointerEvents="none";}}});FORGE.Hotspot3D=function(viewer,config)
{this._config=config;this._name="";this._transform=null;this._geometry=null;this._material=null;this._sound=null;this._animation=null;this._states=null;this._facingCenter=false;this._cursor="pointer";this._onBeforeRenderBound=null;this._onAfterRenderBound=null;FORGE.Object3D.call(this,viewer,"Hotspot3D");};FORGE.Hotspot3D.prototype=Object.create(FORGE.Object3D.prototype);FORGE.Hotspot3D.prototype.constructor=FORGE.Hotspot3D;FORGE.Hotspot3D.prototype._boot=function()
{FORGE.Object3D.prototype._boot.call(this);this._transform=new FORGE.HotspotTransform();this._transform.onChange.add(this._onTransformChangeHandler,this);this._animation=new FORGE.HotspotAnimation(this._viewer,this._transform);this._onBeforeRenderBound=this._onBeforeRender.bind(this);this._onAfterRenderBound=this._onAfterRender.bind(this);this._mesh.visible=false;this._mesh.onBeforeRender=(this._onBeforeRenderBound);this._mesh.onAfterRender=(this._onAfterRenderBound);this._viewer.renderer.view.onChange.add(this._viewChangeHandler,this);if(typeof this._config!=="undefined"&&this._config!==null)
{this._parseConfig(this._config);}};FORGE.Hotspot3D.prototype._parseConfig=function(config)
{this._uid=config.uid;this._tags=config.tags;this._register();this._mesh.name="mesh-"+this._uid;this._mesh.userData=config;this._name=(typeof config.name==="string")?config.name:"";this._visible=(typeof config.visible==="boolean")?config.visible:true;this._facingCenter=(typeof config.facingCenter==="boolean")?config.facingCenter:false;this._interactive=(typeof config.interactive==="boolean")?config.interactive:true;this._cursor=(typeof config.cursor==="string")?config.cursor:"pointer";this._geometry=new FORGE.HotspotGeometry();this._material=new FORGE.HotspotMaterial(this._viewer,this._uid);this._sound=new FORGE.HotspotSound(this._viewer,this._uid);this._states=new FORGE.HotspotStates(this._viewer,this._uid);if(typeof config.states==="object"&&config.states!==null)
{this._states.addConfig(config.states);}
if(typeof config.fx==="string"&&config.fx!=="")
{this._fx=config.fx;}
if(typeof config.events==="object"&&config.events!==null)
{this._createEvents(config.events);}
this._states.onLoadComplete.add(this._stateLoadCompleteHandler,this);this._states.load();};FORGE.Hotspot3D.prototype._onBeforeRender=function(renderer,scene,camera,geometry,material,group)
{var g=group;this._viewer.renderer.view.current.updateUniforms(material.uniforms);if(material.name==="HotspotMaterial")
{this._material.update();}
else if(material.name==="PickingMaterial")
{if(material.program)
{var gl=this._viewer.renderer.webGLRenderer.getContext();gl.useProgram(material.program.program);material.program.getUniforms().map.tColor.setValue(gl,this._pickingColor);material.uniforms.tColor.value=this._pickingColor;}}};FORGE.Hotspot3D.prototype._onAfterRender=function()
{};FORGE.Hotspot3D.prototype._stateLoadCompleteHandler=function()
{this.log("state load complete handler");this._mesh.geometry=this._geometry.geometry;this._mesh.material=this._material.material;this._mesh.visible=this._visible;this._updatePosition();if(this._animation.autoPlay===true&&document[FORGE.Device.visibilityState]==="visible")
{this._animation.play();}
if(this._onReady!==null)
{this._onReady.dispatch();}};FORGE.Hotspot3D.prototype._onTransformChangeHandler=function()
{this.log("transform change handler");this._updatePosition();};FORGE.Hotspot3D.prototype._updatePosition=function()
{this.log("update position");this._mesh.position.x=this._transform.position.x;this._mesh.position.y=this._transform.position.y;this._mesh.position.z=this._transform.position.z;if(this._facingCenter===true)
{var spherical=new THREE.Spherical().setFromVector3(new THREE.Vector3(this._transform.position.x,this._transform.position.y,this._transform.position.z));this._mesh.rotation.set(-spherical.phi+Math.PI / 2,spherical.theta+Math.PI,0,"YXZ");this._mesh.rotation.x+=-FORGE.Math.degToRad(this._transform.rotation.x);this._mesh.rotation.y+=FORGE.Math.degToRad(this._transform.rotation.y);this._mesh.rotation.z+=FORGE.Math.degToRad(this._transform.rotation.z);}
else
{var rx=-FORGE.Math.degToRad(this._transform.rotation.x);var ry=FORGE.Math.degToRad(this._transform.rotation.y);var rz=FORGE.Math.degToRad(this._transform.rotation.z);this._mesh.rotation.set(rx,ry,rz,"YXZ");}
this._mesh.scale.x=FORGE.Math.clamp(this._transform.scale.x,0.000001,100000);this._mesh.scale.y=FORGE.Math.clamp(this._transform.scale.y,0.000001,100000);this._mesh.scale.z=FORGE.Math.clamp(this._transform.scale.z,0.000001,100000);};FORGE.Hotspot3D.prototype._checkReady=function()
{return(this._states.ready===true);};FORGE.Hotspot3D.prototype._viewChangeHandler=function()
{this._mesh.frustumCulled=this._viewer.renderer.view.current instanceof FORGE.ViewRectilinear;this._material.updateShader();this._mesh.material=this._material.material;};FORGE.Hotspot3D.prototype.over=function()
{FORGE.Object3D.prototype.over.call(this);if(this._states!=null){if(this._states.auto===true)
{this._states.load("over");}}
this._viewer.canvas.pointer.cursor=this._cursor;};FORGE.Hotspot3D.prototype.out=function()
{FORGE.Object3D.prototype.out.call(this);if(this._states!=null){if(this._states.auto===true)
{this._states.load();}}
if(this._viewer!=null)
this._viewer.canvas.pointer.cursor="default";};FORGE.Hotspot3D.prototype.update=function()
{if(this._sound!==null)
{this._sound.update();}};FORGE.Hotspot3D.prototype.dump=function()
{var dump={uid:this._uid,name:this._name,tags:this._tags,visible:this._visible,interactive:this._interactive,cursor:this._cursor,fx:this._fx,facingCenter:this._facingCenter,geometry:this._geometry.dump(),transform:this._transform.dump(),material:this._material.dump()};return dump;};FORGE.Hotspot3D.prototype.destroy=function()
{this._viewer.renderer.view.onChange.remove(this._viewChangeHandler,this);this._onBeforeRenderBound=null;this._onAfterRenderBound=null;if(this._states!==null)
{this._states.destroy();this._states=null;}
if(this._transform!==null)
{this._transform.destroy();this._transform=null;}
if(this._geometry!==null)
{this._geometry.destroy();this._geometry=null;}
if(this._animation!==null)
{this._animation.destroy();this._animation=null;}
if(this._material!==null)
{this._material.destroy();this._material=null;}
if(this._sound!==null)
{this._sound.destroy();this._sound=null;}
FORGE.Object3D.prototype.destroy.call(this);};Object.defineProperty(FORGE.Hotspot3D.prototype,"config",{get:function()
{return this._config;}});Object.defineProperty(FORGE.Hotspot3D.prototype,"name",{get:function()
{return this._name;},set:function(value)
{if(typeof value==="string")
{this._name=value;}}});Object.defineProperty(FORGE.Hotspot3D.prototype,"animation",{get:function()
{return this._animation;}});Object.defineProperty(FORGE.Hotspot3D.prototype,"material",{get:function()
{return this._material;}});Object.defineProperty(FORGE.Hotspot3D.prototype,"sound",{get:function()
{return this._sound;}});Object.defineProperty(FORGE.Hotspot3D.prototype,"transform",{get:function()
{return this._transform;}});Object.defineProperty(FORGE.Hotspot3D.prototype,"geometry",{get:function()
{return this._geometry;}});Object.defineProperty(FORGE.Hotspot3D.prototype,"ready",{get:function()
{this._ready=this._checkReady();return this._ready;}});Object.defineProperty(FORGE.Hotspot3D.prototype,"states",{get:function()
{return this._states;}});Object.defineProperty(FORGE.Hotspot3D.prototype,"state",{get:function()
{return this._states.state;},set:function(value)
{this._states.load(value);}});FORGE.HotspotSound=function(viewer,hotspotUid)
{this._viewer=viewer;this._hotspotUid=hotspotUid;this._sound=null;this._volumeMin=0;this._volumeMax=1;this._loop=false;this._startTime=0;this._autoPlay=false;this._position={x:0,y:0,z:200};this._range=360;this._onReady=null;FORGE.BaseObject.call(this,"HotspotSound");};FORGE.HotspotSound.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.HotspotSound.prototype.constructor=FORGE.HotspotSound;FORGE.HotspotSound.prototype._parseConfig=function(config)
{if(typeof config.source==="undefined"||typeof config.source!=="object")
{return;}
this._uid=config.uid;if(typeof config.source.url!=="undefined"&&typeof config.source.url==="string"&&config.source.url!=="")
{this._url=config.source.url;}
else if(typeof config.source.target!=="undefined"&&FORGE.UID.exists(config.source.target)===true)
{
//@todovar object=FORGE.UID.get(config.source.target);return;}
else
{return;}
if(typeof config.options!=="undefined"&&typeof config.options==="object")
{if(typeof config.options.volume==="number")
{this._volumeMax=config.options.volume;}
else if(typeof config.options.volume==="object")
{var volume=(config.options.volume);this._volumeMin=(typeof volume.min==="number")?FORGE.Math.clamp(volume.min,0,1):0;this._volumeMax=(typeof volume.max==="number")?FORGE.Math.clamp(volume.max,0,1):1;}
this._loop=(typeof config.options.loop==="boolean")?config.options.loop:false;this._startTime=(typeof config.options.startTime==="number")?config.options.startTime:0;this._autoPlay=(typeof config.options.autoPlay==="boolean")?config.options.autoPlay:false;this._range=(typeof config.options.range==="number")?FORGE.Math.clamp(config.options.range,1,360):360;}
var hotspot=FORGE.UID.get(this._hotspotUid);var position=hotspot.config.transform.position;this._position.theta=(typeof position.theta==="number")?FORGE.Math.clamp((position.theta),-180,180):0;this._position.phi=(typeof position.phi==="number")?FORGE.Math.clamp((position.phi),-90,90):0;
//@todo manage radiusthis._setupSound();};FORGE.HotspotSound.prototype._setupSound=function()
{this._sound=new FORGE.Sound(this._viewer,this._uid,this._url||"");this._sound.onCanPlayThrough.addOnce(this._onCanPlayThroughHandler,this);if(this._isSpatialized()===true)
{var positionWorld=FORGE.Math.sphericalToCartesian(1,(this._position.theta),(this._position.phi));this._sound.spatialized=this._isSpatialized();this._sound.x=positionWorld.x;this._sound.y=positionWorld.y;this._sound.z=positionWorld.z;}
this._sound.volume=this._volumeMax;this._sound.loop=this._loop;this._sound.startTime=this._startTime;if(this._autoPlay===true)
{if(document[FORGE.Device.visibilityState]==="visible")
{this._sound.play(this._startTime,this._loop,true);}
else
{this._sound.resumed=true;}}};FORGE.HotspotSound.prototype._isSpatialized=function()
{return this._range<360;};FORGE.HotspotSound.prototype._onCanPlayThroughHandler=function()
{this.log("Sound load complete");this._setupComplete();};FORGE.HotspotSound.prototype._setupComplete=function()
{if(this._onReady!==null)
{this._onReady.dispatch();}};FORGE.HotspotSound.prototype._applyRange=function()
{if(this._isSpatialized()===true&&typeof this._range==="number")
{var camera=this._viewer.renderer.camera;var qCamera=FORGE.Quaternion.fromEuler(FORGE.Math.degToRad(camera.yaw),FORGE.Math.degToRad(camera.pitch),0);var qSound=FORGE.Quaternion.fromEuler(FORGE.Math.degToRad((this._position.theta)),FORGE.Math.degToRad((this._position.phi)),0);var distance=FORGE.Quaternion.angularDistance(qSound,qCamera);var radius=FORGE.Math.degToRad(this._range / 2);if(distance<radius)
{var amplitude=this._volumeMax-this._volumeMin;var volume=this._volumeMin+(amplitude*(1-distance / radius));this.log("in range | volume: "+volume);this._sound.volume=volume;}
else
{this.log("out range");this._sound.volume=this._volumeMin;}}};FORGE.HotspotSound.prototype.load=function(config)
{if(FORGE.Utils.compareObjects(this._config,config)===true)
{if(this._onReady!==null)
{this._onReady.dispatch();}
if(this._autoPlay===true&&this._sound!==null)
{this._sound.play(this._startTime,this._loop,true);}
return;}
this._config=config;if(this._sound!==null)
{this._sound.destroy();this._sound=null;}
this._parseConfig(config);};FORGE.HotspotSound.prototype.update=function()
{if(this._viewer.audio.enabled===false)
{if(this._sound!==null)
{this._sound.stop();}
return;}
if(this._isSpatialized()===true)
{this._applyRange();}};FORGE.HotspotSound.prototype.destroy=function()
{if(this._sound!==null)
{this._sound.destroy();this._sound=null;}
if(this._onReady!==null)
{this._onReady.destroy();}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.HotspotSound.prototype,"sound",{get:function()
{return this._sound;}});Object.defineProperty(FORGE.HotspotSound.prototype,"onReady",{get:function()
{if(this._onReady===null)
{this._onReady=new FORGE.EventDispatcher(this);}
return this._onReady;}});FORGE.HotspotMaterial=function(viewer,hotspotUid)
{this._viewer=viewer;this._hotspotUid=hotspotUid;this._config=null;this._type="";this._texture=null;this._material=null;this._opacity=1;this._transparent=false;this._color=0xffffff;this._displayObject=null;this._update=false;this._ready=false;this._onReady=null;FORGE.BaseObject.call(this,"HotspotMaterial");};FORGE.HotspotMaterial.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.HotspotMaterial.prototype.constructor=FORGE.HotspotMaterial;FORGE.HotspotMaterial.types={};FORGE.HotspotMaterial.types.IMAGE="image";FORGE.HotspotMaterial.types.SPRITE="sprite";FORGE.HotspotMaterial.types.VIDEO="video";FORGE.HotspotMaterial.types.PLUGIN="plugin";FORGE.HotspotMaterial.types.GRAPHICS="graphics";FORGE.HotspotMaterial.presets={};FORGE.HotspotMaterial.presets.TRANSPARENT={color:"#ffffff",opacity:0,transparent:false};FORGE.HotspotMaterial.presets.DEBUG={color:"#00ff00",opacity:0.8,transparent:false};FORGE.HotspotMaterial.prototype._parseConfig=function(config)
{this._opacity=(typeof config.opacity==="number")?FORGE.Math.clamp(config.opacity,0,1):1;this._transparent=(typeof config.transparent==="boolean")?config.transparent:false;this._color=(typeof config.color==="string")?config.color:0xffffff;this._update=(typeof config.update==="boolean")?config.update:false;if(typeof config.image!=="undefined"&&config.image!==null)
{this._setupWithImage(config.image);}
else if(typeof config.sprite!=="undefined"&&config.sprite!==null)
{this._setupWithSprite(config.sprite);}
else if(typeof config.video!=="undefined"&&config.video!==null)
{this._setupWithVideo(config.video);}
else if(typeof config.plugin!=="undefined"&&config.plugin!==null)
{this._setupWithPlugin(config.plugin);}
else
{this._setupWithGraphics();}};FORGE.HotspotMaterial.prototype._setupWithImage=function(config)
{this._type=FORGE.HotspotMaterial.types.IMAGE;if(typeof config==="string")
{config={url:config};}
config.renderMode=FORGE.Image.renderModes.CANVAS;this._displayObject=new FORGE.Image(this._viewer,config);this._displayObject.onLoadComplete.addOnce(this._imageLoadCompleteHandler,this);};FORGE.HotspotMaterial.prototype._imageLoadCompleteHandler=function(event)
{var image=(event.emitter);this.log("image load complete : "+image.element.src);this._createTextureFromImage(image);};FORGE.HotspotMaterial.prototype._createTextureFromImage=function(image)
{this._displayObject=image;this._texture=new THREE.Texture();this._texture.generateMipmaps=false;this._texture.minFilter=THREE.LinearFilter;this.setTextureFrame(image.frame);this.log("create texture from image");this._setupComplete();};FORGE.HotspotMaterial.prototype._setupWithSprite=function(config)
{this._type=FORGE.HotspotMaterial.types.SPRITE;this._update=true;this._displayObject=new FORGE.Sprite(this._viewer,config);this._displayObject.onLoadComplete.addOnce(this._spriteLoadCompleteHandler,this);};FORGE.HotspotMaterial.prototype._spriteLoadCompleteHandler=function(event)
{var sprite=(event.emitter);this.log("sprite load complete");this._createTextureFromSprite(sprite);};FORGE.HotspotMaterial.prototype._createTextureFromSprite=function(sprite)
{this._texture=new THREE.Texture();this._texture.generateMipmaps=false;this._texture.minFilter=THREE.LinearFilter;this.setTextureFrame(sprite.frame);this.log("create texture from sprite");this._setupComplete();};FORGE.HotspotMaterial.prototype._setupWithVideo=function(config)
{this._type=FORGE.HotspotMaterial.types.VIDEO;this._update=true;this._displayObject=new FORGE.VideoHTML5(this._viewer,this._hotspotUid+"-material-video");this._displayObject.currentTime=100000;this._displayObject.onLoadedMetaData.addOnce(this._videoLoadedMetaDataHandler,this);this._displayObject.load(config.url);};FORGE.HotspotMaterial.prototype._videoLoadedMetaDataHandler=function(event)
{var video=(event.emitter);video.play();this.log("video load complete");this._createTextureFromVideo(video);};FORGE.HotspotMaterial.prototype._createTextureFromVideo=function(video)
{this.log("create texture from video");this._texture=new THREE.Texture();this._texture.generateMipmaps=false;this._texture.minFilter=THREE.LinearFilter;this._texture.image=video.element;this._setupComplete();};FORGE.HotspotMaterial.prototype._setupWithPlugin=function(config)
{this._type=FORGE.HotspotMaterial.types.PLUGIN;var plugin=this._viewer.plugins.get(config);if(typeof plugin==="undefined"||plugin===null)
{this._viewer.plugins.onInstanceCreate.add(this._pluginInstanceCreateHandler,this);}
else
{this._setPlugin(plugin);}};FORGE.HotspotMaterial.prototype._pluginInstanceCreateHandler=function(event)
{var plugin=(event.data);if(plugin.uid===this._config.plugin)
{this._viewer.plugins.onInstanceCreate.remove(this._pluginInstanceCreateHandler,this);this._setPlugin(plugin);}};FORGE.HotspotMaterial.prototype._setPlugin=function(plugin)
{if(plugin.instanceReady===true)
{this._createTextureFromPlugin(plugin);}
else
{plugin.onInstanceReady.addOnce(this._pluginInstanceReadyHandler,this);}};FORGE.HotspotMaterial.prototype._pluginInstanceReadyHandler=function(event)
{var plugin=(event.emitter);if(plugin.instance===null||plugin.instanceReady===false)
{throw new Error("Plugin instance not available");}
this._createTextureFromPlugin(plugin);};FORGE.HotspotMaterial.prototype._createTextureFromPlugin=function(plugin)
{this._displayObject=plugin.instance.texture;this._texture=new THREE.Texture(this._displayObject.dom);this._texture.format=THREE.RGBAFormat;this._texture.minFilter=THREE.LinearFilter;this._texture.generateMipmaps=false;this._texture.needsUpdate=true;this.log("create texture from plugin");this._setupComplete();};FORGE.HotspotMaterial.prototype._setupWithGraphics=function()
{this._type=FORGE.HotspotMaterial.types.GRAPHICS;this._setupComplete();};FORGE.HotspotMaterial.prototype._setupComplete=function()
{this._createShaderMaterial();this._ready=true;if(this._onReady!==null)
{this._onReady.dispatch();}};FORGE.HotspotMaterial.prototype._createShaderMaterial=function()
{this.log("create shader material");if(this._viewer.renderer.view.current===null)
{return;}
if(this._material!==null)
{this._material.dispose();this._material=null;}
var shader=FORGE.Utils.clone(this._viewer.renderer.view.current.shaderWTS.mapping);if(this._type===FORGE.HotspotMaterial.types.GRAPHICS)
{shader.fragmentShader=FORGE.ShaderChunk.wts_frag_color;shader.uniforms.tColor={type:"c",value:new THREE.Color(this._color)};}
shader.uniforms.tOpacity={type:"f",value:this._opacity};var vertexShader=FORGE.ShaderLib.parseIncludes(shader.vertexShader);var fragmentShader=FORGE.ShaderLib.parseIncludes(shader.fragmentShader);var type=FORGE.UID.get(this._hotspotUid).geometry.type;var side=(type===FORGE.HotspotGeometryType.PLANE)?THREE.DoubleSide:THREE.FrontSide;this._material=new THREE.RawShaderMaterial({fragmentShader:fragmentShader,vertexShader:vertexShader,uniforms:(shader.uniforms),side:side,name:"HotspotMaterial"});this._material.transparent=this._transparent;this._material.needsUpdate=true;};FORGE.HotspotMaterial.prototype.updateShader=function()
{this._createShaderMaterial();};FORGE.HotspotMaterial.prototype.load=function(config)
{this._config=config;this._ready=false;this._parseConfig(this._config);};FORGE.HotspotMaterial.prototype.update=function()
{if(this._material&&this._material.uniforms)
{this._material.uniforms.tTexture.value=this._texture;this._material.uniforms.tOpacity.value=this._opacity;}
if(this._texture!==null&&this._update===true)
{this._texture.needsUpdate=true;}};FORGE.HotspotMaterial.prototype.setTextureFrame=function(frame)
{if(this._displayObject===null||(this._type!==FORGE.HotspotMaterial.types.IMAGE&&this._type!==FORGE.HotspotMaterial.types.SPRITE))
{return;}
var textureFrame=frame||new FORGE.Rectangle(0,0,this._displayObject.element.naturalWidth,this._displayObject.element.naturalHeight);this._displayObject.frame=textureFrame;this._texture.image=this._displayObject.canvas;this._texture.image.crossOrigin="anonymous";this._texture.needsUpdate=true;this.update();};FORGE.HotspotMaterial.prototype.dump=function()
{var dump={color:this._color,opacity:this._opacity,transparent:this._transparent,update:this._update};switch(this._type)
{case FORGE.HotspotMaterial.types.IMAGE:dump.image=this._config.image;break;case FORGE.HotspotMaterial.types.SPRITE:dump.sprite=this._config.sprite;break;case FORGE.HotspotMaterial.types.VIDEO:dump.video=this._config.video;break;case FORGE.HotspotMaterial.types.PLUGIN:dump.plugin=this._config.plugin;break;}
return dump;};FORGE.HotspotMaterial.prototype.destroy=function()
{if(this._texture!==null)
{this._texture.dispose();this._texture=null;}
if(this._material!==null)
{this._material.dispose();this._material=null;}
if(this._displayObject!==null)
{this._displayObject.destroy();this._displayObject=null;}
if(this._onReady!==null)
{this._onReady.destroy();this._onReady=null;}
this._viewer=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.HotspotMaterial.prototype,"type",{get:function()
{return this._type;}});Object.defineProperty(FORGE.HotspotMaterial.prototype,"texture",{get:function()
{return this._texture;}});Object.defineProperty(FORGE.HotspotMaterial.prototype,"material",{get:function()
{return this._material;}});Object.defineProperty(FORGE.HotspotMaterial.prototype,"opacity",{get:function()
{return this._opacity;}});Object.defineProperty(FORGE.HotspotMaterial.prototype,"transparent",{get:function()
{return this._transparent;}});Object.defineProperty(FORGE.HotspotMaterial.prototype,"color",{get:function()
{return this._color;}});Object.defineProperty(FORGE.HotspotMaterial.prototype,"displayObject",{get:function()
{return this._displayObject;}});Object.defineProperty(FORGE.HotspotMaterial.prototype,"ready",{get:function()
{return this._ready;}});Object.defineProperty(FORGE.HotspotMaterial.prototype,"onReady",{get:function()
{if(this._onReady===null)
{this._onReady=new FORGE.EventDispatcher(this);}
return this._onReady;}});FORGE.HotspotGeometry=function()
{this._config=FORGE.HotspotGeometry.DEFAULT_CONFIG;this._type="";this._geometry=null;this._onLoadComplete=null;};FORGE.HotspotGeometry.DEFAULT_CONFIG={type:"plane",options:{width:20,height:20,widthSegments:8,heightSegments:8}};FORGE.HotspotGeometry.prototype._parseConfig=function(config)
{this._type=config.type;var options=config.options;switch(this._type)
{case FORGE.HotspotGeometryType.PLANE:this._geometry=this._createPlane(options);break;case FORGE.HotspotGeometryType.BOX:this._geometry=this._createBox(options);break;case FORGE.HotspotGeometryType.SPHERE:this._geometry=this._createSphere(options);break;case FORGE.HotspotGeometryType.CYLINDER:this._geometry=this._createCylinder(options);break;case FORGE.HotspotGeometryType.SHAPE:this._geometry=this._createShape(options);break;default:this._geometry=this._createPlane(options);break;}};FORGE.HotspotGeometry.prototype._createPlane=function(options)
{options=options||{};var width=options.width||20;var height=options.height||20;var widthSegments=options.widthSegments||8;var heightSegments=options.heightSegments||8;return new THREE.PlaneBufferGeometry(width,height,widthSegments,heightSegments);};FORGE.HotspotGeometry.prototype._createBox=function(options)
{options=options||{};var width=options.width||20;var height=options.height||20;var depth=options.depth||20;var widthSegments=options.widthSegments||8;var heightSegments=options.heightSegments||8;var depthSegments=options.depthSegments||8;return new THREE.BoxBufferGeometry(width,height,depth,widthSegments,heightSegments,depthSegments);};FORGE.HotspotGeometry.prototype._createSphere=function(options)
{options=options||{};var radius=options.radius||10;var widthSegments=options.widthSegments||64;var heightSegments=options.heightSegments||64;var phiStart=options.phiStart||0;var phiLength=options.phiLength||2*Math.PI;var thetaStart=options.thetaStart||0;var thetaLength=options.thetaLength||2*Math.PI;return new THREE.SphereBufferGeometry(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength);};FORGE.HotspotGeometry.prototype._createCylinder=function(options)
{options=options||{};var radiusTop=options.radiusTop||10;var radiusBottom=options.radiusBottom||10;var height=options.height||20;var radiusSegments=options.radiusSegments||32;var heightSegments=options.heightSegments||1;var openEnded=options.openEnded||false;var thetaStart=options.thetaStart||0;var thetaLength=options.thetaLength||2*Math.PI;return new THREE.CylinderBufferGeometry(radiusTop,radiusBottom,height,radiusSegments,heightSegments,openEnded,thetaStart,thetaLength);};FORGE.HotspotGeometry.prototype._createShape=function(options)
{options=options||{};if(Array.isArray(options.points))
{options.points.push(options.points[0]);var a,b,res=[];for(var i=0,ii=options.points.length-1;i<ii;i++)
{a=options.points[i];b=options.points[i+1];if(a[0]!==b[0]||a[1]!==b[1])
{res.push(a);}}
options.points=res;}
if(options.points.length<3)
{console.warn("FORGE.HotspotGeometry.SHAPE: the points given to draw the shape should be a least 3");options.points=null;}
if(Array.isArray(options.points)===false)
{options.points=[[-10,10],[10,10],[10,-10],[-10,-10]];}
var points=[];for(var i=0,ii=options.points.length;i<ii;i++)
{var point=options.points[i];var x,y;if(Array.isArray(point)===true)
{x=(typeof point[0]==="number"&&isNaN(point[0])===false)?point[0]:0;y=(typeof point[1]==="number"&&isNaN(point[1])===false)?point[1]:0;points.push(new THREE.Vector2(x,y));}}
return new THREE.ShapeBufferGeometry(new THREE.Shape(points));};FORGE.HotspotGeometry.prototype.load=function(config)
{if(typeof config!=="undefined"&&typeof config.type==="string")
{this._config=config;}
else
{this._config=(FORGE.Utils.extendSimpleObject({},FORGE.HotspotGeometry.DEFAULT_CONFIG));}
this._parseConfig(this._config);if(this._onLoadComplete!==null)
{this._onLoadComplete.dispatch();}};FORGE.HotspotGeometry.prototype.dump=function()
{var dump={type:this._type};var options={};switch(this._type)
{case FORGE.HotspotGeometryType.PLANE:case FORGE.HotspotGeometryType.BOX:case FORGE.HotspotGeometryType.SPHERE:case FORGE.HotspotGeometryType.CYLINDER:options=this._geometry.parameters;break;case FORGE.HotspotGeometryType.SHAPE:var points=[];if(Array.isArray(this._geometry.parameters.shapes.curves)===true)
{var c=this._geometry.parameters.shapes.curves;points.push([c[0].v1.x,c[0].v1.y]);points.push([c[0].v2.x,c[0].v2.y]);for(var i=1,ii=c.length;i<ii;i++)
{points.push([c[i].v2.x,c[i].v2.y]);}}
else
{points=this._config.options.points;}
options={points:points};break;}
dump.options=options;return dump;};FORGE.HotspotGeometry.prototype.destroy=function()
{if(this._geometry!==null)
{this._geometry.dispose();this._geometry=null;}
if(this._onLoadComplete!==null)
{this._onLoadComplete.destroy();this._onLoadComplete=null;}};Object.defineProperty(FORGE.HotspotGeometry.prototype,"type",{get:function()
{return this._type;}});Object.defineProperty(FORGE.HotspotGeometry.prototype,"geometry",{get:function()
{return this._geometry;}});Object.defineProperty(FORGE.HotspotGeometry.prototype,"onLoadComplete",{get:function()
{if(this._onLoadComplete===null)
{this._onLoadComplete=new FORGE.EventDispatcher(this);}
return this._onLoadComplete;}});FORGE.HotspotGeometryType={};FORGE.HotspotGeometryType.SHAPE="shape";FORGE.HotspotGeometryType.PLANE="plane";FORGE.HotspotGeometryType.BOX="box";FORGE.HotspotGeometryType.SPHERE="sphere";FORGE.HotspotGeometryType.CYLINDER="cylinder";FORGE.HotspotTransform=function()
{this._position=null;this._rotation=null;this._scale=null;this._onChange=null;FORGE.BaseObject.call(this,"HotspotTransform");this._boot();};FORGE.HotspotTransform.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.HotspotTransform.prototype.constructor=FORGE.HotspotTransform;FORGE.HotspotTransform.prototype._boot=function()
{this._register();this._position=new FORGE.HotspotTransformValues(this._uid,0,0,-200);this._rotation=new FORGE.HotspotTransformValues(this._uid,0,0,0);this._scale=new FORGE.HotspotTransformValues(this._uid,1,1,1);};FORGE.HotspotTransform.prototype._parseConfig=function(config)
{var changed=false;if(typeof config.position!=="undefined")
{var position=FORGE.Utils.extendSimpleObject(this._position.dump(),this._parsePosition(config.position));if(FORGE.Utils.compareObjects(this._position.dump(),position)===false)
{this._position.load((position),false);changed=true;}}
if(typeof config.rotation!=="undefined")
{var rotation=FORGE.Utils.extendSimpleObject({},this._rotation.dump());rotation.x=(typeof config.rotation.x==="number")?config.rotation.x:0;rotation.y=(typeof config.rotation.y==="number")?config.rotation.y:0;rotation.z=(typeof config.rotation.z==="number")?config.rotation.z:0;if(FORGE.Utils.compareObjects(this._rotation.dump(),rotation)===false)
{this._rotation.load((rotation),false);changed=true;}}
if(typeof config.scale!=="undefined")
{var scale=FORGE.Utils.extendSimpleObject({},this._scale.dump());scale.x=(typeof config.scale.x==="number")?FORGE.Math.clamp(config.scale.x,0.000001,100000):1;scale.y=(typeof config.scale.y==="number")?FORGE.Math.clamp(config.scale.y,0.000001,100000):1;scale.z=(typeof config.scale.z==="number")?FORGE.Math.clamp(config.scale.z,0.000001,100000):1;if(FORGE.Utils.compareObjects(this._scale.dump(),scale)===false)
{this._scale.load((scale),false);changed=true;}}
return changed;};FORGE.HotspotTransform.prototype._parsePosition=function(config)
{var position={x:0,y:0,z:-200};if(typeof config!=="undefined"&&config!==null)
{position.x=(typeof config.x==="number")?config.x:0;position.y=(typeof config.y==="number")?config.y:0;position.z=(typeof config.z==="number")?config.z:-200;if(typeof config.radius==="number"||typeof config.theta==="number"||typeof config.phi==="number")
{var radius=(typeof config.radius==="number")?config.radius:200;var theta=(typeof config.theta==="number")?FORGE.Math.degToRad(config.theta):0;var phi=(typeof config.phi==="number")?FORGE.Math.degToRad(config.phi):0;position=FORGE.Math.sphericalToCartesian(radius,theta,phi);}}
return position;};FORGE.HotspotTransform.prototype.notifyChange=function()
{if(this._onChange!==null)
{this._onChange.dispatch();}};FORGE.HotspotTransform.prototype.load=function(config,notify)
{var changed=this._parseConfig(config);if(notify!==false&&changed===true)
{this.notifyChange();}};FORGE.HotspotTransform.prototype.dump=function()
{var dump={position:this._position.dump(),rotation:this._rotation.dump(),scale:this._scale.dump()};return dump;};FORGE.HotspotTransform.prototype.destroy=function()
{FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.HotspotTransform.prototype,"position",{get:function()
{return this._position;},set:function(value)
{var config={position:value};this._parseConfig(config);}});Object.defineProperty(FORGE.HotspotTransform.prototype,"rotation",{get:function()
{return this._rotation;},set:function(value)
{var config={rotation:value};this._parseConfig(config);}});Object.defineProperty(FORGE.HotspotTransform.prototype,"scale",{get:function()
{return this._scale;},set:function(value)
{var config={scale:value};this._parseConfig(config);}});Object.defineProperty(FORGE.HotspotTransform.prototype,"onChange",{get:function()
{if(this._onChange===null)
{this._onChange=new FORGE.EventDispatcher(this);}
return this._onChange;}});FORGE.HotspotTransformValues=function(transformUid,x,y,z)
{this._transformUid=transformUid;this._x=typeof(x)==="number"?x:0;this._y=typeof(y)==="number"?y:0;this._z=typeof(z)==="number"?z:0;this._onChange=null;};FORGE.HotspotTransformValues.prototype.load=function(values,notify)
{var changed=false;if(typeof values.x==="number"&&isNaN(values.x)===false&&this._x!==values.x)
{this._x=values.x;changed=true;}
if(typeof values.y==="number"&&isNaN(values.y)===false&&this._y!==values.y)
{this._y=values.y;changed=true;}
if(typeof values.z==="number"&&isNaN(values.z)===false&&this._z!==values.z)
{this._z=values.z;changed=true;}
if(notify!==false&&changed===true)
{if(this._onChange!==null)
{this._onChange.dispatch();}
var transform=FORGE.UID.get(this._transformUid);transform.notifyChange();}};FORGE.HotspotTransformValues.prototype.dump=function()
{var dump={x:this._x,y:this._y,z:this._z};return dump;};FORGE.HotspotTransformValues.prototype.destroy=function()
{if(this._onChange!==null)
{this._onChange.destroy();this._onChange=null;}};Object.defineProperty(FORGE.HotspotTransformValues.prototype,"x",{get:function()
{return this._x;},set:function(value)
{if(typeof value!=="number"||isNaN(value)===true||this._x===value)
{return;}
this._x=value;if(this._onChange!==null)
{this._onChange.dispatch();}
var transform=FORGE.UID.get(this._transformUid);transform.notifyChange();}});Object.defineProperty(FORGE.HotspotTransformValues.prototype,"y",{get:function()
{return this._y;},set:function(value)
{if(typeof value!=="number"||isNaN(value)===true||this._y===value)
{return;}
this._y=value;if(this._onChange!==null)
{this._onChange.dispatch();}
var transform=FORGE.UID.get(this._transformUid);transform.notifyChange();}});Object.defineProperty(FORGE.HotspotTransformValues.prototype,"z",{get:function()
{return this._z;},set:function(value)
{if(typeof value!=="number"||isNaN(value)===true||this._z===value)
{return;}
this._z=value;if(this._onChange!==null)
{this._onChange.dispatch();}
var transform=FORGE.UID.get(this._transformUid);transform.notifyChange();}});Object.defineProperty(FORGE.HotspotTransformValues.prototype,"values",{get:function()
{return new THREE.Vector3(this._x,this._y,this._z);}});Object.defineProperty(FORGE.HotspotTransformValues.prototype,"onChange",{get:function()
{if(this._onChange===null)
{this._onChange=new FORGE.EventDispatcher(this);}
return this._onChange;}});FORGE.HotspotAnimation=function(viewer,hotspotTransform)
{this._track="";this._tracks=null;this._loop=false;this._random=false;this._autoPlay=false;this._enabled=true;this._onProgress=null;FORGE.MetaAnimation.call(this,viewer,hotspotTransform,"HotspotAnimation");this._boot();};FORGE.HotspotAnimation.prototype=Object.create(FORGE.MetaAnimation.prototype);FORGE.HotspotAnimation.prototype.constructor=FORGE.HotspotAnimation;FORGE.HotspotAnimation.prototype._boot=function()
{this._instructions=[{prop:["rotation.x","rotation.y","rotation.z"],wrap:[[-180,180],[-180,180],[-180,180]],smooth:false},{prop:["position.x","position.y","position.z"],smooth:false},{prop:["scale.x","scale.y","scale.z"],smooth:false}];};FORGE.HotspotAnimation.prototype.load=function(config)
{this.stop();this._enabled=(typeof config.enabled==="boolean")?config.enabled:true;this._loop=(typeof config.loop==="boolean")?config.loop:false;this._random=(typeof config.random==="boolean")?config.random:false;this._autoPlay=(typeof config.autoPlay==="boolean")?config.autoPlay:false;if(config.tracks!==null&&FORGE.Utils.isArrayOf(config.tracks,"string"))
{this._tracks=(this._random===true)?FORGE.Utils.randomize(config.tracks):config.tracks;}};FORGE.HotspotAnimation.prototype._onTrackPartialCompleteHandler=function()
{if(this._tracks.length>1)
{var idx=this._tracks.indexOf((this._track))+1;if(idx<this._tracks.length)
{this.play(idx);return;}}
if(this._loop===true)
{if(this._random===true)
{this._tracks=FORGE.Utils.randomize(this._tracks);}
this.play(0);return;}
FORGE.MetaAnimation.prototype._onTrackPartialCompleteHandler.call(this);};FORGE.HotspotAnimation.prototype._onTweenProgressHandler=function()
{if(this._onProgress!==null)
{this._onProgress.dispatch();}};FORGE.HotspotAnimation.prototype.play=function(track)
{if(this._enabled===false)
{return;}
if(typeof track==="number")
{this._track=this._tracks[track];}
else if(typeof track==="string")
{this._track=track;}
else
{this._track=this._tracks[0];}
track=FORGE.UID.get(this._track);this._emptyAnimations();var kf;var offset=track.offset;var rotAnimation=new FORGE.Animation(this._viewer,this._target);rotAnimation.tween.easing=track.easing;rotAnimation.instruction=this._instructions[0];rotAnimation.instruction.smooth=track.smooth;rotAnimation.onComplete.add(this._onTrackPartialCompleteHandler,this);rotAnimation.onProgress.add(this._onTweenProgressHandler,this);var rot,x,y,z,time;for(var i=0,ii=track.keyframes.length;i<ii;i++)
{time=track.keyframes[i].time+offset;rot=track.keyframes[i].data.rotation;if(typeof rot!=="undefined"&&rot!==null)
{x=(typeof rot.x!=="undefined"&&rot.x!==null)?rot.x:this._computeIntermediateValue(time,track.keyframes,"x",rotAnimation.tween.easing,"rotation");y=(typeof rot.y!=="undefined"&&rot.y!==null)?rot.y:this._computeIntermediateValue(time,track.keyframes,"y",rotAnimation.tween.easing,"rotation");z=(typeof rot.z!=="undefined"&&rot.z!==null)?rot.z:this._computeIntermediateValue(time,track.keyframes,"z",rotAnimation.tween.easing,"rotation");kf=new FORGE.Keyframe(time+offset,{rotation:{x:x,y:y,z:z}});rotAnimation.timeline.addKeyframe(kf);}}
if(rotAnimation.timeline.keyframes.length>0&&rotAnimation.timeline.keyframes[0].time>0||offset>0)
{var data={rotation:FORGE.Utils.clone(this._target.rotation)};kf=new FORGE.Keyframe(0,data);rotAnimation.timeline.addKeyframe(kf);}
this._animations.push(rotAnimation);var posAnimation=new FORGE.Animation(this._viewer,this._target);posAnimation.tween.easing=track.easing;posAnimation.instruction=this._instructions[1];posAnimation.instruction.smooth=track.smooth;posAnimation.onComplete.add(this._onTrackPartialCompleteHandler,this);posAnimation.onProgress.add(this._onTweenProgressHandler,this);var pos;for(var i=0,ii=track.keyframes.length;i<ii;i++)
{time=track.keyframes[i].time+offset;pos=track.keyframes[i].data.position;if(typeof pos!=="undefined"&&pos!==null)
{if(typeof pos.x!=="number"&&typeof pos.y!=="number"&&typeof pos.z!=="number"&&(typeof pos.radius==="number"||typeof pos.theta==="number"||typeof pos.phi==="number"))
{var radius=(typeof pos.radius==="number")?pos.radius:this._computeIntermediateValue(time,track.keyframes,"radius",posAnimation.tween.easing,"position");var theta=(typeof pos.theta==="number")?FORGE.Math.degToRad(pos.theta):FORGE.Math.degToRad(this._computeIntermediateValue(time,track.keyframes,"theta",posAnimation.tween.easing,"position"));var phi=(typeof pos.phi==="number")?FORGE.Math.degToRad(pos.phi):FORGE.Math.degToRad(this._computeIntermediateValue(time,track.keyframes,"phi",posAnimation.tween.easing,"position"));var cartesian=FORGE.Math.sphericalToCartesian(radius,theta,phi);x=cartesian.x;y=cartesian.y;z=cartesian.z;}
else
{x=(typeof pos.x!=="undefined"&&pos.x!==null)?pos.x:this._computeIntermediateValue(time,track.keyframes,"x",posAnimation.tween.easing,"position");y=(typeof pos.y!=="undefined"&&pos.y!==null)?pos.y:this._computeIntermediateValue(time,track.keyframes,"y",posAnimation.tween.easing,"position");z=(typeof pos.z!=="undefined"&&pos.z!==null)?pos.z:this._computeIntermediateValue(time,track.keyframes,"z",posAnimation.tween.easing,"position");}
kf=new FORGE.Keyframe(time+offset,{position:{x:x,y:y,z:z}});posAnimation.timeline.addKeyframe(kf);}}
if(posAnimation.timeline.keyframes.length>0&&posAnimation.timeline.keyframes[0].time>0||offset>0)
{var data={position:FORGE.Utils.clone(this._target.position)};kf=new FORGE.Keyframe(0,data);posAnimation.timeline.addKeyframe(kf);}
this._animations.push(posAnimation);var scaleAnimation=new FORGE.Animation(this._viewer,this._target);scaleAnimation.tween.easing=track.easing;scaleAnimation.instruction=this._instructions[2];scaleAnimation.instruction.smooth=track.smooth;scaleAnimation.onComplete.add(this._onTrackPartialCompleteHandler,this);scaleAnimation.onProgress.add(this._onTweenProgressHandler,this);var scale;for(var i=0,ii=track.keyframes.length;i<ii;i++)
{time=track.keyframes[i].time+offset;scale=track.keyframes[i].data.scale;if(typeof scale!=="undefined"&&scale!==null)
{x=(typeof scale.x!=="undefined"&&scale.x!==null)?scale.x:this._computeIntermediateValue(time,track.keyframes,"x",scaleAnimation.tween.easing,"scale");y=(typeof scale.y!=="undefined"&&scale.y!==null)?scale.y:this._computeIntermediateValue(time,track.keyframes,"y",scaleAnimation.tween.easing,"scale");z=(typeof scale.z!=="undefined"&&scale.z!==null)?scale.z:this._computeIntermediateValue(time,track.keyframes,"z",scaleAnimation.tween.easing,"scale");kf=new FORGE.Keyframe(time+offset,{scale:{x:x,y:y,z:z}});scaleAnimation.timeline.addKeyframe(kf);}}
if(scaleAnimation.timeline.keyframes.length>0&&scaleAnimation.timeline.keyframes[0].time>0||offset>0)
{var data={scale:FORGE.Utils.clone(this._target.scale)};kf=new FORGE.Keyframe(0,data);scaleAnimation.timeline.addKeyframe(kf);}
this._animations.push(scaleAnimation);this._animations[0].play();this._animations[1].play();this._animations[2].play();};FORGE.HotspotAnimation.prototype.destroy=function()
{this._tracks=null;if(this._onProgress!==null)
{this._onProgress.destroy();this._onProgress=null;}
FORGE.MetaAnimation.prototype.destroy.call(this);};Object.defineProperty(FORGE.HotspotAnimation.prototype,"enabled",{get:function()
{return this._enabled;}});Object.defineProperty(FORGE.HotspotAnimation.prototype,"autoPlay",{get:function()
{return this._autoPlay;}});Object.defineProperty(FORGE.HotspotAnimation.prototype,"onProgress",{get:function()
{if(this._onProgress===null)
{this._onProgress=new FORGE.EventDispatcher(this);}
return this._onProgress;}});FORGE.HotspotAnimationTrack=function(config)
{this._smooth=false;FORGE.Track.call(this,"HotspotAnimationTrack");this._boot(config);};FORGE.HotspotAnimationTrack.prototype=Object.create(FORGE.Track.prototype);FORGE.HotspotAnimationTrack.prototype.constructor=FORGE.HotspotAnimationTrack;FORGE.HotspotAnimationTrack.prototype._boot=function(config)
{this._smooth=config.smooth;FORGE.Track.prototype._boot.call(this,config);};FORGE.HotspotStates=function(viewer,hotspotUid)
{this._viewer=viewer;this._hotspotUid=hotspotUid;this._config=null;this._state="";this._default="default";this._auto=true;this._ready=false;this._loading={geometry:false,transform:false,material:false,sound:false,animation:false};this._onLoadComplete=null;FORGE.BaseObject.call(this,"HotspotStates");this._boot();};FORGE.HotspotStates.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.HotspotStates.prototype.constructor=FORGE.HotspotStates;FORGE.HotspotStates._RESERVED=["options"];FORGE.HotspotStates.prototype._boot=function()
{var hotspot=FORGE.UID.get(this._hotspotUid);if(typeof hotspot==="undefined")
{throw("No hotspot match with uid: "+this._hotspotUid);}
this._config={options:{},default:hotspot.config};};FORGE.HotspotStates.prototype._parseConfig=function(config)
{this._default=(typeof config.options.default==="string")?config.options.default:"default";this._auto=(typeof config.options.auto==="boolean")?config.options.auto:true;this._config.default=FORGE.Utils.extendSimpleObject(this._config.default,config[this._default]);};FORGE.HotspotStates.prototype._getStatesNames=function()
{if(this._config===null)
{return[];}
var config=(this._config);var keys=Object.keys(config);for(var i=0,ii=FORGE.HotspotStates._RESERVED.length;i<ii;i++)
{var index=keys.indexOf(FORGE.HotspotStates._RESERVED[i]);if(index!==-1)
{keys.splice(index,1);}}
if(this._default!=="default"&&typeof this._config[this._default]!=="undefined")
{index=keys.indexOf("default");if(index!==-1)
{keys.splice(index,1);}}
return keys;};FORGE.HotspotStates.prototype._updateGeometry=function(config)
{this.log("update geometry");var hotspot=FORGE.UID.get(this._hotspotUid);hotspot.geometry.onLoadComplete.addOnce(this._geometryLoadCompleteHandler,this);hotspot.geometry.load(config);};FORGE.HotspotStates.prototype._geometryLoadCompleteHandler=function()
{this._loading.geometry=false;this._checkLoading();};FORGE.HotspotStates.prototype._updateMaterial=function(config)
{this.log("update material");var hotspot=FORGE.UID.get(this._hotspotUid);hotspot.material.onReady.addOnce(this._materialReadyHandler,this);hotspot.material.load(config);};FORGE.HotspotStates.prototype._materialReadyHandler=function()
{this._loading.material=false;this._checkLoading();};FORGE.HotspotStates.prototype._updateSound=function(config)
{this.log("update sound");var hotspot=FORGE.UID.get(this._hotspotUid);hotspot.sound.onReady.addOnce(this._soundReadyHandler,this);hotspot.sound.load(config);};FORGE.HotspotStates.prototype._soundReadyHandler=function()
{this._loading.sound=false;this._checkLoading();};FORGE.HotspotStates.prototype._updateAnimation=function(config)
{this.log("update animation");var hotspot=FORGE.UID.get(this._hotspotUid);hotspot.animation.load(config,false);this._loading.animation=false;this._checkLoading();};FORGE.HotspotStates.prototype._updateTransform=function(config)
{this.log("update transform");var hotspot=FORGE.UID.get(this._hotspotUid);hotspot.transform.load(config,false);this._loading.transform=false;this._checkLoading();};FORGE.HotspotStates.prototype._checkLoading=function()
{for(var prop in this._loading)
{if(this._loading[prop]===true)
{return true;}}
this._ready=true;if(this._onLoadComplete!==null)
{this._onLoadComplete.dispatch();}
return false;};FORGE.HotspotStates.prototype.addConfig=function(config)
{this._config=FORGE.Utils.extendSimpleObject(this._config,config);this._parseConfig(this._config);};FORGE.HotspotStates.prototype.load=function(name)
{name=(typeof name==="string")?name:this._default;this.log("Hotspot load state: "+name);var hotspot=FORGE.UID.get(this._hotspotUid);if(typeof hotspot==="undefined"||typeof this._config[name]!=="object"||name===this._state)
{return;}
this._ready=false;this._state=name;if(typeof this._config[name].sound==="object")
{this._loading.sound=true;}
if(typeof this._config[name].animation==="object")
{this._loading.animation=true;}
this._loading.material=true;this._loading.geometry=true;this._loading.transform=true;if(this._loading.material===true)
{var materialConfig=(FORGE.Utils.extendSimpleObject(hotspot.config.material,this._config[name].material));this._updateMaterial(materialConfig);}
if(this._loading.sound===true)
{var soundConfig=(FORGE.Utils.extendSimpleObject(hotspot.config.sound,this._config[name].sound));this._updateSound(soundConfig);}
if(this._loading.animation===true)
{var animationConfig=(FORGE.Utils.extendSimpleObject(hotspot.config.animation,this._config[name].animation));this._updateAnimation(animationConfig);}
if(this._loading.geometry===true)
{var geometryConfig=(FORGE.Utils.extendSimpleObject(hotspot.config.geometry,this._config[name].geometry));this._updateGeometry(geometryConfig);}
if(this._loading.transform===true)
{var transformConfig=(FORGE.Utils.extendSimpleObject(hotspot.config.transform,this._config[name].transform));this._updateTransform(transformConfig);}};FORGE.HotspotStates.prototype.toggle=function(names)
{if(names===null||typeof names==="undefined"||names.length<2)
{names=this._getStatesNames();}
var current=names.indexOf(this._state);var next=0;if(current<names.length-1)
{next=current+1;}
this.load(names[next]);};FORGE.HotspotStates.prototype.destroy=function()
{this._viewer=null;if(this._onLoadComplete!==null)
{this._onLoadComplete.destroy();this._onLoadComplete=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.HotspotStates.prototype,"state",{get:function()
{return this._state;},set:function(value)
{this.load(value);}});Object.defineProperty(FORGE.HotspotStates.prototype,"names",{get:function()
{return this._getStatesNames();}});Object.defineProperty(FORGE.HotspotStates.prototype,"ready",{get:function()
{return this._ready;}});Object.defineProperty(FORGE.HotspotStates.prototype,"auto",{get:function()
{return this._auto;}});Object.defineProperty(FORGE.HotspotStates.prototype,"onLoadComplete",{get:function()
{if(this._onLoadComplete===null)
{this._onLoadComplete=new FORGE.EventDispatcher(this);}
return this._onLoadComplete;}});FORGE.HotspotType={};FORGE.HotspotType.THREE_DIMENSIONAL="3d";FORGE.HotspotType.DOM="dom";FORGE.Camera=function(viewer)
{this._viewer=viewer;this._config=null;this._yaw=0;this._yawMin=-Infinity;this._yawMax=Infinity;this._pitch=0;this._pitchMin=-Infinity;this._pitchMax=Infinity;this._roll=0;this._rollMin=-Infinity;this._rollMax=Infinity;this._fov=90;this._fovMin=0;this._fovMax=Infinity;this._parallax=0;this._keep=false;this._modelView=null;this._modelViewInverse=null;this._quaternion=null;this._main=null;this._flat=null;this._left=null;this._right=null;this._radius=0;this._cameraAnimation=null;this._gaze=null;this._initialized=false;this._onCameraChange=null;FORGE.BaseObject.call(this,"Camera");this._boot();};FORGE.Camera.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Camera.prototype.constructor=FORGE.Camera;FORGE.Camera.RADIUS=50;FORGE.Camera.DEFAULT_CONFIG={keep:false,parallax:0,yaw:{min:-Infinity,max:Infinity,default:0},pitch:{min:-Infinity,max:Infinity,default:0},roll:{min:-Infinity,max:Infinity,default:0},fov:{min:0,max:Infinity,default:90},gaze:{delay:2000,cursor:{innerRadius:0.02,outerRadius:0.04,color:0xffffff,opacity:0.5},progress:{innerRadius:0.02,outerRadius:0.04,color:0xff0000,opacity:0.5}}};FORGE.Camera.prototype._boot=function()
{this._modelView=new THREE.Matrix4();this._modelViewInverse=new THREE.Matrix4();this._quaternion=new THREE.Quaternion();this._gaze=new FORGE.CameraGaze(this._viewer,FORGE.Camera.DEFAULT_CONFIG.gaze);this._viewer.renderer.view.onChange.add(this._onViewChange,this);this._createMainCamera();this._createFlatCamera();this._createVRCameras();};FORGE.Camera.prototype._parseConfig=function(config)
{this._parallax=config.parallax;this._radius=this._parallax*FORGE.Camera.RADIUS;this._keep=config.keep;if(this._keep===true&&this._initialized===true)
{return;}
if(typeof config.yaw.min==="number")
{this._yawMin=FORGE.Math.degToRad(config.yaw.min);}
if(typeof config.yaw.max==="number")
{this._yawMax=FORGE.Math.degToRad(config.yaw.max);}
if(typeof config.yaw.default==="number")
{this._setYaw(config.yaw.default,FORGE.Math.DEGREES);}
if(typeof config.pitch.min==="number")
{this._pitchMin=FORGE.Math.degToRad(config.pitch.min);}
if(typeof config.pitch.max==="number")
{this._pitchMax=FORGE.Math.degToRad(config.pitch.max);}
if(typeof config.pitch.default==="number")
{this._setPitch(config.pitch.default,FORGE.Math.DEGREES);}
if(typeof config.roll.min==="number")
{this._rollMin=FORGE.Math.degToRad(config.roll.min);}
if(typeof config.roll.max==="number")
{this._rollMax=FORGE.Math.degToRad(config.roll.max);}
if(typeof config.roll.default==="number")
{this._setRoll(config.roll.default,FORGE.Math.DEGREES);}
if(typeof config.fov.min==="number")
{this._fovMin=FORGE.Math.degToRad(config.fov.min);}
if(typeof config.fov.max==="number")
{this._fovMax=FORGE.Math.degToRad(config.fov.max);}
if(typeof config.fov.default==="number")
{this._setFov(config.fov.default,FORGE.Math.DEGREES);}
this._updateFromEuler();this._updateComplete();this._gaze.load((config.gaze));};FORGE.Camera.prototype._createMainCamera=function()
{if(typeof this._viewer.renderer!=="undefined")
{var aspect=this._viewer.renderer.displayResolution.ratio;this._main=new THREE.PerspectiveCamera(this._fov,aspect,FORGE.RenderManager.DEPTH_NEAR,2*FORGE.RenderManager.DEPTH_FAR);this._main.name="CameraMain";this._main.matrixAutoUpdate=false;}};FORGE.Camera.prototype._createFlatCamera=function()
{if(typeof this._viewer.renderer!=="undefined")
{this._flat=new THREE.OrthographicCamera(-1000,1000,1000,-1000,FORGE.RenderManager.DEPTH_NEAR,FORGE.RenderManager.DEPTH_FAR);this._flat.name="CameraFlat";this._flat.matrixAutoUpdate=false;}};FORGE.Camera.prototype._createVRCameras=function()
{this._left=this._main.clone();this._left.name="CameraLeft";this._left.layers.enable(1);this._left.add(this._gaze.object);this._right=this._main.clone();this._right.name="CameraRight";this._right.layers.enable(2);};FORGE.Camera.prototype._updateVRCameras=function()
{var display=this._viewer.renderer.display;var frameData=display.vrFrameData;var quat=display.getQuaternionFromPose();if(quat!==null)
{this._quaternion=quat;this._updateFromQuaternion();}
var eyeParamsL=display.vrDisplay.getEyeParameters("left");var eyeParamsR=display.vrDisplay.getEyeParameters("right");this._main.matrixWorld.decompose(this._left.position,this._left.quaternion,this._left.scale);this._left.matrixWorld=new THREE.Matrix4().makeRotationFromQuaternion(this._main.quaternion);this._main.matrixWorld.decompose(this._right.position,this._right.quaternion,this._right.scale);this._right.matrixWorld=new THREE.Matrix4().makeRotationFromQuaternion(this._main.quaternion);this._left.matrixWorld.elements[12]=this._main.matrixWorld.elements[12]+eyeParamsL.offset[0];this._left.matrixWorld.elements[13]=this._main.matrixWorld.elements[13]+eyeParamsL.offset[1];this._left.matrixWorld.elements[14]=this._main.matrixWorld.elements[14]+eyeParamsL.offset[2];this._right.matrixWorld.elements[12]=this._main.matrixWorld.elements[12]+eyeParamsR.offset[0];this._right.matrixWorld.elements[13]=this._main.matrixWorld.elements[13]+eyeParamsR.offset[1];this._right.matrixWorld.elements[14]=this._main.matrixWorld.elements[14]+eyeParamsR.offset[2];if(frameData!==null)
{this._left.projectionMatrix.elements=frameData.leftProjectionMatrix;this._right.projectionMatrix.elements=frameData.rightProjectionMatrix;}
else
{var eyeFOVL={upDegrees:eyeParamsL.fieldOfView.upDegrees,downDegrees:eyeParamsL.fieldOfView.downDegrees,leftDegrees:eyeParamsL.fieldOfView.leftDegrees,rightDegrees:eyeParamsL.fieldOfView.rightDegrees};this._left.projectionMatrix=this._fovToProjectionMatrix(eyeFOVL,this._main);var eyeFOVR={upDegrees:eyeParamsR.fieldOfView.upDegrees,downDegrees:eyeParamsR.fieldOfView.downDegrees,leftDegrees:eyeParamsR.fieldOfView.leftDegrees,rightDegrees:eyeParamsR.fieldOfView.rightDegrees};this._right.projectionMatrix=this._fovToProjectionMatrix(eyeFOVR,this._main);}
this._updateComplete();};FORGE.Camera.prototype._cloneVRCamerasChildren=function()
{for(var i=0,ii=this._right.children.length;i<ii;i++)
{this._right.remove(this._right.children[i]);}
var clone=null;for(var j=0,jj=this._left.children.length;j<jj;j++)
{clone=this._left.children[j].clone();this._right.add(clone);}};FORGE.Camera.prototype._fovToProjectionMatrix=function(fov,camera)
{var fovUpTan=Math.tan(FORGE.Math.degToRad(fov.upDegrees));var fovDownTan=Math.tan(FORGE.Math.degToRad(fov.downDegrees));var fovLeftTan=Math.tan(FORGE.Math.degToRad(fov.leftDegrees));var fovRightTan=Math.tan(FORGE.Math.degToRad(fov.rightDegrees));var pxscale=2.0 /(fovLeftTan+fovRightTan);var pxoffset=(fovLeftTan-fovRightTan)*pxscale*0.5;var pyscale=2.0 /(fovUpTan+fovDownTan);var pyoffset=(fovUpTan-fovDownTan)*pyscale*0.5;var matrix=new THREE.Matrix4();var m=matrix.elements;m[0*4+0]=pxscale;m[0*4+1]=0.0;m[0*4+2]=-pxoffset;m[0*4+3]=0.0;m[1*4+0]=0.0;m[1*4+1]=pyscale;m[1*4+2]=pyoffset;m[1*4+3]=0.0;m[2*4+0]=0.0;m[2*4+1]=0.0;m[2*4+2]=camera.far /(camera.near-camera.far);m[2*4+3]=(camera.far*camera.near)/(camera.near-camera.far);m[3*4+0]=0.0;m[3*4+1]=0.0;m[3*4+2]=-1.0;m[3*4+3]=0.0;matrix.transpose();return matrix;};FORGE.Camera.prototype._updateFromEuler=function()
{this._modelView=FORGE.Math.eulerToRotationMatrix(this._yaw,this._pitch,this._roll,false);this._modelViewInverse=this._modelView.clone().transpose();this._quaternion=FORGE.Quaternion.fromEuler(this._yaw,this._pitch,this._roll);};FORGE.Camera.prototype._updateFromQuaternion=function()
{this._modelView=FORGE.Quaternion.toRotationMatrix(this._quaternion);this._modelViewInverse=this._modelView.clone().transpose();var euler=FORGE.Quaternion.toEuler(this._quaternion);this._setAll(euler.yaw,euler.pitch,euler.roll,null,FORGE.Math.RADIANS);};FORGE.Camera.prototype._updateFromMatrix=function()
{this._modelViewInverse=this._modelView.clone().transpose();var euler=FORGE.Math.rotationMatrixToEuler(this._modelView);this._setAll(euler.yaw,euler.pitch,euler.roll,null,FORGE.Math.RADIANS);this._quaternion=FORGE.Quaternion.fromRotationMatrix(this._modelView);};FORGE.Camera.prototype._updateMainCamera=function()
{if(this._main===null||this._viewer.renderer.view.current===null)
{return;}
var mat=new THREE.Matrix4().copy(this._modelViewInverse);if(this._parallax!==0)
{mat.multiply(new THREE.Matrix4().makeTranslation(0,0,-this._radius));}
this._main.quaternion.setFromRotationMatrix(mat);this._main.matrixWorld=mat;this._main.matrixWorldInverse.getInverse(mat);this._main.fov=FORGE.Math.radToDeg(this._viewer.renderer.view.current.getProjectionFov());this._main.aspect=this._viewer.renderer.displayResolution.ratio;this._main.updateProjectionMatrix();};FORGE.Camera.prototype._updateFlatCamera=function()
{if(this._flat===null)
{return;}
var camW=this._flat.right-this._flat.left;var camH=this._flat.top-this._flat.bottom;this._flat.left=this._flat.position.x-camW / 2;this._flat.right=this._flat.position.x+camW / 2;this._flat.top=this._flat.position.y+camH / 2;this._flat.bottom=this._flat.position.y-camH / 2;var max=this._fovMax;var view=this._viewer.renderer.view.current;if(view!==null&&view.fovMax!==null)
{max=Math.min(view.fovMax,this._fovMax);this._flat.zoom=max / this._fov;}
else
{this._flat.zoom=1;}
this._flat.updateProjectionMatrix();};FORGE.Camera.prototype._updateComplete=function()
{if(this._onCameraChange!==null)
{this._onCameraChange.dispatch(null,true);}};FORGE.Camera.prototype._setYaw=function(value,unit)
{if(typeof value!=="number"||isNaN(value)===true)
{return false;}
unit=(unit===FORGE.Math.DEGREES||unit===FORGE.Math.RADIANS)?unit:FORGE.Math.RADIANS;value=(unit===FORGE.Math.DEGREES)?FORGE.Math.degToRad(value):value;if(this._viewer.renderer.backgroundRenderer!==null&&this._viewer.renderer.backgroundRenderer.displayObject!==null&&this._viewer.renderer.view.type===FORGE.ViewType.FLAT)
{var displayObject=this._viewer.renderer.backgroundRenderer.displayObject;var ratio=displayObject.pixelWidth / displayObject.pixelHeight;if(displayObject.element instanceof HTMLVideoElement)
{ratio=displayObject.element.videoWidth / displayObject.element.videoHeight;}
value=FORGE.Math.wrap(value,-Math.PI*ratio,Math.PI*ratio);}
else
{value=FORGE.Math.wrap(value,-Math.PI,Math.PI);}
var boundaries=this._getYawBoundaries();var yaw=FORGE.Math.clamp(value,boundaries.min,boundaries.max);var changed=this._yaw!==yaw;this._yaw=yaw;return changed;};FORGE.Camera.prototype._getYawBoundaries=function()
{var min=this._yawMin;var max=this._yawMax;var view=this._viewer.renderer.view.current;if(view!==null)
{min=Math.max(view.yawMin,min);max=Math.min(view.yawMax,max);}
return{min:min,max:max};};FORGE.Camera.prototype._setPitch=function(value,unit)
{if(typeof value!=="number"||isNaN(value)===true)
{return false;}
var oldPitch=this._pitch;unit=(unit===FORGE.Math.DEGREES||unit===FORGE.Math.RADIANS)?unit:FORGE.Math.RADIANS;value=(unit===FORGE.Math.DEGREES)?FORGE.Math.degToRad(value):value;value=FORGE.Math.wrap(value,-Math.PI,Math.PI);var boundaries=this._getPitchBoundaries();var pitch=FORGE.Math.clamp(value,boundaries.min,boundaries.max);if(Math.abs(oldPitch)>Math.PI / 2&&Math.abs(pitch)===Math.PI / 2)
{pitch=0;}
var changed=this._pitch!==pitch;this._pitch=pitch;return changed;};FORGE.Camera.prototype._getPitchBoundaries=function()
{var min=this._pitchMin;var max=this._pitchMax;var view=this._viewer.renderer.view.current;if(view!==null)
{min=Math.max(view.pitchMin,min);max=Math.min(view.pitchMax,max);}
return{min:min,max:max};};FORGE.Camera.prototype._setRoll=function(value,unit)
{if(typeof value!=="number"||isNaN(value)===true)
{return false;}
unit=(unit===FORGE.Math.DEGREES||unit===FORGE.Math.RADIANS)?unit:FORGE.Math.RADIANS;value=(unit===FORGE.Math.DEGREES)?FORGE.Math.degToRad(value):value;value=FORGE.Math.wrap(value,-Math.PI,Math.PI);var boundaries=this._getRollBoundaries();var roll=FORGE.Math.clamp(value,boundaries.min,boundaries.max);var changed=this._roll!==roll;this._roll=roll;return changed;};FORGE.Camera.prototype._getRollBoundaries=function()
{var min=this._rollMin;var max=this._rollMax;var view=this._viewer.renderer.view.current;if(view!==null)
{min=Math.max(view.rollMin,min);max=Math.min(view.rollMax,max);}
return{min:min,max:max};};FORGE.Camera.prototype._setFov=function(value,unit)
{if(typeof value!=="number"||isNaN(value)===true)
{return false;}
unit=(unit===FORGE.Math.DEGREES||unit===FORGE.Math.RADIANS)?unit:FORGE.Math.RADIANS;value=(unit===FORGE.Math.DEGREES)?FORGE.Math.degToRad(value):value;var boundaries=this._getFovBoundaries();var fov=FORGE.Math.clamp(value,boundaries.min,boundaries.max);var changed=this._fov!==fov;this._fov=fov;return changed;};FORGE.Camera.prototype._getFovBoundaries=function()
{var min=this._fovMin;var max=this._fovMax;var view=this._viewer.renderer.view.current;if(view!==null)
{min=Math.max(view.fovMin,min);max=Math.min(view.fovMax,max);}
return{min:min,max:max};};FORGE.Camera.prototype._setAll=function(yaw,pitch,roll,fov,unit)
{var yawChanged=this._setYaw(yaw,unit);var pitchChanged=this._setPitch(pitch,unit);var rollChanged=this._setRoll(roll,unit);var fovChanged=this._setFov(fov,unit);return(yawChanged===true||pitchChanged===true||rollChanged===true||fovChanged===true);};FORGE.Camera.prototype._onViewChange=function()
{var changed=this._setAll(this._yaw,this._pitch,this._roll,this._fov);if(changed===true)
{this._updateFromEuler();this._updateComplete();}};FORGE.Camera.prototype.load=function(config)
{this._config=(FORGE.Utils.extendMultipleObjects(FORGE.Camera.DEFAULT_CONFIG,config));this._parseConfig(this._config);this._initialized=true;};FORGE.Camera.prototype.lookAt=function(yaw,pitch,roll,fov,durationMS,cancelRoll,easing)
{if(typeof durationMS!=="number"||durationMS===0)
{this._setAll(yaw,pitch,roll,fov,FORGE.Math.DEGREES);this._updateFromEuler();this._updateComplete();}
else
{var track=new FORGE.DirectorTrack({easing:{default:easing||"LINEAR",start:0},keyframes:[{time:durationMS,data:{yaw:yaw,pitch:pitch,roll:roll,fov:fov}}]});this.animation.play(track.uid);}};FORGE.Camera.prototype.update=function()
{if(this._viewer.renderer.display.presentingVR===true)
{this._gaze.update();this._updateVRCameras();this._cloneVRCamerasChildren();}
this._updateMainCamera();this._updateFlatCamera();};FORGE.Camera.prototype.destroy=function()
{this._modelView=null;this._modelViewInverse=null;this._quaternion=null;this._main=null;this._flat=null;this._gaze.destroy();this._gaze=null;if(this._onCameraChange!==null)
{this._onCameraChange.destroy();this._onCameraChange=null;}
if(this._cameraAnimation!==null)
{this._cameraAnimation.destroy();this._cameraAnimation=null;}
this._viewer=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Camera.prototype,"config",{get:function()
{return this._config;},set:function(config)
{this.load(config);}});Object.defineProperty(FORGE.Camera.prototype,"keep",{get:function()
{return this._keep;}});Object.defineProperty(FORGE.Camera.prototype,"yaw",{get:function()
{return FORGE.Math.radToDeg(this._yaw);},set:function(value)
{var yawChanged=this._setYaw(value,FORGE.Math.DEGREES);if(yawChanged===true)
{this._updateFromEuler();this._updateComplete();}}});Object.defineProperty(FORGE.Camera.prototype,"yawMin",{get:function()
{var boundaries=this._getYawBoundaries();return FORGE.Math.radToDeg(boundaries.min);}});Object.defineProperty(FORGE.Camera.prototype,"yawMax",{get:function()
{var boundaries=this._getYawBoundaries();return FORGE.Math.radToDeg(boundaries.max);}});Object.defineProperty(FORGE.Camera.prototype,"pitch",{get:function()
{return FORGE.Math.radToDeg(this._pitch);},set:function(value)
{var pitchChanged=this._setPitch(value,FORGE.Math.DEGREES);if(pitchChanged)
{this._updateFromEuler();this._updateComplete();}}});Object.defineProperty(FORGE.Camera.prototype,"pitchMin",{get:function()
{var boundaries=this._getPitchBoundaries();return FORGE.Math.radToDeg(boundaries.min);}});Object.defineProperty(FORGE.Camera.prototype,"pitchMax",{get:function()
{var boundaries=this._getPitchBoundaries();return FORGE.Math.radToDeg(boundaries.max);}});Object.defineProperty(FORGE.Camera.prototype,"roll",{get:function()
{return FORGE.Math.radToDeg(this._roll);},set:function(value)
{var rollChanged=this._setRoll(value,FORGE.Math.DEGREES);if(rollChanged===true)
{this._updateFromEuler();this._updateComplete();}}});Object.defineProperty(FORGE.Camera.prototype,"rollMin",{get:function()
{var boundaries=this._getRollBoundaries();return FORGE.Math.radToDeg(boundaries.min);}});Object.defineProperty(FORGE.Camera.prototype,"rollMax",{get:function()
{var boundaries=this._getRollBoundaries();return FORGE.Math.radToDeg(boundaries.max);}});Object.defineProperty(FORGE.Camera.prototype,"fov",{get:function()
{return FORGE.Math.radToDeg(this._fov);},set:function(value)
{var fovChanged=this._setFov(value,FORGE.Math.DEGREES);if(fovChanged===true)
{this._updateComplete();}}});Object.defineProperty(FORGE.Camera.prototype,"fovMin",{get:function()
{var boundaries=this._getFovBoundaries();return FORGE.Math.radToDeg(boundaries.min);}});Object.defineProperty(FORGE.Camera.prototype,"fovMax",{get:function()
{var boundaries=this._getFovBoundaries();return FORGE.Math.radToDeg(boundaries.max);}});Object.defineProperty(FORGE.Camera.prototype,"quaternion",{get:function()
{return this._quaternion;},set:function(value)
{this._quaternion=value;this._updateFromQuaternion();this._updateComplete();}});Object.defineProperty(FORGE.Camera.prototype,"animation",{get:function()
{if(this._cameraAnimation===null)
{this._cameraAnimation=new FORGE.CameraAnimation(this._viewer,this);}
return this._cameraAnimation;}});Object.defineProperty(FORGE.Camera.prototype,"parallax",{get:function()
{return this._parallax;},set:function(value)
{this._parallax=FORGE.Math.clamp(value,0,1);this._radius=this._parallax*FORGE.Camera.RADIUS;this._updateComplete();}});Object.defineProperty(FORGE.Camera.prototype,"modelView",{get:function()
{return this._modelView;},set:function(value)
{this._modelView=value;this._updateFromMatrix();this._updateComplete();}});Object.defineProperty(FORGE.Camera.prototype,"modelViewInverse",{get:function()
{return this._modelViewInverse;}});Object.defineProperty(FORGE.Camera.prototype,"main",{get:function()
{if(this._main===null)
{this._createMainCamera();}
return this._main;}});Object.defineProperty(FORGE.Camera.prototype,"flat",{get:function()
{if(this._flat===null)
{this._createFlatCamera();}
return this._flat;}});Object.defineProperty(FORGE.Camera.prototype,"perspectiveCameraRadius",{get:function()
{return this._radius;}});Object.defineProperty(FORGE.Camera.prototype,"left",{get:function()
{return this._left;}});Object.defineProperty(FORGE.Camera.prototype,"right",{get:function()
{return this._right;}});Object.defineProperty(FORGE.Camera.prototype,"gaze",{get:function()
{return this._gaze;}});Object.defineProperty(FORGE.Camera.prototype,"onCameraChange",{get:function()
{if(this._onCameraChange===null)
{this._onCameraChange=new FORGE.EventDispatcher(this);}
return this._onCameraChange;}});FORGE.CameraAnimation=function(viewer,camera)
{FORGE.MetaAnimation.call(this,viewer,camera,"CameraAnimation");this._boot();};FORGE.CameraAnimation.prototype=Object.create(FORGE.MetaAnimation.prototype);FORGE.CameraAnimation.prototype.constructor=FORGE.CameraAnimation;FORGE.CameraAnimation.prototype._boot=function()
{this._register();var cameraAt=function()
{if(this._instruction.cancelRoll===true)
{this._target.quaternion=FORGE.Quaternion.cancelRoll(this._target.quaternion);}};this._instructions=[{prop:"quaternion",smooth:true,fun:cameraAt,cancelRoll:true},{prop:"fov",smooth:false}];};FORGE.CameraAnimation.prototype._prepareKeyframes=function(tracks,offset,easing)
{offset=offset||0;var kf,data,yaw,pitch,roll,fov,quat;for(var i=0,ii=tracks.length;i<ii;i++)
{data=tracks[i].data;yaw=(typeof data.yaw!=="undefined"&&data.yaw!==null)?data.yaw:this._computeIntermediateValue(tracks[i].time+offset,tracks,"yaw",easing);pitch=(typeof data.pitch!=="undefined"&&data.pitch!==null)?data.pitch:this._computeIntermediateValue(tracks[i].time+offset,tracks,"pitch",easing);roll=(typeof data.roll!=="undefined"&&data.roll!==null)?data.roll:this._computeIntermediateValue(tracks[i].time+offset,tracks,"roll",easing);yaw=FORGE.Math.degToRad(yaw);pitch=FORGE.Math.degToRad(pitch);roll=FORGE.Math.degToRad(roll);if(typeof yaw!=="undefined"&&yaw!==null&&typeof pitch!=="undefined"&&pitch!==null&&typeof roll!=="undefined"&&roll!==null)
{quat=FORGE.Quaternion.fromEuler(yaw,pitch,roll);kf=new FORGE.Keyframe(tracks[i].time+offset,{quaternion:quat});this._animations[0].timeline.addKeyframe(kf);}
if(typeof data.fov!=="undefined"&&data.fov!==null)
{fov=data.fov;kf=new FORGE.Keyframe(tracks[i].time+offset,{fov:fov});this._animations[1].timeline.addKeyframe(kf);}}
if(tracks[0].time>0||offset>0)
{kf=new FORGE.Keyframe(0,{quaternion:FORGE.Utils.clone(this._target.quaternion)});this._animations[0].timeline.addKeyframe(kf);kf=new FORGE.Keyframe(0,{fov:this._target.fov});this._animations[1].timeline.addKeyframe(kf);}};FORGE.CameraAnimation.prototype.play=function(track,time)
{if(typeof track==="string")
{track=FORGE.UID.get(track);}
this._emptyAnimations();var quatAnimation=new FORGE.Animation(this._viewer,this._target);quatAnimation.tween.easing=track.easing;quatAnimation.instruction=this._instructions[0];quatAnimation.instruction.smooth=track.smooth;quatAnimation.smooth=track.smooth;quatAnimation.instruction.cancelRoll=track.cancelRoll;quatAnimation.onComplete.add(this._onTrackPartialCompleteHandler,this);this._animations.push(quatAnimation);var fovAnimation=new FORGE.Animation(this._viewer,this._target);fovAnimation.tween.easing=track.easing;fovAnimation.instruction=this._instructions[1];fovAnimation.instruction.smooth=track.smooth;fovAnimation.onComplete.add(this._onTrackPartialCompleteHandler,this);this._animations.push(fovAnimation);this._prepareKeyframes(track.keyframes,track.offset,quatAnimation.tween.easing);quatAnimation.play(time);fovAnimation.play(time);};FORGE.CameraAnimation.prototype.destroy=function()
{FORGE.MetaAnimation.prototype.destroy.call(this);};FORGE.CameraGaze=function(viewer,config)
{this._viewer=viewer;this._config=config;this._object=null;this._hovering=false;this._timer=null;this._timerEvent=null;this._progress=0;FORGE.BaseObject.call(this,"CameraGaze");this._boot();};FORGE.CameraGaze.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.CameraGaze.prototype.constructor=FORGE.CameraGaze;FORGE.CameraGaze.prototype._boot=function()
{this._timer=this._viewer.clock.create(false);this._object=new THREE.Object3D();this._object.name="CameraGaze";this._object.position.z=-2;this._createCursor();};FORGE.CameraGaze.prototype._createRingGeometry=function(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength)
{innerRadius=innerRadius||0.02;outerRadius=outerRadius||0.04;thetaSegments=thetaSegments||32;phiSegments=phiSegments||1;thetaStart=thetaStart||0;thetaLength=thetaLength||Math.PI*2;var geometry=new THREE.RingBufferGeometry(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength);return geometry;};FORGE.CameraGaze.prototype._createCursor=function()
{var material=new THREE.MeshBasicMaterial({color:this._config.cursor.color,opacity:this._config.cursor.opacity,transparent:true});var ring=new THREE.Mesh(this._createRingGeometry(this._config.cursor.innerRadius,this._config.cursor.outerRadius),material);ring.name="cursor";this._object.add(ring);};FORGE.CameraGaze.prototype._updateProgressRing=function(progress)
{this._progress=progress;this._destroyRing("progress");this._createProgress();};FORGE.CameraGaze.prototype._createProgress=function()
{var material=new THREE.MeshBasicMaterial({color:this._config.progress.color,opacity:this._config.progress.opacity,transparent:true,side:THREE.DoubleSide});var thetaLength=(this._progress / 100)*FORGE.Math.TWOPI;var ring=new THREE.Mesh(this._createRingGeometry(this._config.progress.innerRadius,this._config.progress.outerRadius,32,1,(Math.PI / 2),thetaLength),material);ring.name="progress";ring.rotateY(Math.PI);this._object.add(ring);};FORGE.CameraGaze.prototype._destroyRing=function(name)
{var ring=null;for(var i=0,ii=this._object.children.length;i<ii;i++)
{if(this._object.children[i].name===name)
{ring=this._object.children[i];}}
if(ring!==null)
{this._object.remove(ring);ring.geometry.dispose();ring.material.dispose();}};FORGE.CameraGaze.prototype._timerCompleteHandler=function()
{this.stop();this._viewer.renderer.pickingManager.click();};FORGE.CameraGaze.prototype.load=function(config)
{this._config=config;this._destroyRing("progress");this._destroyRing("cursor");this._createCursor();if(this._hovering===true&&this._progress!==0)
{this._createProgress();}};FORGE.CameraGaze.prototype.start=function()
{this.log("startGazeAnimation");this._hovering=true;this._updateProgressRing(0);if(this._timer!==null)
{var delay=2000||this._config.delay;this._timer.stop();this._timerEvent=this._timer.add((delay),this._timerCompleteHandler,this);this._timer.start();}};FORGE.CameraGaze.prototype.stop=function()
{this.log("stopGazeAnimation");this._hovering=false;this._timer.stop();this._timerEvent=null;this._progress=0;var ring=this._object.children[1];if(typeof ring!=="undefined"&&ring!==null)
{this._object.remove(ring);ring.geometry.dispose();ring.material.dispose();}};FORGE.CameraGaze.prototype.update=function()
{if(this._hovering===true&&this._timerEvent!==null)
{var percent=(this._timerEvent.delay-this._timer.duration)*100 / this._timerEvent.delay;this.log("timer update : "+percent+"%");this._updateProgressRing(percent);}};FORGE.CameraGaze.prototype.destroy=function()
{this.stop();if(this._object!==null)
{if(typeof this._object.geometry!=="undefined"&&this._object.geometry!==null)
{this._object.geometry.dispose();}
if(typeof this._object.material!=="undefined"&&this._object.material!==null)
{this._object.material.dispose();}
this._object=null;}
this._scene=null;};Object.defineProperty(FORGE.CameraGaze.prototype,"visible",{get:function()
{return this._object.visible;},set:function(value)
{this._object.visible=value;}});Object.defineProperty(FORGE.CameraGaze.prototype,"object",{get:function()
{return this._object;}});FORGE.ControllerType={};FORGE.ControllerType.BASE="base";FORGE.ControllerType.POINTER="pointer";FORGE.ControllerType.KEYBOARD="keyboard";FORGE.ControllerType.GYROSCOPE="gyroscope";FORGE.ControllerType.GAMEPAD="gamepad";FORGE.ControllerManager=function(viewer)
{this._viewer=viewer;this._controllers=[];this._enabled=true;this._onControlStart=null;this._onControlEnd=null;FORGE.BaseObject.call(this,"ControllerManager");};FORGE.ControllerManager.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.ControllerManager.prototype.constructor=FORGE.ControllerManager;FORGE.ControllerManager.DEFAULT_CONFIG={enabled:true,instances:[{type:FORGE.ControllerType.POINTER,enabled:true},{type:FORGE.ControllerType.KEYBOARD,enabled:true},{type:FORGE.ControllerType.GYROSCOPE,enabled:true},{type:FORGE.ControllerType.GAMEPAD,enabled:true}]};FORGE.ControllerManager.prototype._parseConfig=function(config)
{this._enabled=(typeof config.enabled==="boolean")?config.enabled:true;if(typeof config.instances!=="undefined")
{var controllerConfig;var controller;for(var i=0,ii=config.instances.length;i<ii;i++)
{controllerConfig=config.instances[i];switch(controllerConfig.type)
{case FORGE.ControllerType.POINTER:controller=new FORGE.ControllerPointer(this._viewer,controllerConfig);break;case FORGE.ControllerType.KEYBOARD:controller=new FORGE.ControllerKeyboard(this._viewer,controllerConfig);break;case FORGE.ControllerType.GYROSCOPE:controller=new FORGE.ControllerGyroscope(this._viewer,controllerConfig);break;case FORGE.ControllerType.GAMEPAD:controller=new FORGE.ControllerGamepad(this._viewer,controllerConfig);break;default:controller=null;break;}
if(controller!==null)
{this._controllers.push(controller);}}}};FORGE.ControllerManager.prototype.notifyControlStart=function(controller)
{if(this._onControlStart!==null)
{this._onControlStart.dispatch({"controller":controller});}};FORGE.ControllerManager.prototype.notifyControlEnd=function(controller)
{if(this._onControlEnd!==null)
{this._onControlEnd.dispatch({"controller":controller});}};FORGE.ControllerManager.prototype.update=function()
{if(this._controllers===null)
{return;}
for(var i=0,ii=this._controllers.length;i<ii;i++)
{if(typeof this._controllers[i].update==="function")
{this._controllers[i].update();}}};FORGE.ControllerManager.prototype.addConfig=function(config)
{config=(typeof config!=="undefined")?config:FORGE.ControllerManager.DEFAULT_CONFIG;this._parseConfig(config);};FORGE.ControllerManager.prototype.getByType=function(type)
{var controller;for(var i=0,ii=this._controllers.length;i<ii;i++)
{controller=this._controllers[i];if(controller.type===type)
{return controller;}}
return null;};FORGE.ControllerManager.prototype.destroy=function()
{var count=this._controllers.length-1;var ctrl;while(count--)
{ctrl=this._controllers[count];if(ctrl!==null&&typeof ctrl!=="undefined")
{ctrl.destroy();this._controllers[count]=null;}}
this._controllers=null;if(this._onControlStart!==null)
{this._onControlStart.destroy();this._onControlStart=null;}
if(this._onControlEnd!==null)
{this._onControlEnd.destroy();this._onControlEnd=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.ControllerManager.prototype,"all",{get:function()
{return this._controllers;}});Object.defineProperty(FORGE.ControllerManager.prototype,"enabled",{get:function()
{return this._enabled;},set:function(value)
{this._enabled=Boolean(value);}});Object.defineProperty(FORGE.ControllerManager.prototype,"active",{get:function()
{for(var i=0,ii=this._controllers.length;i<ii;i++)
{if(this._controllers[i].active===true)
{return true;}}
return false;}});Object.defineProperty(FORGE.ControllerManager.prototype,"onControlStart",{get:function()
{if(this._onControlStart===null)
{this._onControlStart=new FORGE.EventDispatcher(this);}
return this._onControlStart;}});Object.defineProperty(FORGE.ControllerManager.prototype,"onControlEnd",{get:function()
{if(this._onControlEnd===null)
{this._onControlEnd=new FORGE.EventDispatcher(this);}
return this._onControlEnd;}});FORGE.ControllerBase=function(viewer,className)
{this._viewer=viewer;this._type=FORGE.ControllerType.BASE;this._camera=null;this._enabled=false;this._active=false;this._onControlStart=null;this._onControlEnd=null;FORGE.BaseObject.call(this,className||"ControllerBase");this._boot();};FORGE.ControllerBase.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.ControllerBase.prototype.constructor=FORGE.ControllerBase;FORGE.ControllerBase.prototype._boot=function()
{this._viewer.canvas.pointer.enabled=true;this._camera=this._viewer.renderer.camera;};FORGE.ControllerBase.prototype.enable=function()
{if(this._enabled===true)
{return;}
this._enabled=true;};FORGE.ControllerBase.prototype.disable=function()
{if(this._enabled===false)
{return;}
this._enabled=false;};FORGE.ControllerBase.prototype.destroy=function()
{this._camera=null;this._viewer=null;if(this._onControlStart!==null)
{this._onControlStart.destroy();this._onControlStart=null;}
if(this._onControlEnd!==null)
{this._onControlEnd.destroy();this._onControlEnd=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.ControllerBase.prototype,"enabled",{get:function()
{return this._enabled;},set:function(value)
{if(Boolean(value)===true)
{this.enable();}
else
{this.disable();}}});Object.defineProperty(FORGE.ControllerBase.prototype,"type",{get:function()
{return this._type;}});Object.defineProperty(FORGE.ControllerBase.prototype,"active",{get:function()
{return this._active;}});Object.defineProperty(FORGE.ControllerBase.prototype,"onControlStart",{get:function()
{if(this._onControlStart===null)
{this._onControlStart=new FORGE.EventDispatcher(this);}
return this._onControlStart;}});Object.defineProperty(FORGE.ControllerBase.prototype,"onControlEnd",{get:function()
{if(this._onControlEnd===null)
{this._onControlEnd=new FORGE.EventDispatcher(this);}
return this._onControlEnd;}});FORGE.ControllerPointer=function(viewer,config)
{this._config=config;this._orientation;this._zoom;this._fullscreen=true;this._positionStart=null;this._positionCurrent=null;this._positionPrevious=null;this._pinchStartFov=0;this._pinchScaleFactorCorrection=1;this._velocity=null;this._inertia=null;this._panning=false;FORGE.ControllerBase.call(this,viewer,"ControllerPointer");};FORGE.ControllerPointer.prototype=Object.create(FORGE.ControllerBase.prototype);FORGE.ControllerPointer.prototype.constructor=FORGE.ControllerPointer;FORGE.ControllerPointer.DEFAULT_OPTIONS={fullscreen:true,orientation:{drag:false,hardness:0.6,damping:0.15,velocityMax:300,invert:{x:false,y:false}},zoom:{hardness:5,invert:false,toPointer:false}};FORGE.ControllerPointer.prototype._boot=function()
{FORGE.ControllerBase.prototype._boot.call(this);this._type=FORGE.ControllerType.POINTER;this._inertia=new THREE.Vector2();this._velocity=new THREE.Vector2();this._positionStart=new THREE.Vector2();this._positionPrevious=new THREE.Vector2();this._positionCurrent=new THREE.Vector2();this._parseConfig(this._config);if(this._enabled===true)
{this.enable();}};FORGE.ControllerPointer.prototype._parseConfig=function(config)
{this._uid=config.uid;this._register();var options=config.options||{};this._orientation=(FORGE.Utils.extendMultipleObjects(FORGE.ControllerPointer.DEFAULT_OPTIONS.orientation,options.orientation));this._zoom=(FORGE.Utils.extendMultipleObjects(FORGE.ControllerPointer.DEFAULT_OPTIONS.zoom,options.zoom));this._fullscreen=(typeof options.fullscreen==="boolean")?options.fullscreen:FORGE.ControllerPointer.DEFAULT_OPTIONS.fullscreen;this._enabled=(typeof config.enabled==="boolean")?config.enabled:true;};FORGE.ControllerPointer.prototype._panStartHandler=function(event)
{if(this._viewer.controllers.enabled===false)
{return;}
this._viewer.canvas.pointer.onPanMove.add(this._panMoveHandler,this);this.log("_panStartHandler ("+event.data.velocityX.toFixed(2)+", "+event.data.velocityY.toFixed(2)+")");this._active=true;this._panning=true;var position=FORGE.Pointer.getRelativeMousePosition(event.data);this._positionStart=new THREE.Vector2(position.x,position.y);this._positionPrevious.copy(this._positionStart);this._positionCurrent.copy(this._positionStart);this._velocity.set(0,0);if(this._onControlStart!==null)
{this._onControlStart.dispatch();}
this._viewer.controllers.notifyControlStart(this);};FORGE.ControllerPointer.prototype._panMoveHandler=function(event)
{var position=FORGE.Pointer.getRelativeMousePosition(event.data);if(this._viewer.controllers.enabled===false||position===null)
{return;}
this._positionPrevious.copy(this._positionCurrent);this._positionCurrent.set(position.x,position.y);if(this._orientation.drag===true&&this._panning===true)
{this._updateCameraWithDrag();}};FORGE.ControllerPointer.prototype._panEndHandler=function()
{this._viewer.canvas.pointer.onPanMove.remove(this._panMoveHandler,this);this.log("_panEndHandler");this._active=false;this._panning=false;this._velocity.set(0,0);this._positionStart.set(0,0);this._positionCurrent.copy(this._positionStart);if(this._onControlEnd!==null)
{this._onControlEnd.dispatch();}
this._viewer.controllers.notifyControlEnd(this);};FORGE.ControllerPointer.prototype._updateCameraWithDrag=function()
{var stw0=this._viewer.view.screenToWorld(this._positionPrevious);var stw1=this._viewer.view.screenToWorld(this._positionCurrent);if(stw0===null||stw1===null)
{return;}
var spherical0=FORGE.Math.cartesianToSpherical(stw0.x,stw0.y,stw0.z);var quat0=FORGE.Quaternion.fromEuler(spherical0.theta,spherical0.phi,0);var spherical1=FORGE.Math.cartesianToSpherical(stw1.x,stw1.y,stw1.z);var quat1=FORGE.Quaternion.fromEuler(spherical1.theta,spherical1.phi,0);this._camera.yaw+=FORGE.Math.radToDeg(spherical0.theta-spherical1.theta);this._camera.pitch+=FORGE.Math.radToDeg(spherical0.phi-spherical1.phi);this._camera.roll=0;};FORGE.ControllerPointer.prototype._updateCameraWithVelocity=function()
{var size=this._viewer.renderer.displayResolution;var hardness=1 /(this._orientation.hardness*Math.min(size.width,size.height));this._velocity.subVectors(this._positionCurrent,this._positionStart);if(this._velocity.length()>this._orientation.velocityMax)
{this._velocity.setLength(this._orientation.velocityMax);}
this._velocity.multiplyScalar(hardness);var invert=this._orientation.invert;var invertX=(invert===true)?-1:(typeof invert==="object"&&invert.x===true)?-1:1;var invertY=(invert===true)?-1:(typeof invert==="object"&&invert.y===true)?-1:1;var dx=this._velocity.x+this._inertia.x;var dy=this._velocity.y+this._inertia.y;if(dx===0&&dy===0)
{return;}
var yaw=invertX*dx;if(Math.abs(yaw)>0.05)
{this._camera.yaw+=yaw;this._camera.flat.position.x+=dx;}
var pitch=invertY*dy;if(Math.abs(pitch)>0.05)
{this._camera.pitch-=pitch;this._camera.flat.position.y-=dy;}
this._inertia.add(this._velocity).multiplyScalar(FORGE.Math.clamp(1-this._orientation.damping,0,1));};FORGE.ControllerPointer.prototype._pinchStartHandler=function(event)
{if(this._viewer.controllers.enabled===false)
{return;}
this._pinchStartFov=this._camera.fov;this._pinchScaleFactorCorrection=1;this._viewer.canvas.pointer.onPinchMove.add(this._pinchMoveHandler,this);this.log("_pinchStartHandler "+event);};FORGE.ControllerPointer.prototype._pinchMoveHandler=function(event)
{if(this._viewer.controllers.enabled===false)
{return;}
event.data.preventDefault();var scale=this._zoom.invert?event.data.scale:1 / event.data.scale;var fovMin=this._camera.fovMin;var fovMax=this._camera.fovMax;var tmpFov=this._pinchStartFov*scale / this._pinchScaleFactorCorrection;if(tmpFov<fovMin)
{this._pinchScaleFactorCorrection=this._pinchStartFov*scale / fovMin;}
else if(tmpFov>fovMax)
{this._pinchScaleFactorCorrection=this._pinchStartFov*scale / fovMax;}
tmpFov=this._pinchStartFov*scale / this._pinchScaleFactorCorrection;this._camera.fov=tmpFov;};FORGE.ControllerPointer.prototype._pinchEndHandler=function(event)
{this._viewer.canvas.pointer.onPinchMove.remove(this._pinchMoveHandler,this);this.log("_pinchEndHandler "+event);};FORGE.ControllerPointer.prototype._wheelHandler=function(event)
{if(this._viewer.controllers.enabled===false)
{return;}
event.data.preventDefault();var invert=this._zoom.invert?1:-1;var delta=invert / this._zoom.hardness;var factorDeltaY=1;if(event.data.deltaMode)
{switch(event.data.deltaMode)
{case 1:factorDeltaY=33.3;break;case 2:factorDeltaY=self.innerHeight;break;default:factorDeltaY=1;}}
if(event.data.deltaY)
{delta*=(event.data.deltaY*factorDeltaY)/ 5;}
var fov=this._camera.fov-delta;if(this._zoom.toPointer===true)
{var screen=FORGE.Pointer.getRelativeMousePosition(event.data);var stw0=this._viewer.view.screenToWorld(screen);var spherical0=FORGE.Math.cartesianToSpherical(stw0.x,stw0.y,stw0.z);var quat0=FORGE.Quaternion.fromEuler(spherical0.theta,spherical0.phi,0);this._camera.fov=fov;this._viewer.view.current.updateUniforms();var stw1=this._viewer.view.screenToWorld(screen);var spherical1=FORGE.Math.cartesianToSpherical(stw1.x,stw1.y,stw1.z);var quat1=FORGE.Quaternion.fromEuler(spherical1.theta,spherical1.phi,0);var quat=FORGE.Quaternion.diffBetweenQuaternions(quat1,quat0);var euler=FORGE.Quaternion.toEuler(quat);this._camera.yaw+=FORGE.Math.radToDeg(euler.yaw);this._camera.pitch+=FORGE.Math.radToDeg(euler.pitch);}
else
{this._camera.fov=fov;}
this.log("_wheelHandler (fov:"+this._camera.fov+")");};FORGE.ControllerPointer.prototype._doubleTapHandler=function()
{if(this._viewer.controllers.enabled===false||this._fullscreen===false)
{return;}
this._viewer.fullscreen=!this._viewer.fullscreen;};FORGE.ControllerPointer.prototype.enable=function()
{FORGE.ControllerBase.prototype.enable.call(this);this._viewer.canvas.pointer.onPanStart.add(this._panStartHandler,this);this._viewer.canvas.pointer.onPanEnd.add(this._panEndHandler,this);this._viewer.canvas.pointer.onPinchStart.add(this._pinchStartHandler,this);this._viewer.canvas.pointer.onPinchEnd.add(this._pinchEndHandler,this);this._viewer.canvas.pointer.onWheel.add(this._wheelHandler,this);this._viewer.canvas.pointer.onDoubleTap.add(this._doubleTapHandler,this);};FORGE.ControllerPointer.prototype.disable=function()
{FORGE.ControllerBase.prototype.disable.call(this);this._viewer.canvas.pointer.onPanStart.remove(this._panStartHandler,this);this._viewer.canvas.pointer.onPanMove.remove(this._panMoveHandler,this);this._viewer.canvas.pointer.onPanEnd.remove(this._panEndHandler,this);this._viewer.canvas.pointer.onPinchStart.remove(this._pinchStartHandler,this);this._viewer.canvas.pointer.onPinchMove.remove(this._pinchEndHandler,this);this._viewer.canvas.pointer.onPinchEnd.remove(this._pinchEndHandler,this);this._viewer.canvas.pointer.onWheel.remove(this._wheelHandler,this);this._viewer.canvas.pointer.onDoubleTap.remove(this._doubleTapHandler,this);};FORGE.ControllerPointer.prototype.update=function()
{if(this._orientation.drag!==true)
{this._updateCameraWithVelocity();}};FORGE.ControllerPointer.prototype.destroy=function()
{FORGE.ControllerBase.prototype.destroy.call(this);};Object.defineProperty(FORGE.ControllerPointer.prototype,"orientation",{get:function()
{return this._orientation;},set:function(value)
{this._orientation=value;}});Object.defineProperty(FORGE.ControllerPointer.prototype,"zoom",{get:function()
{return this._zoom;},set:function(value)
{this._zoom=value;}});FORGE.ControllerKeyboard=function(viewer,config)
{this._config=config;this._orientation;this._zoom;this._positionStart=null;this._positionCurrent=null;this._velocity=null;this._inertia=null;this._keyBindings=null;FORGE.ControllerBase.call(this,viewer,"ControllerKeyboard");};FORGE.ControllerKeyboard.prototype=Object.create(FORGE.ControllerBase.prototype);FORGE.ControllerKeyboard.prototype.constructor=FORGE.ControllerKeyboard;FORGE.ControllerKeyboard.DEFAULT_OPTIONS={orientation:{hardness:0.6,damping:0.15,velocityMax:300,invert:false},zoom:{hardness:5,invert:false}};FORGE.ControllerKeyboard.prototype._boot=function()
{FORGE.ControllerBase.prototype._boot.call(this);this._type=FORGE.ControllerType.KEYBOARD;this._keyBindings=[];this._inertia=new THREE.Vector2();this._velocity=new THREE.Vector2();this._positionStart=new THREE.Vector2();this._positionCurrent=new THREE.Vector2();this._parseConfig(this._config);if(this._enabled===true)
{this.enable();}};FORGE.ControllerKeyboard.prototype._parseConfig=function(config)
{this._uid=config.uid;this._register();var options=config.options||{};this._orientation=(FORGE.Utils.extendMultipleObjects(FORGE.ControllerKeyboard.DEFAULT_OPTIONS.orientation,options.orientation));this._zoom=(FORGE.Utils.extendMultipleObjects(FORGE.ControllerKeyboard.DEFAULT_OPTIONS.zoom,options.zoom));this._enabled=(typeof config.enabled==="boolean")?config.enabled:true;if(options.default!==false)
{this._addDefaultBindings();}
if(Array.isArray(options.bindings)===true)
{for(var i=0,ii=options.bindings.length;i<ii;i++)
{this._addBinding(options.bindings[i]);}}};FORGE.ControllerKeyboard.prototype._addDefaultBindings=function()
{var bindingLeft=new FORGE.KeyBinding(this._viewer,[81,37],this._orientationDownHandler,this._orientationUpHandler,this._orientationHoldHandler,[68,39],this,"left");this._keyBindings.push(bindingLeft);var bindingRight=new FORGE.KeyBinding(this._viewer,[68,39],this._orientationDownHandler,this._orientationUpHandler,this._orientationHoldHandler,[81,37],this,"right");this._keyBindings.push(bindingRight);var bindingUp=new FORGE.KeyBinding(this._viewer,[90,38],this._orientationDownHandler,this._orientationUpHandler,this._orientationHoldHandler,[83,40],this,"up");this._keyBindings.push(bindingUp);var bindingDown=new FORGE.KeyBinding(this._viewer,[83,40],this._orientationDownHandler,this._orientationUpHandler,this._orientationHoldHandler,[90,38],this,"down");this._keyBindings.push(bindingDown);var bindingPlus=new FORGE.KeyBinding(this._viewer,107,this._zoomDownHandler,this._zoomUpHandler,this._zoomHoldHandler,109,this,"plus");this._keyBindings.push(bindingPlus);var bindingMinus=new FORGE.KeyBinding(this._viewer,109,this._zoomDownHandler,this._zoomUpHandler,this._zoomHoldHandler,107,this,"minus");this._keyBindings.push(bindingMinus);};FORGE.ControllerKeyboard.prototype._addBinding=function(binding)
{var keysIn=binding.in;var keysOut=binding.out;var name=binding.name;var events=binding.events;if(FORGE.Utils.isTypeOf(keysIn,"number")===false&&FORGE.Utils.isArrayOf(keysIn,"number")===false)
{this.warn("Can't add custom keyboard binding, keys in are invalid!");return;}
if(typeof events!=="object"&&events===null)
{this.warn("Can't add custom keyboard binding, events are invalid!");return;}
var keyBinding=new FORGE.KeyBinding(this._viewer,keysIn,events.onDown,events.onUp,events.onHold,keysOut,this,name);this._keyBindings.push(keyBinding);};FORGE.ControllerKeyboard.prototype._orientationDownHandler=function(binding)
{if(this._viewer.controllers.enabled===false)
{return;}
this._active=true;switch(binding.name)
{case"left":case"right":this._velocity.setX(0);break;case"up":case"down":this._velocity.setY(0);break;}
if(this._onControlStart!==null)
{this._onControlStart.dispatch();}
this._viewer.controllers.notifyControlStart(this);};FORGE.ControllerKeyboard.prototype._orientationHoldHandler=function(binding)
{if(this._viewer.controllers.enabled===false)
{return;}
switch(binding.name)
{case"left":this._positionCurrent.setX(this._positionCurrent.x-5);break;case"right":this._positionCurrent.setX(this._positionCurrent.x+5);break;case"up":this._positionCurrent.setY(this._positionCurrent.y-5);break;case"down":this._positionCurrent.setY(this._positionCurrent.y+5);break;}};FORGE.ControllerKeyboard.prototype._orientationUpHandler=function(binding)
{this._active=false;switch(binding.name)
{case"left":case"right":this._velocity.setX(0);this._positionCurrent.setX(0);break;case"up":case"down":this._velocity.setY(0);this._positionCurrent.setY(0);break;}
if(this._onControlEnd!==null)
{this._onControlEnd.dispatch();}
this._viewer.controllers.notifyControlEnd(this);};FORGE.ControllerKeyboard.prototype._zoomDownHandler=function(binding)
{if(this._viewer.controllers.enabled===false)
{return;}
this._active=true;this._zoomProcessBinding(binding);if(this._onControlStart!==null)
{this._onControlStart.dispatch();}
this._viewer.controllers.notifyControlStart(this);};FORGE.ControllerKeyboard.prototype._zoomHoldHandler=function(binding)
{this._zoomProcessBinding(binding);};FORGE.ControllerKeyboard.prototype._zoomUpHandler=function()
{this._active=false;if(this._onControlEnd!==null)
{this._onControlEnd.dispatch();}
this._viewer.controllers.notifyControlEnd(this);};FORGE.ControllerKeyboard.prototype._zoomProcessBinding=function(binding)
{var invert=this._zoom.invert?1:-1;var delta=invert / this._zoom.hardness;switch(binding.name)
{case"minus":delta*=10;break;case"plus":delta*=-10;break;}
this._camera.fov=this._camera.fov-delta;};FORGE.ControllerKeyboard.prototype.enable=function()
{FORGE.ControllerBase.prototype.enable.call(this);var binding;for(var i=0,ii=this._keyBindings.length;i<ii;i++)
{binding=this._keyBindings[i];this._viewer.keyboard.addBinding(binding);}};FORGE.ControllerKeyboard.prototype.disable=function()
{FORGE.ControllerBase.prototype.disable.call(this);var binding;for(var i=0,ii=this._keyBindings.length;i<ii;i++)
{binding=this._keyBindings[i];this._viewer.keyboard.removeBinding(binding);}};FORGE.ControllerKeyboard.prototype.update=function()
{var size=this._viewer.renderer.displayResolution;var hardness=1 /(this._orientation.hardness*Math.min(size.width,size.height));this._velocity.subVectors(this._positionCurrent,this._positionStart);if(this._velocity.length()>this._orientation.velocityMax)
{this._velocity.setLength(this._orientation.velocityMax);}
this._velocity.multiplyScalar(hardness);var dx=this._velocity.x+this._inertia.x;var dy=this._velocity.y+this._inertia.y;if(dx===0&&dy===0)
{return;}
var invert=this._orientation.invert?-1:1;this._camera.yaw+=invert*dx;this._camera.pitch-=invert*dy;this._inertia.add(this._velocity).multiplyScalar(FORGE.Math.clamp(1-this._orientation.damping,0,1));};FORGE.ControllerKeyboard.prototype.destroy=function()
{FORGE.ControllerBase.prototype.destroy.call(this);};FORGE.ControllerGyroscope=function(viewer,config)
{this._config=config;this._posEuler=null;this._posQuatIndermediate=null;this._posQuatOffset=null;this._posQuatScreenOrientation=null;this._posQuatFinal=null;this._screenOrientation=0;this._paused=false;FORGE.ControllerBase.call(this,viewer,"ControllerGyroscope");};FORGE.ControllerGyroscope.prototype=Object.create(FORGE.ControllerBase.prototype);FORGE.ControllerGyroscope.prototype.constructor=FORGE.ControllerGyroscope;FORGE.ControllerGyroscope.prototype._boot=function()
{FORGE.ControllerBase.prototype._boot.call(this);this._type=FORGE.ControllerType.GYROSCOPE;this._posEuler=new THREE.Euler();this._posQuatIndermediate=new THREE.Quaternion();this._posQuatOffset=new THREE.Quaternion(-Math.sqrt(0.5),0,0,Math.sqrt(0.5));this._posQuatScreenOrientation=new THREE.Quaternion();this._posQuatFinal=new THREE.Quaternion();this._parseConfig(this._config);FORGE.Device.onReady.addOnce(this._deviceReadyHandler,this);};FORGE.ControllerGyroscope.prototype._deviceReadyHandler=function()
{this._viewer.renderer.display.onDisplayChange.add(this._displayChangeHandler,this);this._viewer.renderer.view.onChange.add(this._viewChangeHandler,this);if(this._enabled===true&&FORGE.Device.gyroscope===true)
{this.enable();}};FORGE.ControllerGyroscope.prototype._parseConfig=function(config)
{this._uid=config.uid;this._register();this._enabled=(typeof config.enabled==="boolean")?config.enabled:true;};FORGE.ControllerGyroscope.prototype._displayChangeHandler=function()
{if(this._viewer.renderer.display.presentingVR===true)
{this._paused=true;}
else
{this._paused=false;}};FORGE.ControllerGyroscope.prototype._viewChangeHandler=function()
{if(this._viewer.renderer.view.type!==FORGE.ViewType.RECTILINEAR)
{this._paused=true;}
else
{this._paused=false;}};FORGE.ControllerGyroscope.prototype._deviceOrientationChangeHandler=function(event)
{if(this._viewer.controllers.enabled===false)
{return;}
var position={beta:0,alpha:0,gamma:0};if(typeof event!=="undefined"&&event!==null&&typeof event.data!=="undefined"&&event.data!==null)
{position=event.data;}
this._posEuler.set(FORGE.Math.degToRad(position.beta),FORGE.Math.degToRad(position.alpha),-FORGE.Math.degToRad(position.gamma),"YXZ");this._posQuatIndermediate.setFromEuler(this._posEuler);this._posQuatIndermediate.multiply(this._posQuatOffset);this._posQuatIndermediate.multiply(this._posQuatScreenOrientation);this._posQuatFinal.set(-this._posQuatIndermediate.y,-this._posQuatIndermediate.x,-this._posQuatIndermediate.z,this._posQuatIndermediate.w);};FORGE.ControllerGyroscope.prototype._screenOrientationChangeHandler=function()
{if(typeof screen.orientation!=="undefined")
{this._screenOrientation=FORGE.Math.degToRad(screen.orientation.angle);}
else if(typeof window.orientation!=="undefined")
{this._screenOrientation=FORGE.Math.degToRad(window.orientation);}
this._posQuatScreenOrientation.setFromAxisAngle(new THREE.Vector3(0,0,1),-this._screenOrientation);};FORGE.ControllerGyroscope.prototype.enable=function()
{if(this._viewer.controllers.enabled===false||this._config.enabled===false)
{return;}
FORGE.ControllerBase.prototype.enable.call(this);this._viewer.gyroscope.onDeviceOrientationChange.add(this._deviceOrientationChangeHandler,this);this._viewer.gyroscope.onScreenOrientationChange.add(this._screenOrientationChangeHandler,this);this._screenOrientationChangeHandler();this._deviceOrientationChangeHandler();};FORGE.ControllerGyroscope.prototype.disable=function()
{if(this._viewer.controllers.enabled===false||this._config.enabled===false)
{return;}
FORGE.ControllerBase.prototype.disable.call(this);this._viewer.gyroscope.onDeviceOrientationChange.remove(this._deviceOrientationChangeHandler,this);this._viewer.gyroscope.onScreenOrientationChange.remove(this._screenOrientationChangeHandler,this);};FORGE.ControllerGyroscope.prototype.update=function()
{if(this._enabled===true&&FORGE.Device.gyroscope===true&&this._paused===false)
{this._viewer.camera.quaternion=this._posQuatFinal;}};FORGE.ControllerGyroscope.prototype.destroy=function()
{this.disable();this._viewer.renderer.display.onDisplayChange.remove(this._displayChangeHandler,this);this._viewer.renderer.view.onChange.remove(this._viewChangeHandler,this);this._posEuler=null;this._posQuatIndermediate=null;this._posQuatOffset=null;this._posQuatScreenOrientation=null;this._posQuatFinal=null;FORGE.ControllerBase.prototype.destroy.call(this);};FORGE.ControllerGamepad=function(viewer,config)
{this._gamepads=null;this._config=config;this._orientation;this._zoom;this._positionCurrent=null;this._velocity=null;this._inertia=null;this._buttonBindings=null;this._axisBindings=null;FORGE.ControllerBase.call(this,viewer,"ControllerGamepad");};FORGE.ControllerGamepad.prototype=Object.create(FORGE.ControllerBase.prototype);FORGE.ControllerGamepad.prototype.constructor=FORGE.ControllerGamepad;FORGE.ControllerGamepad.DEFAULT_OPTIONS={orientation:{hardness:0.6,damping:0.15,velocityMax:300,invert:{x:false,y:false}},zoom:{hardness:5,invert:false}};FORGE.ControllerGamepad.prototype._boot=function()
{FORGE.ControllerBase.prototype._boot.call(this);this._type=FORGE.ControllerType.GAMEPAD;this._gamepads=[];this._buttonBindings=[];this._axisBindings=[];this._inertia=new THREE.Vector2();this._velocity=new THREE.Vector2();this._positionStart=new THREE.Vector2();this._positionCurrent=new THREE.Vector2();this._parseConfig(this._config);if(this._enabled===true)
{this.enable();}
this._viewer.gamepad.onGamepadConnected.add(this._onGamepadConnectedHandler,this);this._viewer.gamepad.onGamepadDisconnected.add(this._onGamepadDisconnectedHandler,this);};FORGE.ControllerGamepad.prototype._parseConfig=function(config)
{this._uid=config.uid;this._register();var options=config.options||{};this._orientation=(FORGE.Utils.extendMultipleObjects(FORGE.ControllerGamepad.DEFAULT_OPTIONS.orientation,options.orientation));this._zoom=(FORGE.Utils.extendMultipleObjects(FORGE.ControllerGamepad.DEFAULT_OPTIONS.zoom,options.zoom));this._enabled=(typeof config.enabled==="boolean")?config.enabled:true;if(options.default!==false)
{this._addDefaultBindings();}
if(typeof options.bindings!=="undefined")
{if(typeof options.bindings.buttons!=="undefined"&&Array.isArray(options.bindings.buttons)===true)
{for(var i=0,ii=options.bindings.buttons.length;i<ii;i++)
{this._addButtonBinding(options.bindings.buttons[i]);}}
if(typeof options.bindings.axes!=="undefined"&&Array.isArray(options.bindings.axes)===true)
{for(var i=0,ii=options.bindings.axes.length;i<ii;i++)
{this._addAxisBinding(options.bindings.axes[i]);}}}};FORGE.ControllerGamepad.prototype._addDefaultBindings=function()
{var bindingPlus=new FORGE.ButtonBinding(this._viewer,7,this._zoomDownHandler,this._zoomUpHandler,this._zoomHoldHandler,6,this,"plus");this._buttonBindings.push(bindingPlus);var bindingMinus=new FORGE.ButtonBinding(this._viewer,6,this._zoomDownHandler,this._zoomUpHandler,this._zoomHoldHandler,7,this,"minus");this._buttonBindings.push(bindingMinus);var bindingYaw=new FORGE.AxisBinding(this._viewer,0,this._yawChangeHandler,this,"yaw");this._axisBindings.push(bindingYaw);var bindingPitch=new FORGE.AxisBinding(this._viewer,1,this._pitchChangeHandler,this,"pitch");this._axisBindings.push(bindingPitch);};FORGE.ControllerGamepad.prototype._addButtonBinding=function(binding)
{var buttonsIn=binding.in;var buttonsOut=binding.out;var name=binding.name;var events=binding.events;if(FORGE.Utils.isTypeOf(buttonsIn,"number")===false&&FORGE.Utils.isArrayOf(buttonsIn,"number")===false)
{this.warn("Can't add custom gamepad binding, buttons in are invalid!");return;}
if(typeof events!=="object"&&events===null)
{this.warn("Can't add custom gamepad binding, events are invalid!");return;}
var buttonBinding=new FORGE.ButtonBinding(this._viewer,buttonsIn,events.onDown,events.onUp,events.onHold,buttonsOut,this,name);this._buttonBindings.push(buttonBinding);};FORGE.ControllerGamepad.prototype._addAxisBinding=function(binding)
{var axis=binding.axis;var name=binding.name;var events=binding.events;if(FORGE.Utils.isTypeOf(axis,"number")===false&&FORGE.Utils.isArrayOf(axis,"number")===false)
{this.warn("Can't add custom gamepad binding, axis in is invalid!");return;}
if(typeof events!=="object"&&events===null)
{this.warn("Can't add custom gamepad binding, events are invalid!");return;}
var axisBinding=new FORGE.AxisBinding(this._viewer,axis,events.onChange,this,name);this._axisBindings.push(axisBinding);};FORGE.ControllerGamepad.prototype._yawChangeHandler=function(binding,value)
{if(Math.abs(value)<0.1)
{this._velocity.setX(0);this._positionCurrent.setX(0);return;}
this._positionCurrent.setX(180*value);};FORGE.ControllerGamepad.prototype._pitchChangeHandler=function(binding,value)
{if(Math.abs(value)<0.1)
{this._velocity.setY(0);this._positionCurrent.setY(0);return;}
this._positionCurrent.setY(180*value);};FORGE.ControllerGamepad.prototype._zoomDownHandler=function(binding)
{if(this._viewer.controllers.enabled===false)
{return;}
this._active=true;this._zoomProcessBinding(binding);if(this._onControlStart!==null)
{this._onControlStart.dispatch();}
this._viewer.controllers.notifyControlStart(this);};FORGE.ControllerGamepad.prototype._zoomHoldHandler=function(binding)
{this._zoomProcessBinding(binding);};FORGE.ControllerGamepad.prototype._zoomUpHandler=function()
{this._active=false;if(this._onControlEnd!==null)
{this._onControlEnd.dispatch();}
this._viewer.controllers.notifyControlEnd(this);};FORGE.ControllerGamepad.prototype._zoomProcessBinding=function(binding)
{var invert=this._zoom.invert?1:-1;var delta=invert / this._zoom.hardness;switch(binding.name)
{case"minus":delta*=5;break;case"plus":delta*=-5;break;}
this._camera.fov=this._camera.fov-delta;};FORGE.ControllerGamepad.prototype._onGamepadConnectedHandler=function(gamepad)
{gamepad=gamepad.data;if(this._gamepads.indexOf(gamepad)===-1)
{this._gamepads.push(gamepad);}
var binding;for(var i=0,ii=this._buttonBindings.length;i<ii;i++)
{binding=this._buttonBindings[i];gamepad.addBinding(binding);}
for(var i=0,ii=this._axisBindings.length;i<ii;i++)
{binding=this._axisBindings[i];gamepad.addBinding(binding);}};FORGE.ControllerGamepad.prototype._onGamepadDisconnectedHandler=function(name)
{name=name.data;var index;for(var i=0,ii=this._gamepads.length;i<ii;i++)
{if(this._gamepads[i].name===name)
{index=i;break;}}
if(index!==-1)
{this._gamepads.splice(index,1);}};FORGE.ControllerGamepad.prototype.enable=function()
{FORGE.ControllerBase.prototype.enable.call(this);var binding;for(var i=0,ii=this._buttonBindings.length;i<ii;i++)
{binding=this._buttonBindings[i];for(var j=0,jj=this._gamepads.length;j<jj;j++)
{this._gamepads[j].addBinding(binding);}}
for(var i=0,ii=this._axisBindings.length;i<ii;i++)
{binding=this._axisBindings[i];for(var j=0,jj=this._gamepads.length;j<jj;j++)
{this._gamepads[j].addBinding(binding);}}};FORGE.ControllerGamepad.prototype.disable=function()
{FORGE.ControllerBase.prototype.disable.call(this);var binding;for(var i=0,ii=this._buttonBindings.length;i<ii;i++)
{binding=this._buttonBindings[i];for(var j=0,jj=this._gamepads.length;j<jj;j++)
{this._gamepads[j].removeBinding(binding);}}
for(var i=0,ii=this._axisBindings.length;i<ii;i++)
{binding=this._axisBindings[i];for(var j=0,jj=this._gamepads.length;j<jj;j++)
{this._gamepads[j].removeBinding(binding);}}};FORGE.ControllerGamepad.prototype.update=function()
{var size=this._viewer.renderer.displayResolution;var hardness=1 /(this._orientation.hardness*Math.min(size.width,size.height));this._velocity=this._positionCurrent.clone();if(this._velocity.length()>this._orientation.velocityMax)
{this._velocity.setLength(this._orientation.velocityMax);}
this._velocity.multiplyScalar(hardness);var dx=this._velocity.x+this._inertia.x;var dy=this._velocity.y+this._inertia.y;if(dx===0&&dy===0)
{return;}
var invert=this._orientation.invert;var invertX=(invert===true)?-1:(typeof invert==="object"&&invert.x===true)?-1:1;var invertY=(invert===true)?-1:(typeof invert==="object"&&invert.y===true)?-1:1;this._camera.yaw+=invertX*dx;this._camera.pitch-=invertY*dy;this._inertia.add(this._velocity).multiplyScalar(FORGE.Math.clamp(1-this._orientation.damping,0,1));};FORGE.ControllerGamepad.prototype.destroy=function()
{this._viewer.gamepad.onGamepadConnected.remove(this._onGamepadConnectedHandler,this);this._viewer.gamepad.onGamepadDisconnected.remove(this._onGamepadDisconnectedHandler,this);this._positionStart=null;this._positionCurrent=null;this._velocity=null;this._inertia=null;var binding;while(this._buttonBindings.length>0)
{binding=this._buttonBindings.pop();binding.destroy();}
this._buttonBindings=null;while(this._axisBindings.length>0)
{binding=this._axisBindings.pop();binding.destroy();}
this._axisBindings=null;FORGE.ControllerBase.prototype.destroy.call(this);};FORGE.SoundManager=function(viewer)
{this._viewer=viewer;this._config=null;this._volume=1;this._volumeChanged=false;this._defaultVolume=1;this._maxVolume=1;this._mutedVolume=1;this._muted=false;this._enabled=true;this._sounds=null;this._noAudio=false;this._useAudioTag=false;this._useWebAudio=true;this._channels=32;this._context=null;this._contextState="running";this._analyser=null;this._masterGain=null;this._onMute=null;this._onUnmute=null;this._onVolumeChange=null;this._onDisable=null;this._onEnable=null;FORGE.BaseObject.call(this,"SoundManager");};FORGE.SoundManager.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.SoundManager.prototype.constructor=FORGE.SoundManager;FORGE.SoundManager.prototype.boot=function()
{this._sounds=[];if(FORGE.Device.iOS&&FORGE.Device.webAudio===false)
{this._channels=1;}
if(FORGE.Device.webAudio===true)
{try
{if(typeof window.AudioContext==="function")
{this._context=new window.AudioContext();}
else
{this._context=new window.webkitAudioContext();}}
catch(error)
{this._context=null;this._useWebAudio=false;this._noAudio=true;}}
if(FORGE.Device.audioTag===true&&this._context===null)
{this._useWebAudio=false;this._useAudioTag=true;this._noAudio=false;}
if(this._context!==null)
{if(typeof this._context.createGain==="undefined")
{this._masterGain=this._context.createGainNode();}
else
{this._masterGain=this._context.createGain();}
this._analyser=this._context.createAnalyser();this._analyser.connect(this._masterGain);this._masterGain.gain.value=this._volume;this._masterGain.connect(this._context.destination);this._context.listener.setOrientation(0,0,-1,0,1,0);}
this._viewer.story.onSceneLoadStart.add(this._sceneLoadStartHandler,this);};FORGE.SoundManager.prototype._sceneLoadStartHandler=function()
{if(typeof this._viewer.story.scene.config.audio!=="undefined")
{this._parseSceneConfig(this._viewer.story.scene.config.audio);}
else
{this._applyConfig(this._config);if(this._enabled===false)
{if(this._onDisable!==null)
{this._onDisable.dispatch();}}
else
{if(this._onEnable!==null)
{this._onEnable.dispatch();}}}};FORGE.SoundManager.prototype._parseSceneConfig=function(config)
{var extendedConfig=FORGE.Utils.extendMultipleObjects(this._config,config);this._applyConfig(extendedConfig);if(this._enabled===false)
{if(this._onDisable!==null)
{this._onDisable.dispatch();}}
else
{if(this._onEnable!==null)
{this._onEnable.dispatch();}}};FORGE.SoundManager.prototype._applyConfig=function(config)
{if(config!==null)
{this._enabled=typeof config.enabled!=="undefined"?Boolean(config.enabled):true;this._maxVolume=(typeof config.volume!=="undefined"&&typeof config.volume.max==="number")?FORGE.Math.clamp(config.volume.max,0,1):1;if(this._volumeChanged===false)
{this._defaultVolume=(typeof config.volume!=="undefined"&&typeof config.volume.default==="number")?FORGE.Math.clamp(config.volume.default,0,this._maxVolume):1;}
else
{this._defaultVolume=FORGE.Math.clamp(this._volume,0,this._maxVolume);}}};FORGE.SoundManager.prototype.addConfig=function(config)
{this._parseConfig(config);this._initSounds();};FORGE.SoundManager.prototype._parseConfig=function(config)
{this._config=config;this._applyConfig(config);};FORGE.SoundManager.prototype._initSounds=function()
{if(typeof this._defaultVolume==="number"&&this._volumeChanged===false)
{this._volume=FORGE.Math.clamp(this._defaultVolume,0,1);}
this._updateVolume();};FORGE.SoundManager.prototype.update=function()
{for(var i=0,ii=this._sounds.length;i<ii;i++)
{this._sounds[i].update();}
this._setContextListenerOrientation();};FORGE.SoundManager.prototype.add=function(sound)
{var index=this._indexOfSound(sound);if(index===-1)
{this._sounds.push(sound);}};FORGE.SoundManager.prototype.remove=function(sound)
{var index=this._indexOfSound(sound);if(index>-1)
{this._sounds.splice(index,1);}};FORGE.SoundManager.prototype._indexOfSound=function(sound)
{if(this._sounds===null)
{return-1;}
var _sound;for(var i=0,ii=this._sounds.length;i<ii;i++)
{_sound=this._sounds[i];if(_sound===sound)
{return i;}}
return-1;};FORGE.SoundManager.prototype.suspend=function()
{if(this._context!==null&&typeof this._context.suspend!=="undefined"&&this._useWebAudio===true&&FORGE.Device.safari===false)
{if(this._contextState==="running")
{var allStopped=true;for(var i=0,ii=this._sounds.length;i<ii;i++)
{if(this._sounds[i].playing===true||this._sounds[i].paused===true)
{allStopped=false;break;}}
if(allStopped===true)
{this._contextState="suspended";this._context.suspend();}}}};FORGE.SoundManager.prototype.resume=function()
{if(this._context!==null&&typeof this._context.resume!=="undefined"&&this._useWebAudio===true&&FORGE.Device.safari===false)
{if(this._contextState==="suspended")
{for(var i=0,ii=this._sounds.length;i<ii;i++)
{if(this._sounds[i].playing===true||this._sounds[i].paused===true)
{this._contextState="running";this._context.resume();break;}}}}};FORGE.SoundManager.prototype.pauseAll=function()
{for(var i=0,ii=this._sounds.length;i<ii;i++)
{if(this._sounds[i].playing===true)
{this._sounds[i].pause();this._sounds[i].resumed=true;}}};FORGE.SoundManager.prototype.resumeAll=function()
{for(var i=0,ii=this._sounds.length;i<ii;i++)
{if(this._sounds[i].resumed===true)
{this._sounds[i].resume();this._sounds[i].resumed=false;}}};FORGE.SoundManager.prototype.mute=function()
{if(this._muted===true)
{return;}
this._muted=true;this._mutedVolume=this._volume;this._volume=0;if(this._useWebAudio===true)
{this._mutedVolume=this._masterGain.gain.value;}
this._updateVolume();if(this._onMute!==null)
{this._onMute.dispatch();}};FORGE.SoundManager.prototype.unmute=function()
{if(this._muted===false)
{return;}
this._muted=false;this._volume=this._mutedVolume;this._updateVolume();if(this._onUnmute!==null)
{this._onUnmute.dispatch();}};FORGE.SoundManager.prototype._updateVolume=function()
{if(this._useWebAudio===true)
{this._masterGain.gain.value=this._volume;}
else if(this._useAudioTag===true)
{for(var i=0;i<this._sounds.length;i++)
{this._sounds[i]._sound.data.volume=FORGE.Math.clamp(this._sounds[i]._volume,0,1)*this._volume;}}
this._volumeChanged=true;if(this._onVolumeChange!==null)
{this._onVolumeChange.dispatch();}};FORGE.SoundManager.prototype._setContextListenerOrientation=function()
{if(this._useWebAudio===true&&this._viewer.renderer.camera.main!==null)
{var cameraDirection=new THREE.Vector3();var qCamera=this._viewer.renderer.camera.main.quaternion;cameraDirection.set(0,0,-1);cameraDirection.applyQuaternion(qCamera);var camera=cameraDirection.clone();cameraDirection.set(0,1,0);cameraDirection.applyQuaternion(qCamera);var cameraUp=cameraDirection;this._context.listener.setOrientation(camera.x,camera.y,camera.z,cameraUp.x,cameraUp.y,cameraUp.z);}};FORGE.SoundManager.prototype.destroy=function()
{this._viewer.story.onSceneLoadStart.remove(this._sceneLoadStartHandler,this);this._viewer=null;this._config=null;var i=this._sounds.length;while(i--)
{this._sounds[i].destroy();}
this._sounds=null;this._context=null;this._analyser=null;this._masterGain=null;if(this._onMute!==null)
{this._onMute.destroy();this._onMute=null;}
if(this._onUnmute!==null)
{this._onUnmute.destroy();this._onUnmute=null;}
if(this._onVolumeChange!==null)
{this._onVolumeChange.destroy();this._onVolumeChange=null;}
if(this._onDisable!==null)
{this._onDisable.destroy();this._onDisable=null;}
if(this._onEnable!==null)
{this._onEnable.destroy();this._onEnable=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.SoundManager.prototype,"context",{get:function()
{return this._context;}});Object.defineProperty(FORGE.SoundManager.prototype,"analyser",{get:function()
{return this._analyser;}});Object.defineProperty(FORGE.SoundManager.prototype,"inputNode",{get:function()
{return this._analyser;}});Object.defineProperty(FORGE.SoundManager.prototype,"masterGain",{get:function()
{return this._masterGain;}});Object.defineProperty(FORGE.SoundManager.prototype,"useWebAudio",{get:function()
{return this._useWebAudio;},set:function(value)
{if(typeof value==="boolean")
{this._useWebAudio=value;this._useAudioTag=!value;}}});Object.defineProperty(FORGE.SoundManager.prototype,"useAudioTag",{get:function()
{return this._useAudioTag;},set:function(value)
{if(typeof value==="boolean")
{this._useAudioTag=value;this._useWebAudio=!value;}}});Object.defineProperty(FORGE.SoundManager.prototype,"enabled",{get:function()
{return this._enabled;}});Object.defineProperty(FORGE.SoundManager.prototype,"muted",{get:function()
{return this._muted;},set:function(value)
{if(typeof value==="boolean")
{if(value===true)
{this.mute();}
else
{this.unmute();}}}});Object.defineProperty(FORGE.SoundManager.prototype,"volume",{get:function()
{if(this._useWebAudio===true)
{return this._masterGain.gain.value;}
else
{return this._volume;}},set:function(value)
{if(typeof value!=="number")
{return;}
value=FORGE.Math.clamp(value,0,1);if(this._maxVolume<value)
{this._volume=this._maxVolume;}
else
{this._volume=value;}
if(this._volume>0)
{this._muted=false;}
this._updateVolume();}});Object.defineProperty(FORGE.SoundManager.prototype,"onMute",{get:function()
{if(this._onMute===null)
{this._onMute=new FORGE.EventDispatcher(this);}
return this._onMute;}});Object.defineProperty(FORGE.SoundManager.prototype,"onUnmute",{get:function()
{if(this._onUnmute===null)
{this._onUnmute=new FORGE.EventDispatcher(this);}
return this._onUnmute;}});Object.defineProperty(FORGE.SoundManager.prototype,"onVolumeChange",{get:function()
{if(this._onVolumeChange===null)
{this._onVolumeChange=new FORGE.EventDispatcher(this);}
return this._onVolumeChange;}});Object.defineProperty(FORGE.SoundManager.prototype,"onDisable",{get:function()
{if(this._onDisable===null)
{this._onDisable=new FORGE.EventDispatcher(this);}
return this._onDisable;}});Object.defineProperty(FORGE.SoundManager.prototype,"onEnable",{get:function()
{if(this._onEnable===null)
{this._onEnable=new FORGE.EventDispatcher(this);}
return this._onEnable;}});FORGE.SoundType={};FORGE.SoundType.STEREO="stereo";FORGE.SoundType.SPATIAL="3d";FORGE.SoundType.AMBISONIC="ambisonic";FORGE.Sound=function(viewer,key,url,ambisonic)
{this._viewer=viewer;this._key=key;this._url=url;this._volume=1;this._mutedVolume=1;this._muted=false;this._enabled=true;this._spatialized=false;this._duration=0;this._durationMS=0;this._startTime=0;this._pauseTime=0;this._currentTime=0;this._loop=false;this._playing=false;this._playCount=0;this._paused=false;this._resumed=false;this._soundFile=null;this._sound=null;this._buffer=null;this._panner=null;this._context=null;this._inputNode=null;this._gainNode=null;this._x=0;this._y=0;this._z=0;this._decoder=null;this._ambisonic=ambisonic||false;this._defaultChannelMap=[0,1,2,3];this._pendingPlay=false;this._ready=false;this._decodeCompleteBind=null;this._decodeErrorBind=null;this._decoded=false;this._onSoundDecode=null;this._onLoadStart=null;this._onLoadedData=null;this._onCanPlay=null;this._onCanPlayThrough=null;this._onMute=null;this._onUnmute=null;this._onVolumeChange=null;this._onPlay=null;this._onStop=null;this._onPause=null;this._onResume=null;this._onEnded=null;FORGE.BaseObject.call(this,"Sound");this._boot();};FORGE.Sound.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Sound.prototype.constructor=FORGE.Sound;FORGE.Sound.prototype._boot=function()
{if(this._ambisonic===true&&this._isAmbisonic()===false)
{this.log("FORGE.Sound: can't manage ambisonic sound without Google Chrome Omnitone library and WebAudio API.");this._ambisonic=false;}
this._uid=this._key;this._register();if(this._viewer.audio.useWebAudio===true)
{this._context=this._viewer.audio.context;this._inputNode=this._viewer.audio.inputNode;if(typeof this._context.createGain==="undefined")
{this._gainNode=this._context.createGainNode();}
else
{this._gainNode=this._context.createGain();}
this._gainNode.gain.value=this._volume*this._viewer.audio.volume;this._gainNode.connect(this._inputNode);}
if(this._viewer.audio.useAudioTag===true||this._isAmbisonic()===true)
{if(this._viewer.cache.has(FORGE.Cache.types.SOUND,this._key)===true)
{this._loadComplete(this._viewer.cache.get(FORGE.Cache.types.SOUND,this._key));}
this._viewer.audio.onVolumeChange.add(this._mainVolumeChangeHandler,this);}
this._viewer.audio.onDisable.add(this._disableSoundHandler,this);if(this._url!=="")
{this._viewer.load.sound(this._key,this._url,this._loadComplete,this,this._isAmbisonic());if(this._onLoadStart!==null)
{this._onLoadStart.dispatch();}}
this._viewer.audio.add(this);};FORGE.Sound.prototype._loadComplete=function(file)
{if(this._alive===false)
{return;}
this._soundFile=file;this._ready=true;if(this._onLoadedData!==null)
{this._onLoadedData.dispatch();}
if(this._viewer.audio.useWebAudio===true)
{this._decode(this._soundFile);}
else
{this._dispatchDecodedEvents();this._decodeComplete(null);}};FORGE.Sound.prototype._decode=function(file)
{if(file)
{if(this._decoded===false)
{this._decodeCompleteBind=this._decodeComplete.bind(this);this._decodeErrorBind=this._decodeError.bind(this);if(this._isAmbisonic()===true)
{this._decoder=Omnitone.createFOADecoder(this._context,file.data,{channelMap:this._defaultChannelMap});this._decoder.initialize().then(this._decodeCompleteBind,this._decodeErrorBind);}
else
{this._context.decodeAudioData(file.data,this._decodeCompleteBind,this._decodeErrorBind);}}}};FORGE.Sound.prototype._decodeError=function()
{if(this._soundFile!==null)
{this._soundFile.data=null;this._decoded=false;}};FORGE.Sound.prototype._dispatchDecodedEvents=function()
{if(this._onSoundDecode!==null)
{this._onSoundDecode.dispatch();}
if(this._onCanPlay!==null)
{this._onCanPlay.dispatch();}
if(this._onCanPlayThrough!==null)
{this._onCanPlayThrough.dispatch();}};FORGE.Sound.prototype._decodeComplete=function(buffer)
{if(this._soundFile===null)
{this.log("FORGE.Sound._decodeComplete error, sound file is null");return;}
if(buffer)
{this._soundFile.data=buffer;}
this._decoded=true;this._dispatchDecodedEvents();if(this._viewer.audio.useAudioTag===true||this._isAmbisonic()===true)
{this._sound=this._viewer.cache.get(FORGE.Cache.types.SOUND,this._key);this._updateVolume();this._duration=0;if(this._sound.data.duration)
{this._duration=this._sound.data.duration;this._durationMS=Math.ceil(this._duration*1000);}}
if(this._pendingPlay===true)
{this.play(this._currentTime,this._loop,true);}};FORGE.Sound.prototype._mainVolumeChangeHandler=function()
{this._updateVolume();};FORGE.Sound.prototype._updateVolume=function()
{if(this._sound!==null&&(this._viewer.audio.useAudioTag===true||this._isAmbisonic()===true))
{this._sound.data.volume=FORGE.Math.clamp(this._volume,0,1)*this._viewer.audio.volume;}};FORGE.Sound.prototype._disableSoundHandler=function()
{if(this._playing===true)
{this.pause();}
else if(this.paused===false)
{this.stop();}};FORGE.Sound.prototype._reset=function()
{this._currentTime=0;this._pendingPlay=false;this._playing=false;this._paused=false;};FORGE.Sound.prototype._setupPanner=function()
{this._panner=this._context.createPanner();this._panner.panningModel="HRTF";this._panner.distanceModel="inverse";this._panner.refDistance=1;this._panner.maxDistance=10000;this._panner.rolloffFactor=1;this._panner.coneInnerAngle=360;this._panner.coneOuterAngle=0;this._panner.coneOuterGain=0;this._panner.setOrientation(0,0,0);this._panner.setPosition(0,0,0);};FORGE.Sound.prototype._applyPanner=function(connect)
{if(this._panner===null)
{this._setupPanner();}
this._panner.setPosition(this._x,this._y,this._z);if(connect===true)
{this._sound.connect(this._panner);this._panner.connect(this._gainNode);}};FORGE.Sound.prototype._isAmbisonic=function()
{return(this._ambisonic===true&&this._viewer.audio.useWebAudio===true&&typeof Omnitone!=="undefined");};FORGE.Sound.prototype.update=function()
{if(this._playing===true&&this._paused===false)
{var time=this._viewer.clock.time-this._startTime;if(time>=this._durationMS)
{this._currentTime=this._durationMS;if(this._viewer.audio.useWebAudio===true||this._viewer.audio.useAudioTag===true)
{this.stop(true);if(this._onEnded!==null)
{this._onEnded.dispatch();}
if(this._loop===true)
{this._currentTime=0;this.resume();}}}
else
{this._currentTime=time;}}
if(this._decoder!==null&&this._playing===true)
{var m4=this._viewer.renderer.camera.modelViewInverse;this._decoder.setRotationMatrixFromCamera(m4);}};FORGE.Sound.prototype.play=function(position,loop,forceRestart)
{if(this._viewer.audio.enabled===false||this._enabled===false)
{this._playing=false;this._paused=false;return;}
this._loop=loop||this._loop;if(this._playing===true)
{if(forceRestart===true)
{this.stop();}
else
{return;}}
if(this._ready===false)
{this._pendingPlay=true;return;}
if(this._viewer.audio.useWebAudio===true&&this._isAmbisonic()===false)
{if(this._decoded===true)
{if(this._buffer===null)
{this._buffer=this._soundFile.data;}
this._sound=this._context.createBufferSource();this._sound.buffer=this._buffer;if(this._spatialized===true)
{this._applyPanner(true);}
else
{this._sound.connect(this._gainNode);}
this._duration=this._sound.buffer.duration;this._durationMS=Math.ceil(this._duration*1000);if(!isNaN(position)&&position<this._durationMS)
{this._startTime=this._viewer.clock.time-position;}
else
{position=0;this._startTime=this._viewer.clock.time;}
var time=FORGE.Math.round10(position / 1000);if(typeof this._sound.start==="undefined")
{this._sound.noteGrainOn(0,time%this._duration,this._duration);}
else
{this._sound.start(0,time%this._duration,this._duration);}
this._playing=true;this._currentTime=(position);this._playCount++;if(this._onPlay!==null)
{this._onPlay.dispatch();}}
else
{this.log("Sound is not decoded yet");this._pendingPlay=true;return;}}
else if(this._viewer.audio.useAudioTag===true||this._isAmbisonic()===true)
{if(this._duration===0)
{this._duration=this._sound.data.duration;this._durationMS=Math.ceil(this._duration*1000);}
else if(this._duration===Infinity)
{this._sound.data.loop=true;}
if(!isNaN(position)&&this._durationMS!==0&&position<this._durationMS)
{this._sound.data.currentTime=FORGE.Math.round10(position / 1000);this._startTime=this._viewer.clock.time-position;}
else
{position=0;this._sound.data.currentTime=position;this._startTime=this._viewer.clock.time;}
this._sound.data.play();this._playing=true;this._currentTime=(position);this._playCount++;if(this._onPlay!==null)
{this._onPlay.dispatch();}}
this._viewer.audio.resume();};FORGE.Sound.prototype.stop=function(internal)
{if(this._sound!==null)
{this._stop(true);this._pauseTime=this._viewer.clock.time;this._startTime=this._viewer.clock.time;this._pendingPlay=false;this._playing=false;this._paused=false;if(this._onStop!==null&&internal===true)
{this._onStop.dispatch();}
this._viewer.audio.suspend();}
else if(this._ready===false||this._decoded!==true)
{this._reset();}};FORGE.Sound.prototype._stop=function(resetCurrentTime)
{if(this._viewer.audio.useWebAudio===true&&this._isAmbisonic()===false)
{if(typeof this._sound.stop==="undefined")
{this._sound.noteOff(0);}
else
{try
{this._sound.stop(0);}
catch(e)
{}}
this._sound.disconnect(0);if(resetCurrentTime===true)
{this._currentTime=0;}}
else if(this._viewer.audio.useAudioTag===true||this._isAmbisonic()===true)
{this._sound.data.pause();if(resetCurrentTime===true)
{this._currentTime=0;this._sound.data.currentTime=0;}}};FORGE.Sound.prototype.pause=function()
{if(this._playing===true&&this._sound!==null)
{this._stop(false);this._paused=true;this._pauseTime=this._viewer.clock.time;this._pendingPlay=false;this._playing=false;if(this._onPause!==null)
{this._onPause.dispatch();}
this._viewer.audio.suspend();}
else if(this._ready===false||this._decoded!==true)
{this._reset();}};FORGE.Sound.prototype.resume=function()
{if(this._viewer.audio.enabled===false||this._enabled===false)
{return;}
if(this._paused===true||this._playing===false||this._resumed===true)
{if(this._sound===null)
{this.play(this._currentTime,this._loop,true);return;}
else
{this._startTime=this._viewer.clock.time-(this._pauseTime-this._startTime);this._currentTime=this._viewer.clock.time-this._startTime;var time=FORGE.Math.round10(this._currentTime / 1000);if(this._viewer.audio.useWebAudio===true&&this._isAmbisonic()===false)
{this._sound=this._context.createBufferSource();this._sound.buffer=this._buffer;if(this._spatialized===true)
{this._applyPanner(true);}
else
{this._sound.connect(this._gainNode);}
var duration=Math.ceil((this._durationMS-this._currentTime)/ 1000);if(typeof this._sound.start==="undefined")
{this._sound.noteGrainOn(0,time%this._duration,duration);}
else
{this._sound.start(0,time%this._duration,duration);}}
else if(this._viewer.audio.useAudioTag===true||this._isAmbisonic()===true)
{this._sound.data.currentTime=time;this._sound.data.play();}}
this._playing=true;this._paused=false;if(this._onResume!==null)
{this._onResume.dispatch();}
this._viewer.audio.resume();}
else if(this._ready===false||this._decoded===false)
{this._reset();this._pendingPlay=true;}};FORGE.Sound.prototype.mute=function()
{if(this._muted===true||this._viewer.audio.enabled===false||this._enabled===false)
{return;}
this._muted=true;this._mutedVolume=this._volume;this._volume=0;if(this._viewer.audio.useWebAudio===true&&this._isAmbisonic()===false)
{this._gainNode.gain.value=this._volume;}
else if((this._viewer.audio.useAudioTag===true||this._isAmbisonic()===true)&&this._sound!==null)
{this._sound.data.volume=this._volume;}
if(this._onMute!==null)
{this._onMute.dispatch();}};FORGE.Sound.prototype.unmute=function()
{if(this._muted===false||this._viewer.audio.enabled===false||this._enabled===false)
{return;}
this._muted=false;this._volume=this._mutedVolume;if(this._viewer.audio.useWebAudio===true&&this._isAmbisonic()===false)
{this._gainNode.gain.value=this._mutedVolume;}
else if((this._viewer.audio.useAudioTag===true||this._isAmbisonic()===true)&&this._sound!==null)
{this._sound.data.volume=this._mutedVolume;}
if(this._onUnmute!==null)
{this._onUnmute.dispatch();}};FORGE.Sound.prototype.destroy=function()
{this.stop();if(this._viewer.audio.useAudioTag===true||this._isAmbisonic()===true)
{this._viewer.audio.onVolumeChange.remove(this._mainVolumeChangeHandler,this);}
this._viewer.audio.onDisable.remove(this._disableSoundHandler,this);this._viewer.audio.remove(this);this._viewer=null;this._soundFile=null;this._sound=null;this._buffer=null;this._context=null;this._inputNode=null;this._gainNode=null;this._panner=null;this._decodeCompleteBind=null;this._decodeErrorBind=null;if(this._onSoundDecode!==null)
{this._onSoundDecode.destroy();this._onSoundDecode=null;}
if(this._onLoadStart!==null)
{this._onLoadStart.destroy();this._onLoadStart=null;}
if(this._onLoadedData!==null)
{this._onLoadedData.destroy();this._onLoadedData=null;}
if(this._onCanPlay!==null)
{this._onCanPlay.destroy();this._onCanPlay=null;}
if(this._onCanPlayThrough!==null)
{this._onCanPlayThrough.destroy();this._onCanPlayThrough=null;}
if(this._onMute!==null)
{this._onMute.destroy();this._onMute=null;}
if(this._onUnmute!==null)
{this._onUnmute.destroy();this._onUnmute=null;}
if(this._onVolumeChange!==null)
{this._onVolumeChange.destroy();this._onVolumeChange=null;}
if(this._onPlay!==null)
{this._onPlay.destroy();this._onPlay=null;}
if(this._onStop!==null)
{this._onStop.destroy();this._onStop=null;}
if(this._onPause!==null)
{this._onPause.destroy();this._onPause=null;}
if(this._onResume!==null)
{this._onResume.destroy();this._onResume=null;}
if(this._onEnded!==null)
{this._onEnded.destroy();this._onEnded=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Sound.prototype,"enabled",{get:function()
{return this._enabled;},set:function(value)
{if(typeof value==="boolean")
{this._enabled=value;if(this._enabled===false&&(this._playing===true||this._paused===true))
{this.stop();}}}});Object.defineProperty(FORGE.Sound.prototype,"currentTime",{get:function()
{return this._currentTime;},set:function(value)
{if(typeof value!=="number")
{return;}
this.pause();this._currentTime=value;if(this._playing===true)
{this.resume();}}});Object.defineProperty(FORGE.Sound.prototype,"spatialized",{get:function()
{return this._spatialized;},set:function(value)
{if(typeof value==="boolean")
{this._spatialized=value;}}});Object.defineProperty(FORGE.Sound.prototype,"ambisonic",{get:function()
{return this._ambisonic;}});Object.defineProperty(FORGE.Sound.prototype,"duration",{get:function()
{return this._duration;}});Object.defineProperty(FORGE.Sound.prototype,"muted",{get:function()
{return(this._muted||this._viewer.audio.mute);},set:function(value)
{if(typeof value==="boolean")
{if(value===true)
{this.mute();}
else
{this.unmute();}}}});Object.defineProperty(FORGE.Sound.prototype,"volume",{get:function()
{return this._volume;},set:function(value)
{if(typeof value!=="number"||isNaN(value)===true)
{return;}
value=FORGE.Math.clamp(value,0,1);if(value===this._volume||this._viewer.audio.enabled===false||this._enabled===false)
{return;}
this._volume=value;if(this._volume>0)
{this._muted=false;}
if(this._viewer.audio.useWebAudio===true&&this._isAmbisonic()===false)
{this._gainNode.gain.value=value;}
else
{this._updateVolume();}
if(this._onVolumeChange!==null)
{this._onVolumeChange.dispatch();}}});Object.defineProperty(FORGE.Sound.prototype,"decoded",{get:function()
{if(this._soundFile===null)
{return false;}
return this._decoded;}});Object.defineProperty(FORGE.Sound.prototype,"playCount",{get:function()
{return this._playCount;}});Object.defineProperty(FORGE.Sound.prototype,"playing",{get:function()
{return this._playing;}});Object.defineProperty(FORGE.Sound.prototype,"ready",{get:function()
{return this._ready;}});Object.defineProperty(FORGE.Sound.prototype,"paused",{get:function()
{return this._paused;}});Object.defineProperty(FORGE.Sound.prototype,"resumed",{get:function()
{return this._resumed;},set:function(value)
{if(typeof value==="boolean")
{this._resumed=value;}}});Object.defineProperty(FORGE.Sound.prototype,"loop",{get:function()
{return this._loop;},set:function(value)
{if(typeof value==="boolean")
{this._loop=value;if((this._viewer.audio.useAudioTag===true||this._isAmbisonic()===true)&&this._sound!==null&&this._duration===Infinity)
{this._sound.data.loop=this._loop;}}}});Object.defineProperty(FORGE.Sound.prototype,"x",{get:function()
{return this._x;},set:function(value)
{if(typeof value==="number")
{this._x=value;if((this._viewer.audio.useWebAudio===true&&this._isAmbisonic()===false)&&this._sound!==null&&this._panner!==null&&this._spatialized===true)
{this._applyPanner();}}}});Object.defineProperty(FORGE.Sound.prototype,"y",{get:function()
{return this._y;},set:function(value)
{if(typeof value==="number")
{this._y=value;if((this._viewer.audio.useWebAudio===true&&this._isAmbisonic()===false)&&this._sound!==null&&this._panner!==null&&this._spatialized===true)
{this._applyPanner();}}}});Object.defineProperty(FORGE.Sound.prototype,"z",{get:function()
{return this._y;},set:function(value)
{if(typeof value==="number")
{this._z=value;if((this._viewer.audio.useWebAudio===true&&this._isAmbisonic()===false)&&this._sound!==null&&this._panner!==null&&this._spatialized===true)
{this._applyPanner();}}}});Object.defineProperty(FORGE.Sound.prototype,"onSoundDecode",{get:function()
{if(this._onSoundDecode===null)
{this._onSoundDecode=new FORGE.EventDispatcher(this);}
return this._onSoundDecode;}});Object.defineProperty(FORGE.Sound.prototype,"onLoadStart",{get:function()
{if(this._onLoadStart===null)
{this._onLoadStart=new FORGE.EventDispatcher(this);}
return this._onLoadStart;}});Object.defineProperty(FORGE.Sound.prototype,"onLoadedData",{get:function()
{if(this._onLoadedData===null)
{this._onLoadedData=new FORGE.EventDispatcher(this);}
return this._onLoadedData;}});Object.defineProperty(FORGE.Sound.prototype,"onCanPlay",{get:function()
{if(this._onCanPlay===null)
{this._onCanPlay=new FORGE.EventDispatcher(this);}
return this._onCanPlay;}});Object.defineProperty(FORGE.Sound.prototype,"onCanPlayThrough",{get:function()
{if(this._onCanPlayThrough===null)
{this._onCanPlayThrough=new FORGE.EventDispatcher(this);}
return this._onCanPlayThrough;}});Object.defineProperty(FORGE.Sound.prototype,"onMute",{get:function()
{if(this._onMute===null)
{this._onMute=new FORGE.EventDispatcher(this);}
return this._onMute;}});Object.defineProperty(FORGE.Sound.prototype,"onUnmute",{get:function()
{if(this._onUnmute===null)
{this._onUnmute=new FORGE.EventDispatcher(this);}
return this._onUnmute;}});Object.defineProperty(FORGE.Sound.prototype,"onVolumeChange",{get:function()
{if(this._onVolumeChange===null)
{this._onVolumeChange=new FORGE.EventDispatcher(this);}
return this._onVolumeChange;}});Object.defineProperty(FORGE.Sound.prototype,"onPlay",{get:function()
{if(this._onPlay===null)
{this._onPlay=new FORGE.EventDispatcher(this);}
return this._onPlay;}});Object.defineProperty(FORGE.Sound.prototype,"onStop",{get:function()
{if(this._onStop===null)
{this._onStop=new FORGE.EventDispatcher(this);}
return this._onStop;}});Object.defineProperty(FORGE.Sound.prototype,"onPause",{get:function()
{if(this._onPause===null)
{this._onPause=new FORGE.EventDispatcher(this);}
return this._onPause;}});Object.defineProperty(FORGE.Sound.prototype,"onResume",{get:function()
{if(this._onResume===null)
{this._onResume=new FORGE.EventDispatcher(this);}
return this._onResume;}});Object.defineProperty(FORGE.Sound.prototype,"onEnded",{get:function()
{if(this._onEnded===null)
{this._onEnded=new FORGE.EventDispatcher(this);}
return this._onEnded;}});FORGE.Playlist=function(viewer,config)
{this._viewer=viewer;this._config=config;this._tracks=null;this._name=null;this._defaultTrack="";this._trackUID="";this._maxVolume=1;this._volume=1;this._autoPlay=true;this._checkAutoPlay=true;this._loop=true;this._onReady=null;this._onPlay=null;this._onStop=null;this._onPause=null;this._onResume=null;this._onEnded=null;FORGE.BaseObject.call(this,"Playlist");this._boot();};FORGE.Playlist.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Playlist.prototype.constructor=FORGE.Playlist;FORGE.Playlist.prototype._boot=function()
{this._uid=this._config.uid;this._register();this._name=new FORGE.LocaleString(this._viewer,this._config.name);this._tracks=[];this._parseConfig(this._config);this._parseTracks(this._config);};FORGE.Playlist.prototype._parseConfig=function(config)
{this._autoPlay=typeof config.autoPlay!=="undefined"?Boolean(config.autoPlay):true;this._loop=typeof config.loop!=="undefined"?Boolean(config.loop):true;this._maxVolume=(typeof config.volume!=="undefined"&&typeof config.volume.max==="number")?FORGE.Math.clamp(config.volume.max,0,1):1;this._volume=(typeof config.volume!=="undefined"&&typeof config.volume.default==="number")?FORGE.Math.clamp(config.volume.default,0,this._maxVolume):FORGE.Math.clamp(1,0,this._maxVolume);};FORGE.Playlist.prototype._parseTracks=function(config)
{if(typeof config.tracks!=="undefined"&&FORGE.Utils.isArrayOf(config.tracks,"string")===true)
{this._tracks=config.tracks;}
else
{this.warn("A playlist has no track in its configuration, or configuration is not valid!");}
if(typeof config.default==="string"&&config.default!=="")
{this._defaultTrack=config.default;}
else if(typeof config.default==="number"&&config.default>=0&&config.default<this._tracks.length)
{this._defaultTrack=this._tracks[config.default].uid;}
else
{this.warn("A playlist has a default track that is not in its tracks array!");}
this._trackUID=this._defaultTrack;if(this._onReady!==null)
{this._onReady.dispatch();}};FORGE.Playlist.prototype._trackEndHandler=function()
{if(this._tracks.length>0)
{var index=this._tracks.indexOf(this._trackUID)+1;if(index===this._tracks.length&&(this._loop===false||this.track.loop===true))
{this._trackUID=this._tracks[0];return;}}
this.nextTrack();};FORGE.Playlist.prototype._notifyPlay=function()
{if(this._onPlay!==null)
{this._onPlay.dispatch();}};FORGE.Playlist.prototype._notifyStop=function()
{if(this._onStop!==null)
{this._onStop.dispatch();}};FORGE.Playlist.prototype._notifyPause=function()
{if(this._onPause!==null)
{this._onPause.dispatch();}};FORGE.Playlist.prototype._notifyResume=function()
{if(this._onResume!==null)
{this._onResume.dispatch();}};FORGE.Playlist.prototype._notifyEnded=function()
{if(this._onEnded!==null)
{this._onEnded.dispatch();}};FORGE.Playlist.prototype.hasTracks=function()
{return this._tracks.length!==0;};FORGE.Playlist.prototype.play=function(track,checkAutoPlay)
{this._checkAutoPlay=typeof checkAutoPlay!=="undefined"?checkAutoPlay:false;var uid;if(typeof track==="string"&&FORGE.UID.isTypeOf(track,"PlaylistTrack"))
{uid=track;}
else if(FORGE.Utils.isTypeOf(track,"PlaylistTrack"))
{uid=track.uid;}
else if(typeof track==="number"&&track>=0&&track<this._tracks.length)
{uid=this._tracks[track];}
else if(this._trackUID!=="")
{uid=this._trackUID;}
else if(typeof track==="undefined"||track==="")
{uid=this._tracks[0];}
if(typeof uid!=="undefined")
{this.stop();this._trackUID=uid;if(this._checkAutoPlay===true&&this._autoPlay===false)
{this.warn("FORGE.Playlist.play(); autoPlay is disabled");return this.track;}
this.track.play();if(this.track.onEnded.has(this._trackEndHandler,this)===false)
{this.track.onEnded.add(this._trackEndHandler,this);}
this.log("FORGE.Playlist.play(); [uid: "+this._trackUID+"]");return this.track;}
return null;};FORGE.Playlist.prototype.stop=function()
{if(this.track!==null)
{this.track.stop();if(typeof this.track.onEnded!=="undefined"&&this.track.onEnded.has(this._trackEndHandler,this)===false)
{this.track.onEnded.remove(this._trackEndHandler,this);}}};FORGE.Playlist.prototype.pause=function()
{if(this.track!==null)
{this.track.pause();}};FORGE.Playlist.prototype.resume=function()
{if(this.track!==null)
{this.track.resume();}};FORGE.Playlist.prototype.nextTrack=function()
{var index=-1;if(this._tracks.length>0)
{index=this._tracks.indexOf(this._trackUID)+1;if(index===this._tracks.length)
{index=0;}}
this.play(index,this._checkAutoPlay);if(this.paused===true)
{this.pause();}};FORGE.Playlist.prototype.previousTrack=function()
{var index=-1;if(this._tracks.length>0)
{index=this._tracks.indexOf(this._trackUID)-1;if(index===-1)
{index=this._tracks.length-1;}}
this.play(index,this._checkAutoPlay);if(this.paused===true)
{this.pause();}};FORGE.Playlist.prototype.destroy=function()
{this.stop();this._viewer=null;this._name.destroy();this._name=null;if(this._tracks.length>0)
{this._tracks.length=0;this._tracks=null;}
this._config=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Playlist.prototype,"tracks",{get:function()
{return this._tracks;}});Object.defineProperty(FORGE.Playlist.prototype,"name",{get:function()
{return this._name.value;}});Object.defineProperty(FORGE.Playlist.prototype,"ready",{get:function()
{if(this.track!==null)
{return this.track.ready;}
return false;}});Object.defineProperty(FORGE.Playlist.prototype,"decoded",{get:function()
{if(this.track!==null)
{return this.track.decoded;}
return false;}});Object.defineProperty(FORGE.Playlist.prototype,"playing",{get:function()
{if(this.track!==null)
{return this.track.playing;}
return false;}});Object.defineProperty(FORGE.Playlist.prototype,"paused",{get:function()
{if(this.track!==null)
{return this.track.paused;}
return false;}});Object.defineProperty(FORGE.Playlist.prototype,"track",{get:function()
{if(FORGE.UID.isTypeOf(this._trackUID,"PlaylistTrack")===true)
{return FORGE.UID.get(this._trackUID,"PlaylistTrack");}
return null;}});Object.defineProperty(FORGE.Playlist.prototype,"loop",{get:function()
{return this._loop;},set:function(value)
{this._loop=Boolean(value);}});Object.defineProperty(FORGE.Playlist.prototype,"autoPlay",{get:function()
{return this._autoPlay;},set:function(value)
{this._autoPlay=Boolean(value);}});Object.defineProperty(FORGE.Playlist.prototype,"volume",{get:function()
{return this._volume;},set:function(value)
{if(typeof value!=="number")
{return;}
value=FORGE.Math.clamp(value,0,1);if(this._maxVolume<value)
{this._volume=this._maxVolume;}
else
{this._volume=value;}
if(FORGE.UID.isTypeOf(this._trackUID,"PlaylistTrack")===true)
{var track=FORGE.UID.get(this._trackUID,"PlaylistTrack");if(track!==null)
{track.volume=this._volume*this._viewer.playlists.volume;}}}});Object.defineProperty(FORGE.Playlist.prototype,"onPlay",{get:function()
{if(this._onPlay===null)
{this._onPlay=new FORGE.EventDispatcher(this);}
return this._onPlay;}});Object.defineProperty(FORGE.Playlist.prototype,"onStop",{get:function()
{if(this._onStop===null)
{this._onStop=new FORGE.EventDispatcher(this);}
return this._onStop;}});Object.defineProperty(FORGE.Playlist.prototype,"onPause",{get:function()
{if(this._onPause===null)
{this._onPause=new FORGE.EventDispatcher(this);}
return this._onPause;}});Object.defineProperty(FORGE.Playlist.prototype,"onResume",{get:function()
{if(this._onResume===null)
{this._onResume=new FORGE.EventDispatcher(this);}
return this._onResume;}});Object.defineProperty(FORGE.Playlist.prototype,"onEnded",{get:function()
{if(this._onEnded===null)
{this._onEnded=new FORGE.EventDispatcher(this);}
return this._onEnded;}});Object.defineProperty(FORGE.Playlist.prototype,"onReady",{get:function()
{if(this._onReady===null)
{this._onReady=new FORGE.EventDispatcher(this);}
return this._onReady;}});FORGE.PlaylistManager=function(viewer)
{this._viewer=viewer;this._config=null;this._playlists=null;this._tracks=null;this._playlistUID="";this._defaultList="";this._maxVolume=1;this._volume=1;this._enabled=true;this._preload=false;this._paused=false;this._onReady=null;this._onPlay=null;this._onStop=null;this._onPause=null;this._onResume=null;this._onEnded=null;FORGE.BaseObject.call(this,"PlaylistManager");};FORGE.PlaylistManager.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.PlaylistManager.prototype.constructor=FORGE.PlaylistManager;FORGE.PlaylistManager.prototype.boot=function()
{this._playlists=[];this._tracks=[];this._viewer.audio.onEnable.add(this._enableSoundHandler,this);this._viewer.story.onSceneLoadStart.add(this._sceneLoadStartHandler,this);};FORGE.PlaylistManager.prototype._enableSoundHandler=function()
{if(this._enabled===true&&this._playlists.length>0&&this.ready===true&&this.decoded===true&&this._paused===false)
{if(this.paused===true)
{this.resume();}
else if(this.playing===false)
{this.play();}}};FORGE.PlaylistManager.prototype._sceneLoadStartHandler=function()
{if(typeof this._viewer.story.scene.config.playlists!=="undefined")
{this._parseSceneConfig(this._viewer.story.scene.config.playlists);}
else
{this._applyConfig(this._config);if(this._paused===false&&this._defaultList!==this._playlistUID)
{if(this._enabled===false||this.ready===false||this.decoded===false||this.playing===true)
{this._stopScenePlaylist();}
this._startScenePlaylist(this._defaultList);}}};FORGE.PlaylistManager.prototype._parseSceneConfig=function(config)
{var extendedConfig=FORGE.Utils.extendMultipleObjects(this._config,config);this._applyConfig(extendedConfig);if(this._paused===false)
{if(this._enabled===false)
{this._stopScenePlaylist();}
else
{if(!this._startScenePlaylist(this._defaultList))
{if(this.playing===true)
{this._stopScenePlaylist();}}}}};FORGE.PlaylistManager.prototype._applyConfig=function(config)
{if(config!==null)
{this._enabled=typeof config.enabled!=="undefined"?Boolean(config.enabled):true;if(typeof config.default!=="undefined")
{if(typeof config.default==="string"&&config.default!=="")
{this._defaultList=config.default;}
else if(typeof config.default==="number"&&config.default>=0&&config.default<this._playlists.length)
{this._defaultList=this._playlists[config.default].uid;}}
this._maxVolume=(typeof config.volume!=="undefined"&&typeof config.volume.max==="number")?FORGE.Math.clamp(config.volume.max,0,1):1;this._volume=(typeof config.volume!=="undefined"&&typeof config.volume.default==="number")?FORGE.Math.clamp(config.volume.default,0,this._maxVolume):FORGE.Math.clamp(1,0,this._maxVolume);}};FORGE.PlaylistManager.prototype.addConfig=function(config)
{this._parseConfig(config);this._initPlaylist();};FORGE.PlaylistManager.prototype._parseConfig=function(config)
{var playlist,track;this._config=config;if(typeof config.lists!=="undefined")
{for(var i=0,ii=config.lists.length;i<ii;i++)
{playlist=new FORGE.Playlist(this._viewer,config.lists[i]);this.add(playlist);}}
if(typeof config.tracks!=="undefined")
{for(var j=0,jj=config.tracks.length;j<jj;j++)
{track=new FORGE.PlaylistTrack(this._viewer,config.tracks[j]);this.addTrack(track);if(this._preload===true)
{this.warn("Preload is not supported yet.");}}}
this._applyConfig(config);if(typeof config.lists!=="undefined"&&config.lists.length>0)
{if(this._defaultList==="")
{this.warn("The playlist manager has a default playlist that is not in its playlists array!");}
this._playlistUID=this._defaultList;}};FORGE.PlaylistManager.prototype._initPlaylist=function()
{if(document[FORGE.Device.visibilityState]!=="visible")
{this._viewer.onResume.addOnce(this._initPlaylist,this);return;}
if(this._playlists.length<=0)
{return;}
var uid;if(typeof this._defaultList==="string"&&this._defaultList!=="")
{uid=this._defaultList;}
else
{uid=this._playlists[0].uid;}
if(FORGE.UID.get(uid)===undefined)
{this.warn("PlaylistManager : uid \""+uid+"\" is not into playlists");}
if(FORGE.UID.isTypeOf(uid,"Playlist")===true)
{this.play(uid,true);}
else
{this.warn("Impossible to play the playlist with uid "+uid+", it doesn't seem to be a playlist!");}};FORGE.PlaylistManager.prototype._startScenePlaylist=function(playlistUID)
{if(playlistUID!==null&&FORGE.UID.isTypeOf(playlistUID,"Playlist")===true)
{if(this.playlist!==null&&this.playlist.uid===playlistUID)
{if(this.playlist.track!==null&&(typeof this.playlist.track.uid!=="undefined"&&this.playlist.track.uid!==""))
{if(this.paused===true)
{this.resume();}
else if(this.playing===false)
{this.play(playlistUID,true);}}
else
{this.stop();this.play(playlistUID,true);}}
else
{this.stop();this.play(playlistUID,true);}
return true;}
return false;};FORGE.PlaylistManager.prototype._stopScenePlaylist=function()
{if(this.playing===true)
{this.pause();}
else
{this.stop();}};FORGE.PlaylistManager.prototype._notifyPlay=function()
{if(this._onPlay!==null)
{this._onPlay.dispatch();}
if(this.playlist!==null)
{FORGE.Playlist.prototype._notifyPlay.call(this.playlist);}};FORGE.PlaylistManager.prototype._notifyStop=function()
{if(this._onStop!==null)
{this._onStop.dispatch();}
if(this.playlist!==null)
{FORGE.Playlist.prototype._notifyStop.call(this.playlist);}};FORGE.PlaylistManager.prototype._notifyPause=function()
{if(this._onPause!==null)
{this._onPause.dispatch();}
if(this.playlist!==null)
{FORGE.Playlist.prototype._notifyPause.call(this.playlist);}};FORGE.PlaylistManager.prototype._notifyResume=function()
{if(this._onResume!==null)
{this._onResume.dispatch();}
if(this.playlist!==null)
{FORGE.Playlist.prototype._notifyResume.call(this.playlist);}};FORGE.PlaylistManager.prototype._notifyEnded=function()
{if(this._onEnded!==null)
{this._onEnded.dispatch();}
if(this.playlist!==null)
{FORGE.Playlist.prototype._notifyEnded.call(this.playlist);}};FORGE.PlaylistManager.prototype.add=function(playlist)
{this._playlists.push(playlist);};FORGE.PlaylistManager.prototype.addTrack=function(track)
{this._tracks.push(track);};FORGE.PlaylistManager.prototype.hasPlaylists=function()
{return this._playlists.length!==0;};FORGE.PlaylistManager.prototype.hasTracks=function()
{return this._tracks.length!==0;};FORGE.PlaylistManager.prototype.play=function(playlist,checkAutoPlay)
{var uid;if(typeof playlist==="string"&&FORGE.UID.isTypeOf(playlist,"Playlist"))
{uid=playlist;}
else if(FORGE.Utils.isTypeOf(playlist,"Playlist"))
{uid=playlist.uid;}
else if(typeof playlist==="number"&&playlist>=0&&playlist<this._playlists.length)
{uid=this._playlists[playlist].uid;}
else if(this._playlistUID!=="")
{uid=this._playlistUID;}
else if(typeof playlist==="undefined"||playlist==="")
{uid=this._playlists[0].uid;}
if(typeof uid!=="undefined")
{if(this.playing===true)
{this.stop();}
this._playlistUID=uid;if(this._enabled===true)
{this._paused=false;this.playlist.play(null,checkAutoPlay);this.log("FORGE.PlaylistManager.play(); [uid: "+this._playlistUID+"]");}}};FORGE.PlaylistManager.prototype.stop=function()
{if(this.playlist!==null)
{this.playlist.stop();}};FORGE.PlaylistManager.prototype.pause=function()
{if(this.playlist!==null&&this.playlist.playing===true)
{this._paused=true;this.playlist.pause();}};FORGE.PlaylistManager.prototype.resume=function()
{if(this.playlist!==null&&this._enabled===true&&this.playlist.paused===true)
{var isPaused=this._paused;this._paused=false;if(isPaused===true&&this._defaultList!==this._playlistUID)
{this._startScenePlaylist(this._defaultList);}
else
{this.playlist.resume();}}};FORGE.PlaylistManager.prototype.nextTrack=function()
{if(this.playlist!==null&&this._enabled===true)
{this.playlist.nextTrack();}};FORGE.PlaylistManager.prototype.previousTrack=function()
{if(this.playlist!==null&&this._enabled===true)
{this.playlist.previousTrack();}};FORGE.PlaylistManager.prototype.destroy=function()
{this.stop();this._viewer.audio.onEnable.remove(this._enableSoundHandler,this);this._viewer.story.onSceneLoadStart.remove(this._sceneLoadStartHandler,this);this._viewer=null;this._config=null;var i=this._playlists.length;while(i--)
{this._playlists[i].destroy();}
this._playlists=null;var j=this._tracks.length;while(j--)
{this._tracks[j].destroy();}
this._tracks=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.PlaylistManager.prototype,"playlists",{get:function()
{return this._playlists;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"tracks",{get:function()
{return this._tracks;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"playlist",{get:function()
{if(FORGE.UID.isTypeOf(this._playlistUID,"Playlist")===true)
{return FORGE.UID.get(this._playlistUID,"Playlist");}
return null;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"loop",{get:function()
{if(this.playlist!==null)
{return this.playlist.loop;}
return true;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"autoPlay",{get:function()
{if(this.playlist!==null)
{return this.playlist.autoPlay;}
return true;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"preload",{get:function()
{return this._preload;},set:function(value)
{this._preload=Boolean(value);}});Object.defineProperty(FORGE.PlaylistManager.prototype,"enabled",{get:function()
{return this._enabled;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"ready",{get:function()
{if(this.playlist!==null)
{return this.playlist.ready;}
return false;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"decoded",{get:function()
{if(this.playlist!==null)
{return this.playlist.decoded;}
return false;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"playing",{get:function()
{if(this.playlist!==null)
{return this.playlist.playing;}
return false;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"paused",{get:function()
{if(this.playlist!==null)
{return this.playlist.paused;}
return false;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"volume",{get:function()
{return this._volume;},set:function(value)
{if(typeof value!=="number")
{return;}
value=FORGE.Math.clamp(value,0,1);if(this._maxVolume<value)
{this._volume=this._maxVolume;}
else
{this._volume=value;}
if(FORGE.UID.isTypeOf(this._playlistUID,"Playlist")===true)
{var playlist=FORGE.UID.get(this._playlistUID,"Playlist");if(playlist!==null)
{var track=playlist.track;if(track!==null)
{track.volume=playlist.volume*this._volume;}}}}});Object.defineProperty(FORGE.PlaylistManager.prototype,"onReady",{get:function()
{if(this._onReady===null)
{this._onReady=new FORGE.EventDispatcher(this);}
return this._onReady;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"onPlay",{get:function()
{if(this._onPlay===null)
{this._onPlay=new FORGE.EventDispatcher(this);}
return this._onPlay;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"onStop",{get:function()
{if(this._onStop===null)
{this._onStop=new FORGE.EventDispatcher(this);}
return this._onStop;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"onPause",{get:function()
{if(this._onPause===null)
{this._onPause=new FORGE.EventDispatcher(this);}
return this._onPause;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"onResume",{get:function()
{if(this._onResume===null)
{this._onResume=new FORGE.EventDispatcher(this);}
return this._onResume;}});Object.defineProperty(FORGE.PlaylistManager.prototype,"onEnded",{get:function()
{if(this._onEnded===null)
{this._onEnded=new FORGE.EventDispatcher(this);}
return this._onEnded;}});FORGE.PlaylistTrack=function(viewer,config)
{this._viewer=viewer;this._config=config;this._name=null;this._author=null;this._url="";this._loop=false;this._sound=null;FORGE.BaseObject.call(this,"PlaylistTrack");this._boot();};FORGE.PlaylistTrack.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.PlaylistTrack.prototype.constructor=FORGE.PlaylistTrack;FORGE.PlaylistTrack.prototype._boot=function()
{this._uid=this._config.uid;this._register();this._parseConfig(this._config);};FORGE.PlaylistTrack.prototype._parseConfig=function(config)
{this._unregister();this._uid=config.uid;this._register();this._name=new FORGE.LocaleString(this._viewer,config.name);this._author=new FORGE.LocaleString(this._viewer,config.author);this._url=config.url;this._loop=config.loop||false;};FORGE.PlaylistTrack.prototype._bindEvents=function()
{this._sound.onPlay.add(this._onPlayHandler,this);this._sound.onStop.add(this._onStopHandler,this);this._sound.onPause.add(this._onPauseHandler,this);this._sound.onResume.add(this._onResumeHandler,this);this._sound.onEnded.add(this._onEndedHandler,this);};FORGE.PlaylistTrack.prototype._unbindEvents=function()
{this._sound.onPlay.remove(this._onPlayHandler,this);this._sound.onStop.remove(this._onStopHandler,this);this._sound.onPause.remove(this._onPauseHandler,this);this._sound.onResume.remove(this._onResumeHandler,this);this._sound.onEnded.remove(this._onEndedHandler,this);};FORGE.PlaylistTrack.prototype._onPlayHandler=function()
{FORGE.PlaylistManager.prototype._notifyPlay.call(this._viewer.playlists);};FORGE.PlaylistTrack.prototype._onStopHandler=function()
{FORGE.PlaylistManager.prototype._notifyStop.call(this._viewer.playlists);};FORGE.PlaylistTrack.prototype._onPauseHandler=function()
{FORGE.PlaylistManager.prototype._notifyPause.call(this._viewer.playlists);};FORGE.PlaylistTrack.prototype._onResumeHandler=function()
{FORGE.PlaylistManager.prototype._notifyResume.call(this._viewer.playlists);};FORGE.PlaylistTrack.prototype._onEndedHandler=function()
{FORGE.PlaylistManager.prototype._notifyEnded.call(this._viewer.playlists);};FORGE.PlaylistTrack.prototype.play=function()
{if(this._sound===null)
{this._sound=new FORGE.Sound(this._viewer,this._uid+"-sound",this._url);this._sound.volume=this._viewer.playlists.volume*this._viewer.playlists.playlist.volume;if(this._loop===true)
{this._sound.loop=this._loop;}
this._bindEvents();}
this._sound.play();};FORGE.PlaylistTrack.prototype.stop=function()
{if(this._sound!==null)
{this._sound.stop(true);}};FORGE.PlaylistTrack.prototype.pause=function()
{if(this._sound!==null)
{this._sound.pause();}};FORGE.PlaylistTrack.prototype.resume=function()
{if(this._sound!==null)
{this._sound.resume();}};FORGE.PlaylistTrack.prototype.destroy=function()
{this._viewer=null;this._config=null;this._name.destroy();this._name=null;this._author.destroy();this._author=null;if(this._sound!==null)
{this._unbindEvents();this._sound.destroy();this._sound=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.PlaylistTrack.prototype,"name",{get:function()
{return this._name.value;}});Object.defineProperty(FORGE.PlaylistTrack.prototype,"author",{get:function()
{return this._author.value;}});Object.defineProperty(FORGE.PlaylistTrack.prototype,"currentTime",{get:function()
{if(this._sound!==null)
{return this._sound.currentTime;}
return 0;},set:function(value)
{if(this._sound===null)
{return;}
this._sound.currentTime=value;}});Object.defineProperty(FORGE.PlaylistTrack.prototype,"volume",{get:function()
{if(this._sound!==null)
{return this._sound.volume;}
return false;},set:function(value)
{if(this._sound===null)
{return false;}
this._sound.volume=value;}});Object.defineProperty(FORGE.PlaylistTrack.prototype,"ready",{get:function()
{if(this._sound!==null)
{return this._sound.ready;}
return false;}});Object.defineProperty(FORGE.PlaylistTrack.prototype,"decoded",{get:function()
{if(this._sound!==null)
{return this._sound.decoded;}
return false;}});Object.defineProperty(FORGE.PlaylistTrack.prototype,"playing",{get:function()
{if(this._sound!==null)
{return this._sound.playing;}
return false;}});Object.defineProperty(FORGE.PlaylistTrack.prototype,"paused",{get:function()
{if(this._sound!==null)
{return this._sound.paused;}
return false;}});Object.defineProperty(FORGE.PlaylistTrack.prototype,"loop",{get:function()
{return this._loop;},set:function(value)
{this._loop=Boolean(value);}});Object.defineProperty(FORGE.PlaylistTrack.prototype,"onPlay",{get:function()
{if(this._sound!==null)
{return this._sound.onPlay;}
return;}});Object.defineProperty(FORGE.PlaylistTrack.prototype,"onStop",{get:function()
{if(this._sound!==null)
{return this._sound.onStop;}
return;}});Object.defineProperty(FORGE.PlaylistTrack.prototype,"onPause",{get:function()
{if(this._sound!==null)
{return this._sound.onPause;}
return;}});Object.defineProperty(FORGE.PlaylistTrack.prototype,"onResume",{get:function()
{if(this._sound!==null)
{return this._sound.onResume;}
return;}});Object.defineProperty(FORGE.PlaylistTrack.prototype,"onEnded",{get:function()
{if(this._sound!==null)
{return this._sound.onEnded;}
return;}});FORGE.Director=function(viewer)
{this._viewer=viewer;this._track=null;this._tracks=null;this._loop=false;this._random=false;this._stoppable=false;this._idleTime=-1;this._idleTimer=null;this._idleEvent=null;this._onVisibilityChangeBind=null;FORGE.BaseObject.call(this,"Director");this._boot();};FORGE.Director.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Director.prototype.constructor=FORGE.Director;FORGE.Director.prototype._boot=function()
{this._idleTimer=this._viewer.clock.create(false);this._viewer.story.onSceneLoadComplete.add(this._sceneLoadCompleteHandler,this);this._viewer.onReady.add(this._onViewerReady,this);this._onVisibilityChangeBind=this._onVisibilityChange.bind(this);};FORGE.Director.prototype.load=function(config)
{if(config.tracks!==null&&Array.isArray(config.tracks))
{for(var i=0,ii=config.tracks.length;i<ii;i++)
{new FORGE.DirectorTrack(config.tracks[i]);}}};FORGE.Director.prototype._onViewerReady=function()
{this._viewer.controllers.onControlStart.add(this._controlStartHandler,this);this._viewer.controllers.onControlEnd.add(this._controlEndHandler,this);};FORGE.Director.prototype._sceneLoadCompleteHandler=function()
{var scene=this._viewer.story.scene;this.stop();this._clearEvents();this._track=null;this._tracks=[];if(typeof scene.config.director!=="undefined")
{var animation=scene.config.director.animation;if(typeof animation==="undefined"||animation===null||animation.enabled===false)
{return;}
this._loop=(typeof animation.loop==="boolean")?animation.loop:false;this._random=(typeof animation.random==="boolean")?animation.random:false;this._stoppable=(typeof animation.stoppable==="boolean")?animation.stoppable:false;this._idleTime=(typeof animation.idleTime==="number")?animation.idleTime:0;if(animation.tracks!==null&&FORGE.Utils.isArrayOf(animation.tracks,"string"))
{this._tracks=(this._random===true)?FORGE.Utils.randomize(animation.tracks):animation.tracks;}
this._viewer.camera.animation.onComplete.add(this._onTrackCompleteHandler,this);if(this._viewer.story.scene.media.type===FORGE.MediaType.VIDEO)
{this._viewer.story.scene.media.displayObject.onPause.add(this._pauseHandler,this);this._viewer.story.scene.media.displayObject.onWaiting.add(this._waitingHandler,this);this._viewer.story.scene.media.displayObject.onStalled.add(this._waitingHandler,this);this._viewer.story.scene.media.displayObject.onSeeking.add(this._waitingHandler,this);this._viewer.story.scene.media.displayObject.onEnded.add(this._endedHandler,this);this._viewer.story.scene.media.displayObject.onCurrentTimeChange.add(this._synchronizeWithVideo,this);document.addEventListener(FORGE.Device.visibilityChange,this._onVisibilityChangeBind);}
if(typeof animation.delay==="number")
{this._idleEvent=this._idleTimer.add(animation.delay,this._idleTimerCompleteHandler,this);this._idleTimer.start();}}};FORGE.Director.prototype._pauseHandler=function()
{this.stop();if(this._viewer.story.scene.media.type===FORGE.MediaType.VIDEO)
{this._viewer.story.scene.media.displayObject.onPause.remove(this._pauseHandler,this);this._viewer.story.scene.media.displayObject.onPlay.add(this._playHandler,this);}
this._viewer.controllers.onControlStart.remove(this._controlStartHandler,this);this._viewer.controllers.onControlEnd.remove(this._controlEndHandler,this);};FORGE.Director.prototype._playHandler=function()
{if(this._track!==null)
{this.play(this._track);if(this._viewer.story.scene.media.type===FORGE.MediaType.VIDEO)
{this._synchronizeWithVideo();}}
if(this._viewer.story.scene.media.type===FORGE.MediaType.VIDEO)
{this._viewer.story.scene.media.displayObject.onPause.add(this._pauseHandler,this);this._viewer.story.scene.media.displayObject.onPlay.remove(this._playHandler,this);}
this._viewer.controllers.onControlStart.add(this._controlStartHandler,this);this._viewer.controllers.onControlEnd.add(this._controlEndHandler,this);};FORGE.Director.prototype._waitingHandler=function()
{this.stop();if(this._viewer.story.scene.media.type===FORGE.MediaType.VIDEO)
{this._viewer.story.scene.media.displayObject.onWaiting.remove(this._waitingHandler,this);this._viewer.story.scene.media.displayObject.onStalled.remove(this._waitingHandler,this);this._viewer.story.scene.media.displayObject.onSeeking.remove(this._waitingHandler,this);this._viewer.story.scene.media.displayObject.onPlaying.add(this._playingHandler,this);this._viewer.story.scene.media.displayObject.onSeeked.add(this._playingHandler,this);}
this._viewer.controllers.onControlStart.remove(this._controlStartHandler,this);this._viewer.controllers.onControlEnd.remove(this._controlEndHandler,this);};FORGE.Director.prototype._playingHandler=function()
{if(this._track!==null)
{this.play(this._track);if(this._viewer.story.scene.media.type===FORGE.MediaType.VIDEO)
{this._synchronizeWithVideo();}}
if(this._viewer.story.scene.media.type===FORGE.MediaType.VIDEO)
{this._viewer.story.scene.media.displayObject.onPlaying.remove(this._playingHandler,this);this._viewer.story.scene.media.displayObject.onSeeked.remove(this._playingHandler,this);this._viewer.story.scene.media.displayObject.onWaiting.add(this._waitingHandler,this);this._viewer.story.scene.media.displayObject.onStalled.add(this._waitingHandler,this);this._viewer.story.scene.media.displayObject.onSeeking.add(this._waitingHandler,this);}
this._viewer.controllers.onControlStart.add(this._controlStartHandler,this);this._viewer.controllers.onControlEnd.add(this._controlEndHandler,this);};FORGE.Director.prototype._endedHandler=function()
{if(this._viewer.story.scene.media.type===FORGE.MediaType.VIDEO&&this._viewer.story.scene.media.displayObject.loop===true)
{this._sceneLoadCompleteHandler();}};FORGE.Director.prototype._controlStartHandler=function()
{if(this._track!==null&&this._stoppable===true)
{this.stop();}
this._idleTimer.stop(true);};FORGE.Director.prototype._controlEndHandler=function()
{if(this._idleEvent!==null)
{this._idleTimer.remove(this._idleEvent);}
if(this._track!==null&&this._stoppable===true)
{if(this._track===null&&typeof this._viewer.story.scene.config.director.animation.delay==="number")
{this._idleEvent=this._idleTimer.add(this._viewer.story.scene.config.director.animation.delay,this._idleTimerCompleteHandler,this);this._idleTimer.start();}
else if(typeof this._idleTime==="number"&&this._idleTime>-1)
{this._idleEvent=this._idleTimer.add(this._idleTime,this._idleTimerCompleteHandler,this);this._idleTimer.start();}}};FORGE.Director.prototype._onTrackCompleteHandler=function()
{if(this._tracks.length>1)
{var idx=this._tracks.indexOf((this._track))+1;if(idx<this._tracks.length)
{this.play(idx);return;}}
if(this._loop===true)
{if(this._random===true)
{this._tracks=FORGE.Utils.randomize(this._tracks);}
this.play(0);return;}};FORGE.Director.prototype._idleTimerCompleteHandler=function()
{this.play(this._track);this._idleTimer.stop(true);};FORGE.Director.prototype._onVisibilityChange=function()
{if(document[FORGE.Device.visibilityState]!=="hidden"&&this._viewer.story.scene.media.type===FORGE.MediaType.VIDEO)
{this._viewer.story.scene.media.displayObject.onCurrentTimeChange.dispatch(this._viewer.story.scene.media.displayObject.currentTime);}};FORGE.Director.prototype._synchronizeWithVideo=function(time)
{this.stop();this._track=null;if(typeof time==="number")
{time=time*1000;}
else if(typeof time==="object"&&typeof time.data==="number")
{time=time.data*1000;}
else if(this._viewer.story.scene.media.type===FORGE.MediaType.VIDEO)
{time=this._viewer.story.scene.media.displayObject.currentTimeMS;}
else
{time=0;}
var offset=0;var trackA,trackB;trackB=FORGE.UID.get(this._tracks[0]);if(trackB.duration>time)
{this._track=trackB.uid;}
else
{for(var i=1,ii=this._tracks.length-1;i<ii;i++)
{trackA=trackB;trackB=FORGE.UID.get(this._tracks[i]);if(trackA.duration+offset<time&&trackB.duration+trackA.duration+offset>time)
{this._track=trackB.uid;offset+=trackA.duration;break;}
offset+=trackA.duration;}}
if(this._track===null)
{var point=trackB.keyframes[trackB.keyframes.length-1].data;this._viewer.camera.lookAt(point.yaw,point.pitch,point.roll,point.fov);}
else
{this._viewer.camera.animation.play(this._track,time);}};FORGE.Director.prototype.play=function(track)
{this.stop();this._track=null;if(typeof track==="number")
{this._track=this._tracks[track];}
else if(typeof track==="string")
{this._track=track;}
else
{this._track=this._tracks[0];}
this._viewer.camera.animation.play(this._track);};FORGE.Director.prototype.stop=function()
{this.log("stopping");this._viewer.camera.animation.stop();};FORGE.Director.prototype._clearEvents=function()
{this._viewer.camera.animation.onComplete.remove(this._onTrackCompleteHandler,this);if(this._viewer.story.scene!==null&&this._viewer.story.scene.media.type===FORGE.MediaType.VIDEO)
{this._viewer.story.scene.media.displayObject.onPlay.remove(this._playHandler,this);this._viewer.story.scene.media.displayObject.onPause.remove(this._pauseHandler,this);this._viewer.story.scene.media.displayObject.onWaiting.remove(this._waitingHandler,this);this._viewer.story.scene.media.displayObject.onStalled.remove(this._waitingHandler,this);this._viewer.story.scene.media.displayObject.onPlaying.remove(this._playingHandler,this);this._viewer.story.scene.media.displayObject.onEnded.remove(this._endedHandler,this);this._viewer.story.scene.media.displayObject.onCurrentTimeChange.remove(this._synchronizeWithVideo,this);document.removeEventListener(FORGE.Device.visibilityChange,this._onVisibilityChangeBind);}};FORGE.Director.prototype.destroy=function()
{this._clearEvents();this._viewer.onReady.remove(this._onViewerReady,this);this._viewer=null;this._tracks=null;this._track=null;FORGE.BaseObject.prototype.destroy.call(this);};FORGE.DirectorTrack=function(config)
{this._smooth=false;this._cancelRoll=false;FORGE.Track.call(this,"DirectorTrack");this._boot(config);};FORGE.DirectorTrack.prototype=Object.create(FORGE.Track.prototype);FORGE.DirectorTrack.prototype.constructor=FORGE.DirectorTrack;FORGE.DirectorTrack.prototype._boot=function(config)
{this._smooth=config.smooth;this._cancelRoll=config.cancelRoll;FORGE.Track.prototype._boot.call(this,config);};Object.defineProperty(FORGE.DirectorTrack.prototype,"smooth",{get:function()
{return this._smooth;}});Object.defineProperty(FORGE.DirectorTrack.prototype,"cancelRoll",{get:function()
{return this._cancelRoll;}});FORGE.ActionEventDispatcher=function(viewer,name)
{this._viewer=viewer;this._name=name;this._actions=[];this._dispatching=false;this._pendingDestroy=false;FORGE.BaseObject.call(this,"ActionEventDispatcher");};FORGE.ActionEventDispatcher.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.ActionEventDispatcher.prototype.constructor=FORGE.ActionEventDispatcher;FORGE.ActionEventDispatcher.prototype.addActions=function(actions)
{if(FORGE.Utils.isArrayOf(actions,"string")===true||FORGE.Utils.isTypeOf(actions,"string"))
{this._actions=this._actions.concat(actions);}};FORGE.ActionEventDispatcher.prototype.dispatch=function()
{this._dispatching=true;for(var i=0,ii=this._actions.length;i<ii;i++)
{var action=this._viewer.actions.get(this._actions[i]);if(typeof action!=="undefined"&&action!==null)
{action.execute();}}
this._dispatching=false;if(this._pendingDestroy===true)
{this.destroy();}};FORGE.ActionEventDispatcher.prototype.destroy=function()
{if(this._dispatching===true)
{this._pendingDestroy=true;return;}
this._viewer=null;FORGE.BaseObject.prototype.destroy.call(this);};FORGE.Action=function(viewer,config)
{this._viewer=viewer;this._config=config;this._target="";this._method=null;this._property=null;this._count=0;FORGE.BaseObject.call(this,"Action");this._boot();};FORGE.Action.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Action.prototype.constructor=FORGE.Action;FORGE.Action.operation={};FORGE.Action.operation.SET="set";FORGE.Action.operation.ADD="add";FORGE.Action.operation.SUBSTRACT="substract";FORGE.Action.operation.MULTIPLY="multiply";FORGE.Action.operation.DIVIDE="divide";FORGE.Action.operation.TOGGLE="toggle";FORGE.Action.prototype._boot=function()
{this._parseConfig(this._config);this._register();};FORGE.Action.prototype._parseConfig=function(config)
{this._uid=config.uid;this._target=config.target;this._method=(typeof config.method!=="undefined")?config.method:null;this._property=(typeof config.property!=="undefined")?config.property:null;};FORGE.Action.prototype._parseTarget=function(target)
{var result=null;if(typeof target==="undefined")
{result=window;}
else
{var targetUid=target;var path=target;if(typeof target==="object")
{if(typeof target.identifier==="string")
{targetUid=target.identifier;}
if(typeof target.accessor==="string")
{path=target.accessor;}}
var targetByUid=FORGE.UID.get(targetUid);if(typeof targetByUid!=="undefined"&&targetByUid!==null)
{if(FORGE.Utils.isTypeOf(targetByUid,"Plugin"))
{result=targetByUid.instance;}
else
{result=targetByUid;}}
path=path.split(".");var i=0;if(path[0].toLowerCase()==="viewer"&&result===null)
{result=this._viewer;i=1;}
else if(result===null)
{result=window;}
for(var ii=path.length;i<ii;i++)
{if(typeof result[path[i]]==="object")
{result=result[path[i]];}}}
if(result===null)
{this.warn("The target of the action "+this._uid+" is invalid.");}
return result;};FORGE.Action.prototype._applyProperty=function(target,property)
{if(typeof target[property.name]!=="undefined")
{if(typeof property.operation==="undefined")
{property.operation=FORGE.Action.operation.SET;}
switch(property.operation)
{case FORGE.Action.operation.SET:target[property.name]=property.value;break;case FORGE.Action.operation.ADD:target[property.name]+=property.value;break;case FORGE.Action.operation.SUBSTRACT:target[property.name]-=(property.value);break;case FORGE.Action.operation.MULTIPLY:target[property.name]*=(property.value);break;case FORGE.Action.operation.DIVIDE:target[property.name]/=(property.value);break;case FORGE.Action.operation.TOGGLE:target[property.name]=!target[property.name];break;}}};FORGE.Action.prototype._applyMethod=function(target,method)
{if(typeof target[method.name]==="function")
{var args=(typeof method.args!=="undefined")?method.args:null;if(!Array.isArray(args))
{args=[args];}
target[method.name].apply(target,args);}};FORGE.Action.prototype.execute=function()
{var target=this._parseTarget(this._target);if(target!==null)
{if(this._property!==null)
{this._applyProperty(target,this._property);}
if(this._method!==null)
{this._applyMethod(target,this._method);}}};FORGE.Action.prototype.destroy=function()
{this._viewer=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Action.prototype,"target",{get:function()
{return this._parseTarget(this._target);}});Object.defineProperty(FORGE.Action.prototype,"count",{get:function()
{return this._count;}});FORGE.ActionManager=function(viewer)
{this._viewer=viewer;this._config=null;this._actions=[];this._onReady=null;FORGE.BaseObject.call(this,"ActionManager");};FORGE.ActionManager.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.ActionManager.prototype.constructor=FORGE.ActionManager;FORGE.ActionManager.prototype._parseConfig=function(config)
{var action;if(Array.isArray(config)===true)
{for(var i=0,ii=config.length;i<ii;i++)
{action=new FORGE.Action(this._viewer,config[i]);this._actions.push(action);}}
else
{action=new FORGE.Action(this._viewer,(config));this._actions.push(action);}};FORGE.ActionManager.prototype.get=function(uid)
{return FORGE.UID.get(uid,"Action");};FORGE.ActionManager.prototype.addConfig=function(config)
{this._parseConfig(config);};FORGE.ActionManager.prototype.destroy=function()
{if(FORGE.Utils.isArrayOf(this._actions,"Action"))
{while(this._actions.length>0)
{var a=this._actions.pop();a.destroy();a=null;}}};FORGE.Plugin=function(viewer,engine,config,index)
{this._viewer=viewer;this._engine=engine;this._instanceConfig=config;this._contextualConfig=null;this._config=null;this._index=index;this._options=null;this._actions=null;this._events=null;this._instance=null;this._instanceReady=false;this._parent=null;this._container=null;this._create=null;this._scenes=null;this._persistentData=null;this._keep=true;this._reset=true;this._onInstanceCreate=null;this._onInstanceReady=null;FORGE.BaseObject.call(this,"Plugin");this._boot();};FORGE.Plugin.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Plugin.prototype.constructor=FORGE.Plugin;FORGE.Plugin.prototype._boot=function()
{this._uid=this._instanceConfig.uid;this._tags=this._instanceConfig.tags;this._register();this._persistentData={};};FORGE.Plugin.prototype._parseConfig=function(config)
{if(typeof config.parent==="string")
{this._parent=config.parent;}
this._keep=(typeof config.keep==="boolean")?config.keep:true;this._reset=(typeof config.reset==="boolean")?config.reset:true;if(this._scenes===null&&FORGE.Utils.isArrayOf(config.scenes,"string")===true)
{this._scenes=config.scenes;}
this._mergeConfigurations();};FORGE.Plugin.prototype._mergeConfigurations=function()
{this._config=(FORGE.Utils.extendMultipleObjects(this._engine.defaultConfig,this._instanceConfig,this._contextualConfig));this._options=this._config.options||{};this._data=this._config.data||{};this._actions=this._config.actions||{};this._clearEvents();this._createEvents(this._config.events);};FORGE.Plugin.prototype._createEvents=function(events)
{this._events={};var event;for(var e in events)
{event=new FORGE.ActionEventDispatcher(this._viewer,e);event.addActions(events[e]);this._events[e]=event;}};FORGE.Plugin.prototype._clearEvents=function()
{for(var e in this._events)
{this._events[e].destroy();this._events[e]=null;}};FORGE.Plugin.prototype.instantiate=function()
{if(this._engine.loaded===true)
{this._instantiatePlugin();}
else
{this._engine.onLoadComplete.addOnce(this._engineLoadComplete,this);}};FORGE.Plugin.prototype._engineLoadComplete=function()
{this._instantiatePlugin();};FORGE.Plugin.prototype._instantiatePlugin=function()
{this.log("Plugin._instantiatePlugin(); "+this._uid);this._parseConfig(this._instanceConfig);this._instance=this._engine.getNewInstance(this._viewer,this);this._instance.boot.call(this._instance);if(this._onInstanceCreate!==null)
{this._onInstanceCreate.dispatch();}};FORGE.Plugin.prototype.notifyInstanceReady=function()
{this._instanceReady=true;if(this._onInstanceReady!==null)
{this._onInstanceReady.dispatch();}};FORGE.Plugin.prototype.update=function()
{if(this._instance!==null&&typeof this._instance.update==="function")
{this._instance.update.call(this._instance);}};FORGE.Plugin.prototype.resetInstance=function()
{this._mergeConfigurations();if(this._instance!==null)
{if(typeof this._instance.reset==="function")
{this._instance.reset.call(this._instance);}
else
{this.log("There is no reset function on plugin "+this._engine.uid);}}};FORGE.Plugin.prototype.destroy=function()
{if(this._alive===false)
{return;}
if(this._instance!==null)
{this._instance.viewer=null;this._instance.plugin=null;this._instance.destroy();this._instance=null;}
if(this._create!==null)
{this._create.destroy();this._create=null;}
if(this._container!==null)
{this._container.destroy();this._container=null;}
if(this._onInstanceCreate!==null)
{this._onInstanceCreate.destroy();this._onInstanceCreate=null;}
if(this._onInstanceReady!==null)
{this._onInstanceReady.destroy();this._onInstanceReady=null;}
this._clearEvents();this._events=null;this._viewer=null;this._persistentData=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Plugin.prototype,"fullUrl",{get:function()
{return this._engine.fullUrl;}});Object.defineProperty(FORGE.Plugin.prototype,"options",{get:function()
{return this._options;}});Object.defineProperty(FORGE.Plugin.prototype,"actions",{get:function()
{return this._actions;}});Object.defineProperty(FORGE.Plugin.prototype,"events",{get:function()
{return this._events;}});Object.defineProperty(FORGE.Plugin.prototype,"scenes",{get:function()
{return this._scenes;}});Object.defineProperty(FORGE.Plugin.prototype,"persistentData",{get:function()
{return this._persistentData;},set:function(value)
{this._persistentData=value;}});Object.defineProperty(FORGE.Plugin.prototype,"instance",{get:function()
{return this._instance;}});Object.defineProperty(FORGE.Plugin.prototype,"instanceReady",{get:function()
{return this._instanceReady;}});Object.defineProperty(FORGE.Plugin.prototype,"container",{get:function()
{if(this._container===null)
{if(typeof this._parent==="string"&&this._parent!=="")
{this._parent=document.getElementById(this._parent);if(typeof this._parent==="undefined"||this._parent===null||FORGE.Dom.isHtmlElement(this._parent)===false)
{throw"FORGE.Plugin.boot : Plugin parent is invalid";}
this._container=new FORGE.DisplayObjectContainer(this._viewer,null,null,this._parent);}
else
{this._container=new FORGE.DisplayObjectContainer(this._viewer);this._viewer.pluginContainer.addChild(this._container);this._container.maximize(true);}
this._container.id=this._uid;this._container.index=this._index;}
return this._container;}});Object.defineProperty(FORGE.Plugin.prototype,"create",{get:function()
{if(this._create===null)
{this._create=new FORGE.PluginObjectFactory(this._viewer,this);}
return this._create;}});Object.defineProperty(FORGE.Plugin.prototype,"keep",{get:function()
{return this._keep;}});Object.defineProperty(FORGE.Plugin.prototype,"reset",{get:function()
{return this._reset;}});Object.defineProperty(FORGE.Plugin.prototype,"contextualConfig",{get:function()
{return this._contextualConfig;},set:function(value)
{this._contextualConfig=value;}});Object.defineProperty(FORGE.Plugin.prototype,"instanceConfig",{get:function()
{return this._instanceConfig;}});Object.defineProperty(FORGE.Plugin.prototype,"config",{get:function()
{return this._config;}});Object.defineProperty(FORGE.Plugin.prototype,"onInstanceCreate",{get:function()
{if(this._onInstanceCreate===null)
{this._onInstanceCreate=new FORGE.EventDispatcher(this,true);}
return this._onInstanceCreate;}});Object.defineProperty(FORGE.Plugin.prototype,"onInstanceReady",{get:function()
{if(this._onInstanceReady===null)
{this._onInstanceReady=new FORGE.EventDispatcher(this,true);}
return this._onInstanceReady;}});FORGE.PluginEngine=function(viewer)
{FORGE.BaseObject.call(this,"PluginEngine");this._viewer=viewer;this._config=null;this._prefix="";this._url="";this._manifest="";this._fullUrl="";this._manifestData=null;this._name="";this._version="";this._sources=null;this._constructorName="";this._constructorFunction=null;this._i18n=null;this._options=null;this._events=null;this._actions=null;this._sourcesLoadedCount=0;this._instancesCount=0;this._loaded=false;this._onLoadComplete=null;};FORGE.PluginEngine.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.PluginEngine.prototype.constructor=FORGE.PluginEngine;FORGE.PluginEngine._REQUIRED=["boot","destroy"];FORGE.PluginEngine._RESERVED=["viewer","plugin"];FORGE.PluginEngine.prototype.load=function(config)
{if(typeof config!=="undefined")
{this._config=config;this._parseConfig(this._config);var manifestUrl=this._fullUrl+this._manifest;this._loadManifest(manifestUrl);return true;}
return false;};FORGE.PluginEngine.prototype.getNewInstance=function(viewer,plugin)
{var instance=(new this._constructorFunction());if(this._validateInstance(instance))
{instance._viewer=viewer;instance._plugin=plugin;this._instancesCount++;return instance;}
return null;};FORGE.PluginEngine.prototype._parseConfig=function(config)
{if(typeof config.uid==="undefined")
{throw"Can't load a plugin engine, missing id in config";}
this._uid=config.uid;this._register();this._prefix=(typeof config.prefix==="string")?config.prefix:this._viewer.plugins.prefix;if(typeof config.url==="undefined")
{throw"Can't load a plugin engine, missing url in config";}
this._url=config.url;this._fullUrl=this._prefix+this._url;this._manifest=(typeof config.manifest==="string")?config.manifest:"manifest.json";};FORGE.PluginEngine.prototype._loadManifest=function(url)
{this._viewer.load.json(this._uid,url,this._manifestLoadComplete,this);};FORGE.PluginEngine.prototype._manifestLoadComplete=function(file)
{var json=this._viewer.cache.get(FORGE.Cache.types.JSON,file.key);this._manifestData=(json.data);this._parseManifest(this._manifestData);this.log("FORGE.Plugin._manifestLoadComplete();");};FORGE.PluginEngine.prototype._manifestLoadError=function(file)
{throw"Can't load the plugin engine manifest "+file.url;};FORGE.PluginEngine.prototype._parseManifest=function(manifest)
{if(this._uid!==manifest.uid)
{throw"Plugin Engine UID doesn't match with manifest UID";}
if(this._versionCheck(manifest.viewer)===false)
{this.warn("Version compatibility check for plugin "+manifest.uid+" failed!");this.warn(manifest.viewer);return;}
if(FORGE.Device.check(manifest.device)===false)
{this.warn("Device compatibility check for plugin "+manifest.uid+" failed!");this.warn(manifest.device);return;}
if(typeof manifest.options!=="undefined")
{this._options=manifest.options;}
if(typeof manifest.data!=="undefined")
{this._data=manifest.data;}
if(typeof manifest.actions!=="undefined")
{this._actions=manifest.actions;}
if(typeof manifest.events!=="undefined")
{this._events=manifest.events;}
this._name=manifest.name;this._version=manifest.version;this._sources=manifest.sources;this._constructorName=manifest.constructor;this._i18n=this._parseLocales(manifest);this._loadSources(this._sources);};FORGE.PluginEngine.prototype._versionCheck=function(config)
{var min="0.0.0";var max="9.9.9";if(typeof config!=="undefined")
{if(typeof config.min!=="undefined")
{min=config.min;}
if(typeof config.max!=="undefined")
{max=config.max;}}
var viewerVersion=FORGE.VERSION.split(".");var minVersion=min.split(".");var maxVersion=max.split(".");var maxLength=Math.max(viewerVersion.length,minVersion.length,maxVersion.length);var viewerN=0;var minN=0;var maxN=0;var inc=1;for(var i=maxLength-1;i>=0;i--)
{if(typeof viewerVersion[i]!=="undefined")
{viewerN+=parseInt(viewerVersion[i],10)*inc;}
if(typeof minVersion[i]!=="undefined")
{minN+=parseInt(minVersion[i],10)*inc;}
if(typeof maxVersion[i]!=="undefined")
{maxN+=parseInt(maxVersion[i],10)*inc;}
inc*=10;}
if(viewerN<minN||viewerN>maxN)
{return false;}
return true;};FORGE.PluginEngine.prototype._loadSources=function(sources)
{var sourceUrl;for(var i=0,ii=sources.length;i<ii;i++)
{if(String(sources[i]).substring(0,7)==="http://"||String(sources[i]).substring(0,8)==="https://")
{sourceUrl=sources[i];}
else
{sourceUrl=this._fullUrl+sources[i];}
this._loadSource(sourceUrl);}};FORGE.PluginEngine.prototype._loadSource=function(url)
{var parsedURL=FORGE.URL.parse(url);if(parsedURL.extension==="css")
{this._viewer.load.css(url,this._loadSourceComplete,this);}
else
{this._viewer.load.script(url,this._loadSourceComplete,this);}};FORGE.PluginEngine.prototype._loadSourceComplete=function()
{this._sourcesLoadedCount++;if(this._sourcesLoadedCount===this._sources.length)
{this._constructorFunction=this._parseConstructor(this._constructorName);if(this._validateEngine()===true)
{this._addLocales(this._i18n);this._loaded=true;if(this._onLoadComplete!==null)
{this._onLoadComplete.dispatch();}}}};FORGE.PluginEngine.prototype._addLocales=function(i18n)
{if(i18n!==null)
{this._viewer.i18n.addConfig(i18n);}};FORGE.PluginEngine.prototype._parseLocales=function(manifest)
{var i18n=null;if(typeof manifest.i18n!=="undefined")
{i18n=manifest.i18n;if(typeof i18n.locales!=="undefined")
{var locale;for(var i=0,ii=i18n.locales.length;i<ii;i++)
{locale=i18n.locales[i];if(typeof locale.files!=="undefined")
{var file;for(var j=0,jj=locale.files.length;j<jj;j++)
{file=locale.files[j];file.key=this._uid+"-"+file.key;file.url=this._fullUrl+file.url;}}}}}
return i18n;};FORGE.PluginEngine.prototype._parseConstructor=function(constructorName)
{if(typeof constructorName==="string"&&constructorName!=="")
{var pathArray=constructorName.split(".");var currentObject=window;for(var i=0,ii=pathArray.length;i<ii;i++)
{if(i===pathArray.length-1&&typeof currentObject[pathArray[i]]==="function")
{return currentObject[pathArray[i]];}
else if(typeof currentObject[pathArray[i]]==="object")
{currentObject=currentObject[pathArray[i]];}
else
{return null;}}}
return null;};FORGE.PluginEngine.prototype._validateEngine=function()
{if(this._constructorFunction===null||typeof this._constructorFunction!=="function")
{throw"Plugin engine "+this._uid+" can't find it's constructor";}
for(var i=0,ii=FORGE.PluginEngine._REQUIRED.length;i<ii;i++)
{if(typeof this._constructorFunction.prototype[FORGE.PluginEngine._REQUIRED[i]]!=="function")
{throw"FORGE.PluginEngine engine validation failed, missing required method "+FORGE.PluginEngine._REQUIRED[i]+" on plugin engine "+this._name;}}
Object.defineProperty(this._constructorFunction.prototype,"viewer",{get:function()
{return this._viewer;}});Object.defineProperty(this._constructorFunction.prototype,"plugin",{get:function()
{return this._plugin;}});return true;};FORGE.PluginEngine.prototype._validateReserved=function(instance)
{for(var i=0,ii=FORGE.PluginEngine._RESERVED.length;i<ii;i++)
{if(typeof instance[FORGE.PluginEngine._RESERVED[i]]!=="undefined")
{throw"FORGE.PluginEngine instance validation failed, "+FORGE.PluginEngine._RESERVED[i]+" is reserved";}}
return true;};FORGE.PluginEngine.prototype._validateActions=function(instance)
{if(this._actions===null)
{return true;}
for(var i=0,ii=this._actions.length;i<ii;i++)
{if(typeof instance[this._actions[i]]!=="function")
{throw"FORGE.PluginEngine instance validation failed, action "+this._actions[i]+" is undefined on plugin "+this._constructorName;}}
return true;};FORGE.PluginEngine.prototype._validateInstance=function(instance)
{return(this._validateReserved(instance)===true&&this._validateActions(instance)===true);};FORGE.PluginEngine.prototype.destroy=function()
{this._viewer=null;this._config=null;this._manifestData=null;this._name=null;this._version=null;this._sources=null;this._constructorFunction=null;this._i18n=null;if(this._onLoadComplete!==null)
{this._onLoadComplete.destroy();this._onLoadComplete=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.PluginEngine.prototype,"name",{get:function()
{return this._name;}});Object.defineProperty(FORGE.PluginEngine.prototype,"loaded",{get:function()
{return this._loaded;}});Object.defineProperty(FORGE.PluginEngine.prototype,"url",{get:function()
{return this._url;}});Object.defineProperty(FORGE.PluginEngine.prototype,"fullUrl",{get:function()
{return this._fullUrl;}});Object.defineProperty(FORGE.PluginEngine.prototype,"options",{get:function()
{return this._options;}});Object.defineProperty(FORGE.PluginEngine.prototype,"actions",{get:function()
{return this._actions;}});Object.defineProperty(FORGE.PluginEngine.prototype,"events",{get:function()
{return this._events;}});Object.defineProperty(FORGE.PluginEngine.prototype,"defaultConfig",{get:function()
{var config={data:(this._data),options:this._options,actions:this._actions,events:this._events};return config;}});Object.defineProperty(FORGE.PluginEngine.prototype,"onLoadComplete",{get:function()
{if(this._onLoadComplete===null)
{this._onLoadComplete=new FORGE.EventDispatcher(this);}
return this._onLoadComplete;}});FORGE.PluginManager=function(viewer)
{FORGE.BaseObject.call(this,"PluginManager");this._viewer=viewer;this._config;this._enabled=true;this._prefix="";this._engines=null;this._plugins=null;this._onInstanceCreate=null;};FORGE.PluginManager.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.PluginManager.prototype.constructor=FORGE.PluginManager;FORGE.PluginManager.prototype._parseMainConfig=function(config)
{this._config=config;this._enabled=(typeof config.enabled==="boolean")?config.enabled:true;this._prefix=(typeof config.prefix==="string")?config.prefix:"./plugins/";};FORGE.PluginManager.prototype._parseConfig=function(config)
{this._parseEngines(config.engines);this._parseInstances(config.instances);this._parseConfigurations(config.configurations);};FORGE.PluginManager.prototype._sceneLoadStartHandler=function()
{this._removeUnkeptPlugins(this._viewer.story.sceneUid);if(this._enabled===true&&typeof this._config!=="undefined")
{this._parseConfig(this._config);}
if(this._enabled===true&&typeof this._viewer.story.scene.config.plugins!=="undefined")
{this._parseConfig(this._viewer.story.scene.config.plugins);}
this._resetPlugins();};FORGE.PluginManager.prototype._removeUnkeptPlugins=function(sceneUid)
{var plugin;var count=this._plugins.size;while(count--)
{plugin=this._plugins.get(count);if(plugin.keep===false||(plugin.scenes!==null&&plugin.scenes.indexOf(sceneUid)===-1))
{this.remove(plugin.uid);}}};FORGE.PluginManager.prototype._resetPlugins=function()
{var plugin;var count=this._plugins.size;while(count--)
{plugin=this._plugins.get(count);if(plugin.reset===true)
{plugin.resetInstance();}}};FORGE.PluginManager.prototype._parseEngines=function(engines)
{if(typeof engines!=="undefined")
{for(var i=0,ii=engines.length;i<ii;i++)
{this._addEngine(engines[i]);}}};FORGE.PluginManager.prototype._parseInstances=function(instances)
{if(typeof instances!=="undefined")
{for(var i=0,ii=instances.length;i<ii;i++)
{var instanceUid=instances[i].uid;var enabled=(instances[i].enabled!==false)?true:false;var plugin=this.getById(instanceUid);var sceneUid=this._viewer.story.sceneUid;var scenes=(FORGE.Utils.isArrayOf(instances[i].scenes,"string"))?instances[i].scenes:[];var sceneValid=Boolean(scenes.length===0||(sceneUid===""&&scenes.length===0)||scenes.indexOf(sceneUid)!==-1);if(enabled===true&&plugin===null&&sceneValid===true)
{this._addInstance(instances[i]);}}}};FORGE.PluginManager.prototype._parseConfigurations=function(configurations)
{if(typeof configurations!=="undefined")
{for(var i=0,ii=configurations.length;i<ii;i++)
{var uid=configurations[i].instance;var enabled=(configurations[i].enabled!==false)?true:false;var plugin=this.getById(uid);var config=null;if(enabled===true)
{config=configurations[i];}
if(plugin!==null)
{plugin.contextualConfig=config;}}}};FORGE.PluginManager.prototype._addEngine=function(config)
{if(typeof config.uid==="string")
{if(this._getEngine(config.uid)!==null)
{return;}
if(FORGE.UID.exists(config.uid)===false)
{var engine=new FORGE.PluginEngine(this._viewer);this._engines.add(engine);engine.load(config);}
else
{this._engines.add(FORGE.UID.get(config.uid));}}};FORGE.PluginManager.prototype._getEngine=function(uid)
{var engine=null;for(var i=0,ii=this._engines.size;i<ii;i++)
{engine=(this._engines.get(i));if(engine.uid===uid)
{return engine;}}
return null;};FORGE.PluginManager.prototype._addInstance=function(config)
{if(typeof config.engine==="undefined")
{throw"Can't create plugin instance, engineUid is undefined";}
var engine=this._getEngine(config.engine);if(engine===null)
{throw"Plugin Engine "+config.engine+" doesn't exist";}
var index=typeof config.index==="number"?config.index:this._plugins.size;var plugin=new FORGE.Plugin(this._viewer,engine,config,index);plugin.onInstanceCreate.addOnce(this._onInstanceCreateHandler,this);this._plugins.add(plugin);plugin.instantiate();return plugin;};FORGE.PluginManager.prototype._onInstanceCreateHandler=function(event)
{var plugin=event.emitter;if(this._onInstanceCreate!==null)
{this._onInstanceCreate.dispatch(plugin);}};FORGE.PluginManager.prototype.boot=function()
{this._engines=new FORGE.Collection();this._plugins=new FORGE.Collection();this._viewer.story.onSceneLoadStart.add(this._sceneLoadStartHandler,this);};FORGE.PluginManager.prototype.addConfig=function(config)
{this._parseMainConfig(config);};FORGE.PluginManager.prototype.getById=function(uid)
{var plugin;for(var i=0,ii=this._plugins.size;i<ii;i++)
{plugin=(this._plugins.get(i));if(plugin.uid===uid)
{return plugin;}}
return null;};FORGE.PluginManager.prototype.getByIndex=function(index)
{var plugin=(this._plugins.get(index));if(typeof plugin!=="undefined")
{return plugin;}
else
{return null;}};FORGE.PluginManager.prototype.get=function(value)
{var plugin=null;if(typeof value==="string")
{plugin=this.getById(value);}
else if(typeof value==="number")
{plugin=this.getByIndex(value);}
return plugin;};FORGE.PluginManager.prototype.remove=function(uid)
{var plugin=this.get(uid);plugin.destroy();this._plugins.remove(plugin);};FORGE.PluginManager.prototype.update=function()
{var plugin;for(var i=0,ii=this._plugins.size;i<ii;i++)
{plugin=this._plugins.get(i);plugin.update();}};FORGE.PluginManager.prototype.render=function()
{};FORGE.PluginManager.prototype.destroy=function()
{this._viewer=null;if(this._onInstanceCreate!==null)
{this._onInstanceCreate.destroy();this._onInstanceCreate=null;}
for(var i=0,ii=this._engines.size;i<ii;i++)
{this._engines.get(i).destroy();}
this._engines=null;for(var j=0,jj=this._plugins.size;j<jj;j++)
{this._plugins.get(j).destroy();}
this._plugins=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.PluginManager.prototype,"all",{get:function()
{return this._plugins;}});Object.defineProperty(FORGE.PluginManager.prototype,"enabled",{get:function()
{return this._enabled;}});Object.defineProperty(FORGE.PluginManager.prototype,"prefix",{get:function()
{return this._prefix;}});Object.defineProperty(FORGE.PluginManager.prototype,"onInstanceCreate",{get:function()
{if(this._onInstanceCreate===null)
{this._onInstanceCreate=new FORGE.EventDispatcher(this,true);}
return this._onInstanceCreate;}});FORGE.PluginObjectFactory=function(viewer,plugin)
{this._viewer=viewer;this._plugin=plugin;this._objects=[];FORGE.BaseObject.call(this,"PluginObjectFactory");};FORGE.PluginObjectFactory.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.PluginObjectFactory.prototype.constructor=FORGE.PluginObjectFactory;FORGE.PluginObjectFactory.prototype._indexOfObject=function(obj)
{var n=this._objects.length;var o;while(n--)
{o=this._objects[n];if(o===obj)
{return n;}}
return-1;};FORGE.PluginObjectFactory.prototype._destroyObjectHandler=function(event)
{var o=event.emitter;var i=this._indexOfObject(o);this._objects.splice(i,1);};FORGE.PluginObjectFactory.prototype.string=function(key)
{var str=new FORGE.LocaleString(this._viewer,key);str.onDestroy.addOnce(this._destroyObjectHandler,this);this._objects.push(str);return str;};FORGE.PluginObjectFactory.prototype.textField=function(config)
{var textField=new FORGE.TextField(this._viewer,config);textField.onDestroy.addOnce(this._destroyObjectHandler,this);this._objects.push(textField);return textField;};FORGE.PluginObjectFactory.prototype.sound=function(key,url)
{var sound=new FORGE.Sound(this._viewer,key,url);sound.onDestroy.addOnce(this._destroyObjectHandler,this);this._objects.push(sound);return sound;};FORGE.PluginObjectFactory.prototype.displayObjectContainer=function(dom)
{var displayObjectContainer=new FORGE.DisplayObjectContainer(this._viewer,dom);displayObjectContainer.onDestroy.addOnce(this._destroyObjectHandler,this);this._objects.push(displayObjectContainer);return displayObjectContainer;};FORGE.PluginObjectFactory.prototype.displayObject=function(dom)
{var displayObject=new FORGE.DisplayObject(this._viewer,dom);displayObject.onDestroy.addOnce(this._destroyObjectHandler,this);this._objects.push(displayObject);return displayObject;};FORGE.PluginObjectFactory.prototype.image=function(config,relativeToPluginPath)
{var c=config;if(typeof config==="string")
{c={"key":null,"url":config};}
c.key=this._plugin.uid+"-"+c.key;if(relativeToPluginPath!==false)
{c.url=this._plugin.fullUrl+c.url;}
var img=new FORGE.Image(this._viewer,c);img.onDestroy.addOnce(this._destroyObjectHandler,this);this._objects.push(img);return img;};FORGE.PluginObjectFactory.prototype.sprite=function(config,relativeToPluginPath)
{var c=config;c.key=this._plugin.uid+"-"+c.key;if(relativeToPluginPath!==false)
{c.url=this._plugin.fullUrl+c.url;c.frames=this._plugin.fullUrl+c.frames;}
var sprite=new FORGE.Sprite(this._viewer,c);sprite.onDestroy.addOnce(this._destroyObjectHandler,this);this._objects.push(sprite);return sprite;};FORGE.PluginObjectFactory.prototype.button=function(config)
{var button=new FORGE.Button(this._viewer,config);button.onDestroy.addOnce(this._destroyObjectHandler,this);this._objects.push(button);return button;};FORGE.PluginObjectFactory.prototype.video=function(key,config,streaming,qualityMode,ambisonic)
{var video;if(typeof streaming!=="undefined"&&streaming.toLowerCase()===FORGE.VideoFormat.DASH)
{video=new FORGE.VideoDash(this._viewer,key,config,qualityMode);}
else
{video=new FORGE.VideoHTML5(this._viewer,key,config,qualityMode,ambisonic);}
video.onDestroy.addOnce(this._destroyObjectHandler,this);this._objects.push(video);return video;};FORGE.PluginObjectFactory.prototype.canvas=function()
{var canvas=new FORGE.Canvas(this._viewer);canvas.onDestroy.addOnce(this._destroyObjectHandler,this);this._objects.push(canvas);return canvas;};FORGE.PluginObjectFactory.prototype.tween=function(object)
{var tween=new FORGE.Tween(this._viewer,object);tween.onDestroy.addOnce(this._destroyObjectHandler,this);this._viewer.tween.add(tween);this._objects.push(tween);return tween;};FORGE.PluginObjectFactory.prototype.destroyAllObjects=function()
{this.log("destroyAllObjects();");var n=this._objects.length;while(n--)
{this._objects[n].destroy();}};FORGE.PluginObjectFactory.prototype.destroy=function()
{this.destroyAllObjects();this._viewer=null;this._plugin=null;this._objects=null;FORGE.BaseObject.prototype.destroy.call(this);};FORGE.Device=(function(c)
{var Tmp=c();Tmp.prototype=Object.create(FORGE.BaseObject.prototype);Tmp.prototype.constructor=Tmp;Tmp.prototype._checkOS=function()
{if(/Playstation Vita/.test(this._ua))
{this._os="playstationvita";this._vita=true;}
else if(/Xbox/.test(this._ua))
{this._os="xbox";this._xbox=true;}
else if(/Kindle/.test(this._ua)||/\bKF[A-Z][A-Z]+/.test(this._ua)||/Silk.*Mobile Safari/.test(this._ua))
{this._os="kindle";this._kindle=true;}
else if((/Windows Phone/i).test(this._ua)||(/IEMobile/i).test(this._ua))
{this._os="windowsphone";this._windowsPhone=true;if(/Windows Phone (\d+)/.test(this._ua))
{this._osVersion=parseInt(RegExp.$1,10);}}
else if(/Android/.test(this._ua))
{this._os="android";this._android=true;if(/Android ([\.\_\d]+)/.test(this._ua))
{this._osVersion=parseInt(RegExp.$1,10);}}
else if(/CrOS/.test(this._ua))
{this._os="chromeos";this._chromeOS=true;}
else if(/iP[ao]d|iPhone/i.test(this._ua))
{this._os="ios";this._iOS=true;if(/OS (\d+)/.test(navigator.appVersion))
{this._osVersion=parseInt(RegExp.$1,10);}}
else if(/(Linux|X11)/.test(this._ua))
{this._os="linux";this._linux=true;}
else if(/Mac OS X/.test(this._ua))
{this._os="macosx";this._macOS=true;if(/Mac OS X (10[\.\_\d]+)/.test(this._ua))
{this._osVersion=parseInt(RegExp.$1,10);}}
else if(/Windows/.test(this._ua)||(/WPDesktop/i).test(this._ua))
{if((/WPDesktop/i).test(this._ua))
{this._os="windowsphone";this._windowsPhone=true;}
else
{this._os="windows";this._windows=true;}
if(/(Windows 10.0|Windows NT 10.0)/.test(this._ua))
{this._osVersion=10;}
else if(/(Windows 8.1|Windows NT 6.3)/.test(this._ua)||/(Windows 8|Windows NT 6.2)/.test(this._ua))
{this._osVersion=8;}
else if(/(Windows 7|Windows NT 6.1)/.test(this._ua))
{this._osVersion=7;}}};Tmp.prototype._checkBrowsers=function()
{this._ie=(/*@cc_on!@*/ false||typeof document["documentMode"]!=="undefined");this._edge=this._ie===false&&Boolean(window["StyleMedia"])===true;this._firefox=typeof window["InstallTrigger"]!=="undefined";this._opera=Boolean(window["opr"])===true||this._ua.indexOf(" OPR/")>=0||this._ua.indexOf("Opera")>=0;this._safari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);this._chrome=this._ie===false&&this._edge===false&&this._opera===false&&(Boolean(window["chrome"])===true||this._ua.indexOf("CriOS")>=0);if(this._edge)
{this._browser="edge";if(/Edge\/(\d+)/.test(this._ua))
{this._browserVersion=this._edgeVersion=parseInt(RegExp.$1,10);}}
else if(this._chrome)
{this._browser="chrome";if(/CriOS\/(\d+)/.test(this._ua))
{this._browserVersion=this._chromeVersion=parseInt(RegExp.$1,10);}
else if(/Chrome\/(\d+)/.test(this._ua))
{this._browserVersion=this._chromeVersion=parseInt(RegExp.$1,10);}}
else if(this._firefox)
{this._browser="firefox";if(/Firefox\D+(\d+)/.test(this._ua))
{this._browserVersion=this._firefoxVersion=parseInt(RegExp.$1,10);}}
else if(this._kindle)
{if(/Silk/.test(this._ua))
{this._browser="silk";this._silk=true;}}
else if(this._ie)
{this._browser="internetexplorer";if(/MSIE (\d+\.\d+);/.test(this._ua))
{this._browserVersion=this._ieVersion=parseInt(RegExp.$1,10);}
else if(/Trident\/(\d+\.\d+)(.*)rv:(\d+\.\d+)/.test(this._ua))
{this._browserVersion=this._ieVersion=parseInt(RegExp.$3,10);}}
else if(this._opera)
{this._browser="opera";if(/OPR\/(\d+)/.test(this._ua))
{this._browserVersion=this._operaVersion=parseInt(RegExp.$1,10);}
else if(this._ua.indexOf("Opera/")>=0)
{if(/Version\/(\d+)/.test(this._ua))
{this._browserVersion=this._operaVersion=parseInt(RegExp.$1,10);}}
else if(/Opera (\d+)/.test(this._ua))
{this._browserVersion=this._operaVersion=parseInt(RegExp.$1,10);}}
else if(this._safari)
{this._browser="safari";if((/version\/(\d+(\.\d+)?)/i).test(this._ua))
{this._browserVersion=this._safariVersion=parseInt(RegExp.$1,10);}}
else
{var matches=this._ua.match(/Android.*AppleWebKit\/([\d.]+)/);if(matches&&matches[1]<537)
{this._browser="androidstock";this._isAndroidStockBrowser=true;this._browserVersion=this._androidStockBrowserVersion=parseFloat(this._ua.slice(this._ua.indexOf("Android")+8));}}
if(navigator.standalone)
{this._webApp=true;}
this._quirksMode=(document.compatMode==="CSS1Compat")?false:true;};Tmp.prototype._checkDevice=function()
{this._pixelRatio=window.devicePixelRatio||1;this._iPhone=this._iOS===true&&this._ua.toLowerCase().indexOf("iphone")!==-1;this._iPod=this._iOS===true&&this._ua.toLowerCase().indexOf("ipod")!==-1;this._iPad=this._iOS===true&&this._ua.toLowerCase().indexOf("ipad")!==-1;this._retina=this._pixelRatio>=2&&this._iOS===true;if((this._windows&&!this._windowsPhone)||this._macOS||(this._linux&&!this._silk)||this._chromeOS)
{this._desktop=true;}
else if(/Mobi/i.test(this._ua)&&this._iPad===false)
{this._mobile=true;}
else
{this._tablet=true;}
if(/TV/i.test(this._ua)||this._vita===true||this._xbox===true||(this._desktop&&/Windows NT/i.test(this._ua)&&/Touch/i.test(this._ua)))
{this._other=true;this._mobile=false;this._tablet=false;this._desktop=false;}};Tmp.prototype._checkVideo=function()
{var videoElement=document.createElement("video");try
{if(typeof videoElement.canPlayType==="function")
{if(videoElement.canPlayType("video/ogg; codecs=\"theora\"").replace(/^no$/,""))
{this._oggVideo=true;}
if(videoElement.canPlayType("video/mp4; codecs=\"avc1.42E01E\"").replace(/^no$/,""))
{this._h264Video=true;this._mp4Video=true;}
if(videoElement.canPlayType("video/webm; codecs=\"vp8, vorbis\"").replace(/^no$/,""))
{this._webmVideo=true;}
if(videoElement.canPlayType("video/webm; codecs=\"vp9\"").replace(/^no$/,""))
{this._vp9Video=true;}
if(videoElement.canPlayType("application/x-mpegURL; codecs=\"avc1.42E01E\"").replace(/^no$/,""))
{this._hlsVideo=true;}}}
catch(e)
{}};Tmp.prototype._checkAudio=function()
{this._audioTag=(typeof window.Audio!=="undefined");this._webAudio=(typeof window.AudioContext!=="undefined"||typeof window.webkitAudioContext!=="undefined");var audioElement=document.createElement("audio");try
{if(typeof audioElement.canPlayType==="function")
{if(audioElement.canPlayType("audio/ogg; codecs=\"vorbis\"").replace(/^no$/,""))
{this._ogg=true;}
if(audioElement.canPlayType("audio/mpeg;").replace(/^no$/,""))
{this._mp3=true;}
if(audioElement.canPlayType("audio/ogg; codecs=\"opus\"").replace(/^no$/,"")||audioElement.canPlayType("audio/opus;").replace(/^no$/,""))
{this._opus=true;}
if(audioElement.canPlayType("audio/wav; codecs=\"1\"").replace(/^no$/,""))
{this._wav=true;}
if(audioElement.canPlayType("audio/aac;").replace(/^no$/,""))
{this._aac=true;}
if(audioElement.canPlayType("audio/x-m4a;")||audioElement.canPlayType("audio/m4a;")||audioElement.canPlayType("audio/aac;").replace(/^no$/,""))
{this._m4a=true;}
if(audioElement.canPlayType("audio/x-mp4;")||audioElement.canPlayType("audio/mp4;")||audioElement.canPlayType("audio/aac;").replace(/^no$/,""))
{this._mp4=true;}
if(audioElement.canPlayType("audio/webm; codecs=\"vorbis\"").replace(/^no$/,""))
{this._webm=true;this._weba=true;}}}
catch(e)
{}};Tmp.prototype._checkDeviceFeatures=function()
{this._vibrate=(typeof navigator.vibrate!=="undefined"||typeof navigator.webkitVibrate!=="undefined"||typeof navigator.mozVibrate!=="undefined"||typeof navigator.msVibrate!=="undefined");this._battery=(typeof navigator.getBattery==="function");};Tmp.prototype._checkFeatures=function()
{this._canvas=(typeof window.CanvasRenderingContext2D!=="undefined");if(this._canvas===true)
{this._canvasText=(typeof document.createElement("canvas").getContext("2d").fillText==="function");var canvasCtx=document.createElement("canvas").getContext("2d");canvasCtx.rect(0,0,10,10);canvasCtx.rect(2,2,6,6);this._canvasWinding=(canvasCtx.isPointInPath(5,5,"evenodd")===false);}
try
{this._localStorage=(typeof window.localStorage==="object"&&typeof window.localStorage.getItem==="function");}
catch(error)
{this._localStorage=false;}
this._mediaSource=(typeof window.MediaSource==="function");this._encryptedMedia=(typeof window.HTMLMediaElement==="function"&&typeof window.MediaKeys==="function"&&typeof window.MediaKeySystemAccess==="function"&&typeof navigator.requestMediaKeySystemAccess==="function");this._applicationCache=(typeof window.applicationCache==="object");this._addEventListener=(typeof window.addEventListener==="function");this.__raf=(typeof window.requestAnimationFrame==="function"||typeof window.webkitRequestAnimationFrame==="function"||typeof window.mozRequestAnimationFrame==="function");try
{var canvas=document.createElement("canvas");canvas.screencanvas=false;this._webGL=(typeof canvas.getContext==="function"&&typeof window.WebGLRenderingContext!=="undefined"&&Boolean(canvas.getContext("webgl")||canvas.getContext("experimental-webgl")));}
catch(e)
{this._webGL=false;}
if(typeof navigator.getVRDisplays==="function")
{this._webVR=true;}
else
{this._webVR=false;}
this._JSON=(typeof window.JSON==="object"&&typeof window.JSON.parse==="function"&&typeof window.JSON.stringify==="function");this._geolocation=(typeof navigator.geolocation==="object");this._history=(typeof window.history==="object"&&typeof window.history.pushState==="function");this._svg=(typeof document.createElementNS==="function"&&typeof document.createElementNS("http://www.w3.org/2000/svg","svg").createSVGRect==="function");this._contextMenu=(typeof document.documentElement.contextMenu!=="undefined"&&typeof window.HTMLMenuItemElement==="function");};Tmp.prototype._checkEnvironment=function()
{this._isSecure=/^https/i.test(window.location.protocol);try
{this._isIframe=(window.self!==window.top);}
catch(e)
{this._isIframe=true;}};Tmp.prototype._checkInput=function()
{this._touch=(typeof window.ontouchstart!=="undefined"||typeof window.DocumentTouch!=="undefined"&&document instanceof window.DocumentTouch||(typeof navigator.maxTouchPoints==="number"&&navigator.maxTouchPoints>0)||(typeof navigator.msMaxTouchPoints==="number"&&navigator.msMaxTouchPoints>0));if(typeof window.onmouseforcewillbegin!=="undefined"||typeof window.onwebkitmouseforcewillbegin!=="undefined")
{this._touchForce=Boolean(MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN&&MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN);}
this._gamepad=(typeof navigator.getGamepads==="function"||typeof navigator.webkitGetGamepads==="function");};Tmp.prototype._checkFullscreenSupport=function()
{var requestFullscreen=["requestFullscreen","requestFullScreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","mozRequestFullscreen","msRequestFullscreen","msRequestFullScreen"];var exitFullscreen=["cancelFullscreen","cancelFullScreen","exitFullscreen","exitFullScreen","webkitCancelFullscreen","webkitCancelFullScreen","webkitExitFullscreen","webkitExitFullScreen","mozCancelFullscreen","mozCancelFullScreen","mozExitFullscreen","mozExitFullScreen","msCancelFullscreen","msCancelFullScreen","msExitFullscreen","msExitFullScreen"];var element=document.createElement("div");for(var i=0,ii=requestFullscreen.length;i<ii;i++)
{if(element[requestFullscreen[i]])
{this._requestFullscreen=requestFullscreen[i];break;}}
for(var j=0,jj=exitFullscreen.length;j<jj;j++)
{if(document[exitFullscreen[j]])
{this._exitFullscreen=exitFullscreen[j];break;}}
if(typeof window.Element==="function"&&Element.ALLOW_KEYBOARD_INPUT)
{this._fullscreenKeyboard=true;}
var fullscreenElement=["fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement"];for(var k=0,kk=fullscreenElement.length;k<kk;k++)
{if(typeof document[fullscreenElement[k]]!=="undefined")
{this._fullscreenElement=fullscreenElement[k];break;}}
var fullscreenEnabled=["fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled"];for(var l=0,ll=fullscreenEnabled.length;l<ll;l++)
{if(typeof document[fullscreenEnabled[l]]!=="undefined")
{this._fullscreenEnabled=fullscreenEnabled[l];break;}}};Tmp.prototype._checkBrowserApi=function()
{this._visibilityState="visibilityState"in document?"visibilityState":"webkitVisibilityState"in document?"webkitVisibilityState":"mozVisibilityState"in document?"mozVisibilityState":null;this._visibilityChange=this._visibilityState.slice(0,-5)+"change";var orientation=["orientation","mozOrientation","msOrientation"];for(var i=0,ii=orientation.length;i<ii;i++)
{if(typeof screen[orientation[i]]==="string")
{this._orientation=orientation[i];break;}}
this._screenOrientation=(typeof screen.orientation==="object"&&typeof screen.orientation.type==="string"&&typeof screen.orientation.lock==="function");var lockOrientation=["lockOrientation","mozLockOrientation","msLockOrientation"];var unlockOrientation=["unlockOrientation","mozUnlockOrientation","msUnlockOrientation"];for(var j=0,jj=lockOrientation.length;j<jj;j++)
{if(typeof screen[lockOrientation[j]]==="function")
{this._lockOrientation=lockOrientation[j];this._unlockOrientation=unlockOrientation[j];break;}}
this._file=(typeof window.File!=="undefined"&&typeof window.FileReader!=="undefined"&&typeof window.FileList!=="undefined"&&typeof window.Blob!=="undefined");this._fileSystem=(typeof window.requestFileSystem!=="undefined"||typeof window.webkitRequestFileSystem!=="undefined");this._pointerLock=(typeof document.pointerLockElement!=="undefined"||typeof document.mozPointerLockElement!=="undefined"||typeof document.webkitPointerLockElement!=="undefined");};Tmp.prototype._checkCss=function()
{var cssStyle=document.createElement("a").style;cssStyle.cssText="pointer-events:auto";this._cssPointerEvents=(cssStyle.pointerEvents==="auto");cssStyle.cssText="background-color:rgba(150,255,150,.5)";this._cssRgba=((""+cssStyle.backgroundColor).indexOf("rgba")>-1);this._cssAnimation=(typeof cssStyle.animationName!=="undefined"||typeof cssStyle.webkitAnimationName!=="undefined"||typeof cssStyle.mozAnimationName!=="undefined"||typeof cssStyle.msAnimationName!=="undefined");var el=document.createElement("p");var has3d;var transforms={"webkitTransform":"-webkit-transform","OTransform":"-o-transform","msTransform":"-ms-transform","MozTransform":"-moz-transform","transform":"transform"};document.body.insertBefore(el,null);for(var t in transforms)
{if(typeof el.style[t]!=="undefined")
{el.style[t]="translate3d(1px,1px,1px)";has3d=window.getComputedStyle(el).getPropertyValue(transforms[t]);}}
document.body.removeChild(el);this._css3D=(typeof has3d!=="undefined"&&has3d.length>0&&has3d!=="none");};Tmp.prototype._deviceMotionHandler=function(event)
{if(event.rotationRate!==null&&typeof event.rotationRate.alpha!=="undefined"&&typeof event.rotationRate.beta!=="undefined"&&typeof event.rotationRate.gamma!=="undefined")
{this._deviceMotionRotationRate=true;}
if(typeof event.acceleration!=="undefined"&&typeof event.acceleration.x!=="undefined"&&typeof event.acceleration.y!=="undefined"&&typeof event.acceleration.z!=="undefined")
{this._deviceMotionAcceleration=true;}
this._removeDeviceMotionHandler();if(typeof this._deviceOrientationBind!=="function")
{this._checkComplete();}};Tmp.prototype._deviceOrientationHandler=function(event)
{if(typeof event.alpha!=="undefined"&&event.alpha!==null&&typeof event.beta!=="undefined"&&event.beta!==null&&typeof event.gamma!=="undefined"&&event.gamma!==null)
{this._deviceOrientationMagnetometer=true;}
this._removeDeviceOrientationHandler();if(typeof this._deviceMotionBind!=="function")
{this._checkComplete();}};Tmp.prototype._removeDeviceMotionHandler=function()
{window.removeEventListener("devicemotion",this._deviceMotionBind,false);this._deviceMotionBind=null;};Tmp.prototype._removeDeviceOrientationHandler=function()
{window.removeEventListener("deviceorientation",this._deviceOrientationBind,false);this._deviceOrientationBind=null;};Tmp.prototype._checkGyroscope=function()
{this._deviceMotion=(typeof window.DeviceMotionEvent!=="undefined");this._deviceOrientation=(typeof window.DeviceOrientationEvent!=="undefined");window.addEventListener("deviceorientation",this._deviceOrientationBind,false);window.addEventListener("devicemotion",this._deviceMotionBind,false);};Tmp.prototype._checkScreen=function()
{var div=document.createElement("div");div.style.width="1in";div.style.height="1in";document.body.appendChild(div);this._dpi=div.offsetWidth;document.body.removeChild(div);div=null;if(this._mobile)
{this._screenWidth=Math.floor(Math.min(window.screen.width,window.screen.height)*this._pixelRatio);this._screenHeight=Math.floor(Math.max(window.screen.width,window.screen.height)*this._pixelRatio);}
else
{this._screenWidth=Math.floor(Math.max(window.screen.width,window.screen.height)*this._pixelRatio);this._screenHeight=Math.floor(Math.min(window.screen.width,window.screen.height)*this._pixelRatio);}};Tmp.prototype._check=function()
{this._ua=navigator["userAgent"];this._language=((navigator.languages&&navigator.languages[0])||navigator.language||navigator.userLanguage||"");this._checkOS();this._checkBrowsers();this._checkDevice();this._checkAudio();this._checkVideo();this._checkDeviceFeatures();this._checkFeatures();this._checkEnvironment();this._checkBrowserApi();this._checkFullscreenSupport();this._checkInput();this._checkCss();this._deviceMotionBind=this._deviceMotionHandler.bind(this);this._deviceOrientationBind=this._deviceOrientationHandler.bind(this);this._checkGyroscope();this._checkScreen();if(this._deviceMotion===false&&this._deviceOrientation===false)
{this._checkComplete();}};Tmp.prototype._checkComplete=function()
{if(typeof this._deviceMotionBind==="function")
{this._removeDeviceMotionHandler();}
if(typeof this._deviceOrientationBind==="function")
{this._removeDeviceOrientationHandler();}
this._gyroscope=(this._deviceMotionRotationRate===true&&this._deviceMotionAcceleration===true&&this._deviceOrientationMagnetometer===true);this._ready=true;this._onReady.dispatch();Object.freeze(FORGE.Device);};Tmp.prototype.canPlayAudio=function(type)
{if(type==="mp3"&&this._mp3===true)
{return true;}
else if(type==="ogg"&&(this._ogg===true||this._opus===true))
{return true;}
else if(type==="m4a"&&this._m4a===true)
{return true;}
else if(type==="mp4"&&this._mp4===true)
{return true;}
else if(type==="opus"&&this._opus===true)
{return true;}
else if(type==="wav"&&this._wav===true)
{return true;}
else if(type==="aac"&&this._aac===true)
{return true;}
else if(type==="webm"&&this._webm===true)
{return true;}
else if(type==="weba"&&this._weba===true)
{return true;}
return false;};Tmp.prototype.canPlayVideo=function(type)
{if(type==="webm"&&(this._webmVideo===true||this._vp9Video===true))
{return true;}
else if(type==="mp4"&&(this._mp4Video===true||this._h264Video===true))
{return true;}
else if((type==="ogg"||type==="ogv")&&this._oggVideo===true)
{return true;}
else if(type==="mpeg"&&this._hlsVideo===true)
{return true;}
return false;};Tmp.prototype.isLowBattery=function()
{var minLevel=0.20;return navigator.getBattery().then(function(battery)
{return this._battery&&!battery.charging&&battery.level<=minLevel;}.bind(this),function()
{return false;});};Tmp.prototype.check=function(config,device,condition)
{condition=condition||"and";device=device||FORGE.Device;var result=true;for(var i in config)
{if(i==="and")
{result=FORGE.Device.check(config[i],device,"and");}
else if(i==="or")
{result=FORGE.Device.check(config[i],device,"or");}
else
{result=FORGE.Device.checkValue(config[i],device[i]);}
if(condition==="and"&&result===false)
{break;}
else if(condition==="or"&&result===true)
{break;}}
return result;};Tmp.prototype.checkValue=function(config,device)
{var operation="===";var value;if(typeof config==="object")
{if(typeof config.operation==="string")
{operation=config.operation;}
value=config.value;}
else
{value=config;}
var result=false;switch(operation)
{case"==":case"===":result=device===value;break;case"!=":case"!==":result=device!==value;break;case"<":result=device<value;break;case"<=":result=device<=value;break;case">":result=device>value;break;case">=":result=device>=value;break;}
return result;};Object.defineProperty(Tmp.prototype,"ready",{get:function()
{return this._ready;}});Object.defineProperty(Tmp.prototype,"ua",{get:function()
{return this._ua;}});Object.defineProperty(Tmp.prototype,"language",{get:function()
{return this._language;}});Object.defineProperty(Tmp.prototype,"os",{get:function()
{return this._os;}});Object.defineProperty(Tmp.prototype,"osVersion",{get:function()
{return this._osVersion;}});Object.defineProperty(Tmp.prototype,"vita",{get:function()
{return this._vita;}});Object.defineProperty(Tmp.prototype,"xbox",{get:function()
{return this._xbox;}});Object.defineProperty(Tmp.prototype,"kindle",{get:function()
{return this._kindle;}});Object.defineProperty(Tmp.prototype,"android",{get:function()
{return this._android;}});Object.defineProperty(Tmp.prototype,"chromeOS",{get:function()
{return this._chromeOS;}});Object.defineProperty(Tmp.prototype,"iOS",{get:function()
{return this._iOS;}});Object.defineProperty(Tmp.prototype,"linux",{get:function()
{return this._linux;}});Object.defineProperty(Tmp.prototype,"macOS",{get:function()
{return this._macOS;}});Object.defineProperty(Tmp.prototype,"windows",{get:function()
{return this._windows;}});Object.defineProperty(Tmp.prototype,"windowsPhone",{get:function()
{return this._windowsPhone;}});Object.defineProperty(Tmp.prototype,"firefox",{get:function()
{return this._firefox;}});Object.defineProperty(Tmp.prototype,"firefoxVersion",{get:function()
{return this._firefoxVersion;}});Object.defineProperty(Tmp.prototype,"chrome",{get:function()
{return this._chrome;}});Object.defineProperty(Tmp.prototype,"chromeVersion",{get:function()
{return this._chromeVersion;}});Object.defineProperty(Tmp.prototype,"ie",{get:function()
{return this._ie;}});Object.defineProperty(Tmp.prototype,"ieVersion",{get:function()
{return this._ieVersion;}});Object.defineProperty(Tmp.prototype,"opera",{get:function()
{return this._opera;}});Object.defineProperty(Tmp.prototype,"operaVersion",{get:function()
{return this._operaVersion;}});Object.defineProperty(Tmp.prototype,"edge",{get:function()
{return this._edge;}});Object.defineProperty(Tmp.prototype,"edgeVersion",{get:function()
{return this._edgeVersion;}});Object.defineProperty(Tmp.prototype,"safari",{get:function()
{return this._safari;}});Object.defineProperty(Tmp.prototype,"safariVersion",{get:function()
{return this._safariVersion;}});Object.defineProperty(Tmp.prototype,"silk",{get:function()
{return this._silk;}});Object.defineProperty(Tmp.prototype,"browser",{get:function()
{return this._browser;}});Object.defineProperty(Tmp.prototype,"browserVersion",{get:function()
{return this._browserVersion;}});Object.defineProperty(Tmp.prototype,"webApp",{get:function()
{return this._webApp;}});Object.defineProperty(Tmp.prototype,"isAndroidStockBrowser",{get:function()
{return this._isAndroidStockBrowser;}});Object.defineProperty(Tmp.prototype,"androidStockBrowserVersion",{get:function()
{return this._androidStockBrowserVersion;}});Object.defineProperty(Tmp.prototype,"quirksMode",{get:function()
{return this._quirksMode;}});Object.defineProperty(Tmp.prototype,"fullscreenEnabled",{get:function()
{return this._fullscreenEnabled;}});Object.defineProperty(Tmp.prototype,"requestFullscreen",{get:function()
{return this._requestFullscreen;}});Object.defineProperty(Tmp.prototype,"exitFullscreen",{get:function()
{return this._exitFullscreen;}});Object.defineProperty(Tmp.prototype,"fullscreenElement",{get:function()
{return this._fullscreenElement;}});Object.defineProperty(Tmp.prototype,"fullscreenKeyboard",{get:function()
{return this._fullscreenKeyboard;}});Object.defineProperty(Tmp.prototype,"iPhone",{get:function()
{return this._iPhone;}});Object.defineProperty(Tmp.prototype,"retina",{get:function()
{return this._retina;}});Object.defineProperty(Tmp.prototype,"iPod",{get:function()
{return this._iPod;}});Object.defineProperty(Tmp.prototype,"iPad",{get:function()
{return this._iPad;}});Object.defineProperty(Tmp.prototype,"pixelRatio",{get:function()
{return this._pixelRatio;}});Object.defineProperty(Tmp.prototype,"vibrate",{get:function()
{return this._vibrate;}});Object.defineProperty(Tmp.prototype,"battery",{get:function()
{return this._battery;}});Object.defineProperty(Tmp.prototype,"desktop",{get:function()
{return this._desktop;}});Object.defineProperty(Tmp.prototype,"tablet",{get:function()
{return this._tablet;}});Object.defineProperty(Tmp.prototype,"mobile",{get:function()
{return this._mobile;}});Object.defineProperty(Tmp.prototype,"other",{get:function()
{return this._other;}});Object.defineProperty(Tmp.prototype,"touch",{get:function()
{return this._touch;}});Object.defineProperty(Tmp.prototype,"gamepad",{get:function()
{return this._gamepad;}});Object.defineProperty(Tmp.prototype,"touchForce",{get:function()
{return this._touchForce;}});Object.defineProperty(Tmp.prototype,"audioTag",{get:function()
{return this._audioTag;}});Object.defineProperty(Tmp.prototype,"webAudio",{get:function()
{return this._webAudio;}});Object.defineProperty(Tmp.prototype,"ogg",{get:function()
{return this._ogg;}});Object.defineProperty(Tmp.prototype,"mp3",{get:function()
{return this._mp3;}});Object.defineProperty(Tmp.prototype,"opus",{get:function()
{return this._opus;}});Object.defineProperty(Tmp.prototype,"wav",{get:function()
{return this._wav;}});Object.defineProperty(Tmp.prototype,"m4a",{get:function()
{return this._m4a;}});Object.defineProperty(Tmp.prototype,"mp4",{get:function()
{return this._mp4;}});Object.defineProperty(Tmp.prototype,"aac",{get:function()
{return this._aac;}});Object.defineProperty(Tmp.prototype,"webm",{get:function()
{return this._webm;}});Object.defineProperty(Tmp.prototype,"weba",{get:function()
{return this._weba;}});Object.defineProperty(Tmp.prototype,"oggVideo",{get:function()
{return this._oggVideo;}});Object.defineProperty(Tmp.prototype,"h264Video",{get:function()
{return this._h264Video;}});Object.defineProperty(Tmp.prototype,"mp4Video",{get:function()
{return this._mp4Video;}});Object.defineProperty(Tmp.prototype,"webmVideo",{get:function()
{return this._webmVideo;}});Object.defineProperty(Tmp.prototype,"vp9Video",{get:function()
{return this._vp9Video;}});Object.defineProperty(Tmp.prototype,"hlsVideo",{get:function()
{return this._hlsVideo;}});Object.defineProperty(Tmp.prototype,"canvas",{get:function()
{return this._canvas;}});Object.defineProperty(Tmp.prototype,"canvasWinding",{get:function()
{return this._canvasWinding;}});Object.defineProperty(Tmp.prototype,"canvasText",{get:function()
{return this._canvasText;}});Object.defineProperty(Tmp.prototype,"addEventListener",{get:function()
{return this._addEventListener;}});Object.defineProperty(Tmp.prototype,"raf",{get:function()
{return this._raf;}});Object.defineProperty(Tmp.prototype,"webGL",{get:function()
{return this._webGL;}});Object.defineProperty(Tmp.prototype,"webVR",{get:function()
{return this._webVR;}});Object.defineProperty(Tmp.prototype,"file",{get:function()
{return this._file;}});Object.defineProperty(Tmp.prototype,"fileSystem",{get:function()
{return this._fileSystem;}});Object.defineProperty(Tmp.prototype,"localStorage",{get:function()
{return this._localStorage;}});Object.defineProperty(Tmp.prototype,"applicationCache",{get:function()
{return this._applicationCache;}});Object.defineProperty(Tmp.prototype,"geolocation",{get:function()
{return this._geolocation;}});Object.defineProperty(Tmp.prototype,"pointerLock",{get:function()
{return this._pointerLock;}});Object.defineProperty(Tmp.prototype,"contextMenu",{get:function()
{return this._contextMenu;}});Object.defineProperty(Tmp.prototype,"mediaSource",{get:function()
{return this._mediaSource;}});Object.defineProperty(Tmp.prototype,"encryptedMedia",{get:function()
{return this._encryptedMedia;}});Object.defineProperty(Tmp.prototype,"JSON",{get:function()
{return this._JSON;}});Object.defineProperty(Tmp.prototype,"history",{get:function()
{return this._history;}});Object.defineProperty(Tmp.prototype,"svg",{get:function()
{return this._svg;}});Object.defineProperty(Tmp.prototype,"isSecure",{get:function()
{return this._isSecure;}});Object.defineProperty(Tmp.prototype,"isIframe",{get:function()
{return this._isIframe;}});Object.defineProperty(Tmp.prototype,"visibilityState",{get:function()
{return this._visibilityState;}});Object.defineProperty(Tmp.prototype,"visibilityChange",{get:function()
{return this._visibilityChange;}});Object.defineProperty(Tmp.prototype,"css3D",{get:function()
{return this._css3D;}});Object.defineProperty(Tmp.prototype,"cssRgba",{get:function()
{return this._cssRgba;}});Object.defineProperty(Tmp.prototype,"cssPointerEvents",{get:function()
{return this._cssPointerEvents;}});Object.defineProperty(Tmp.prototype,"cssAnimation",{get:function()
{return this._cssAnimation;}});Object.defineProperty(Tmp.prototype,"gyroscope",{get:function()
{return this._gyroscope;}});Object.defineProperty(Tmp.prototype,"deviceMotion",{get:function()
{return this._deviceMotion;}});Object.defineProperty(Tmp.prototype,"deviceOrientation",{get:function()
{return this._deviceOrientation;}});Object.defineProperty(Tmp.prototype,"deviceMotionAcceleration",{get:function()
{return this._deviceMotionAcceleration;}});Object.defineProperty(Tmp.prototype,"deviceMotionRotationRate",{get:function()
{return this._deviceMotionRotationRate;}});Object.defineProperty(Tmp.prototype,"deviceOrientationMagnetometer",{get:function()
{return this._deviceOrientationMagnetometer;}});Object.defineProperty(Tmp.prototype,"dpi",{get:function()
{return this._dpi;}});Object.defineProperty(Tmp.prototype,"screenWidth",{get:function()
{return this._screenWidth;}});Object.defineProperty(Tmp.prototype,"screenHeight",{get:function()
{return this._screenHeight;}});Object.defineProperty(Tmp.prototype,"screenOrientation",{get:function()
{return this._screenOrientation;}});Object.defineProperty(Tmp.prototype,"orientation",{get:function()
{return this._orientation;}});Object.defineProperty(Tmp.prototype,"lockOrientation",{get:function()
{return this._lockOrientation;}});Object.defineProperty(Tmp.prototype,"unlockOrientation",{get:function()
{return this._unlockOrientation;}});Object.defineProperty(Tmp.prototype,"onReady",{get:function()
{return this._onReady;}});return new Tmp();})(function()
{return function()
{this._ready=false;this._ua="";this._language="";this._os="";this._osVersion=0;this._vita=false;this._xbox=false;this._kindle=false;this._android=false;this._chromeOS=false;this._iOS=false;this._linux=false;this._macOS=false;this._windows=false;this._windowsPhone=false;this._firefox=false;this._firefoxVersion=0;this._chrome=false;this._chromeVersion=0;this._ie=false;this._ieVersion=0;this._opera=false;this._operaVersion=0;this._edge=false;this._edgeVersion=0;this._safari=false;this._safariVersion=0;this._silk=false;this._browser="";this._browserVersion=0;this._webApp=false;this._isAndroidStockBrowser=false;this._androidStockBrowserVersion=0;this._quirksMode=false;this._fullscreenEnabled="";this._requestFullscreen="";this._exitFullscreen="";this._fullscreenElement="";this._fullscreenKeyboard=false;this._iPhone=false;this._retina=false;this._iPod=false;this._iPad=false;this._pixelRatio=1;this._vibrate=false;this._battery=false;this._desktop=false;this._tablet=false;this._mobile=false;this._other=false;this._touch=false;this._gamepad=false;this._touchForce=false;this._audioTag=false;this._webAudio=false;this._ogg=false;this._mp3=false;this._opus=false;this._wav=false;this._m4a=false;this._mp4=false;this._aac=false;this._webm=false;this._weba=false;this._oggVideo=false;this._h264Video=false;this._mp4Video=false;this._webmVideo=false;this._vp9Video=false;this._hlsVideo=false;this._canvas=false;this._canvasWinding=false;this._canvasText=false;this._addEventListener=false;this._raf=false;this._webGL=false;this._webVR=false;this._file=false;this._fileSystem=false;this._localStorage=false;this._applicationCache=false;this._geolocation=false;this._pointerLock=false;this._contextMenu=false;this._mediaSource=false;this._encryptedMedia=false;this._JSON=false;this._history=false;this._svg=false;this._isSecure=false;this._isIframe=false;this._visibilityState="";this._visibilityChange="";this._css3D=false;this._cssRgba=false;this._cssPointerEvents=false;this._cssAnimation=false;this._gyroscope=false;this._deviceMotion=false;this._deviceOrientation=false;this._deviceMotionAcceleration=false;this._deviceMotionRotationRate=false;this._deviceOrientationMagnetometer=false;this._deviceMotionBind=null;this._deviceOrientationBind=null;this._dpi=0;this._screenWidth=0;this._screenHeight=0;this._screenOrientation=false;this._orientation="";this._lockOrientation="";this._unlockOrientation="";this._onReady=new FORGE.EventDispatcher(this,true);FORGE.BaseObject.call(this,"Device");this._check();};});FORGE.System=function(viewer)
{this._viewer=viewer;this._visibilityChangeBind=null;};FORGE.System.prototype.constructor=FORGE.System;FORGE.System.prototype.boot=function()
{this._visibilityChangeBind=this._visibilityChangeHandler.bind(this);this._setPageVisibilityEvent();};FORGE.System.prototype._setPageVisibilityEvent=function()
{document.addEventListener(FORGE.Device.visibilityChange,this._visibilityChangeBind,false);this._visibilityChangeHandler();};FORGE.System.prototype._visibilityChangeHandler=function()
{var state=document[FORGE.Device.visibilityState];if(typeof state==="string"&&state==="visible")
{this._viewer.resume(true);}
else
{this._viewer.pause(true);}};FORGE.System.prototype.destroy=function()
{document.removeEventListener(FORGE.Device.visibilityChange,this._visibilityChangeBind,false);this._visibilityChangeBind=null;this._viewer=null;};FORGE.RequestAnimationFrame=function(viewer)
{this._viewer=viewer;this._timeOutId=null;this._isSetTimeOut=false;this._onLoop=null;this._running=false;this._called=0;this._owner=null;};FORGE.RequestAnimationFrame.prototype.constructor=FORGE.RequestAnimationFrame;FORGE.RequestAnimationFrame.prototype.boot=function()
{var vendors=["ms","moz","webkit","o"];for(var x=0;x<vendors.length&&!window.requestAnimationFrame;x++)
{window.requestAnimationFrame=window[vendors[x]+"RequestAnimationFrame"];window.cancelAnimationFrame=window[vendors[x]+"CancelAnimationFrame"];}
this._owner=window;};FORGE.RequestAnimationFrame.prototype.start=function(owner)
{this._owner=(typeof owner!=="undefined"&&(owner===window||owner instanceof VRDisplay))?owner:window;this._running=true;if(typeof this._owner.requestAnimationFrame==="undefined"||this._viewer.config.update==="timeout")
{this._isSetTimeOut=true;this._onLoop=function()
{if(this._running===true)
{return this._updateSetTimeout();}
return;};this._timeOutID=window.setTimeout(this._onLoop.bind(this),0);}
else
{this._isSetTimeOut=false;this._onLoop=function(time)
{if(this._running===true)
{return this._updateRAF(time);}
return;};this._timeOutID=this._owner.requestAnimationFrame(this._onLoop.bind(this));}};FORGE.RequestAnimationFrame.prototype.stop=function()
{if(this._isSetTimeOut)
{clearTimeout(this._timeOutID);}
else
{this._owner.cancelAnimationFrame(this._timeOutID);this._timeOutID=null;}
this._running=false;};FORGE.RequestAnimationFrame.prototype._updateRAF=function(time)
{this._called++;this._viewer.update(Math.floor(time));this._timeOutID=this._owner.requestAnimationFrame(this._onLoop.bind(this));};FORGE.RequestAnimationFrame.prototype._updateSetTimeout=function()
{this._called++;this._viewer.update(0);this._timeOutID=window.setTimeout(this._onLoop.bind(this),1000/30);};FORGE.RequestAnimationFrame.prototype.destroy=function()
{this.stop();this._viewer=null;this._timeOutId=null;this._onLoop=null;this._owner=null;};Object.defineProperty(FORGE.RequestAnimationFrame.prototype,"running",{get:function()
{return this._running;}});FORGE.History=function(viewer)
{this._viewer=viewer;this._config;this._enabled=false;FORGE.BaseObject.call(this,"History");};FORGE.History.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.History.prototype.constructor=FORGE.History;FORGE.History.DEFAULT_CONFIG={enabled:true};FORGE.History.prototype._parseConfig=function(config)
{this._config=(FORGE.Utils.extendSimpleObject(FORGE.History.DEFAULT_CONFIG,config));this._enabled=(typeof this._config.enabled==="boolean")?this._config.enabled:true;if(this._enabled===true)
{this._enable();}};FORGE.History.prototype._enable=function()
{this._viewer.story.onSceneLoadStart.add(this._sceneLoadStartHandler,this);this._viewer.i18n.onLocaleChangeComplete.add(this._localeChangeCompleteHandler,this);window.addEventListener("popstate",this._onPopStateHandler,false);};FORGE.History.prototype._disable=function()
{this._viewer.story.onSceneLoadStart.remove(this._sceneLoadStartHandler,this);this._viewer.i18n.onLocaleChangeComplete.remove(this._localeChangeCompleteHandler,this);window.removeEventListener("popstate",this._onPopStateHandler,false);};FORGE.History.prototype._sceneLoadStartHandler=function()
{this._addState();};FORGE.History.prototype._localeChangeCompleteHandler=function()
{this._updateState();};FORGE.History.prototype._addState=function()
{this.log("_addState");var scene=this._viewer.story.scene;var newState={"viewer":{uid:this._viewer.uid},"scene":{uid:scene.uid},"locale":this._viewer.i18n.locale};var currentState=window.history.state;if(currentState===null)
{window.history.replaceState(newState,scene.name,this._generateHash(scene));}
else if(currentState.scene.uid!==newState.scene.uid)
{window.history.pushState(newState,scene.name,this._generateHash(scene));}};FORGE.History.prototype._updateState=function()
{this.log("_updateState");var currentState=(window.history.state);if(this._isStateValid(currentState))
{var scene=FORGE.UID.get(currentState.scene.uid);currentState.locale=this._viewer.i18n.locale;window.history.replaceState(currentState,scene.name,this._generateHash((scene)));}};FORGE.History.prototype._generateHash=function(scene)
{var re=/(?:#|&)(\w+)=(\w+)/g;var hash=window.location.hash;var rr=re.exec(hash);var result="";while(rr!==null)
{if(rr[1]!=="uid")
{result+="&"+rr[1]+"="+rr[2];}
rr=re.exec(hash);}
return"#"+scene.slug+"&uid="+scene.uid+result;};FORGE.History.prototype._onPopStateHandler=function(event)
{if(event.state===null)
{return;}
var viewer=FORGE.UID.get(event.state.viewer.uid);viewer.history.log("_onPopStateHandler");viewer.story.scene=event.state.scene.uid;};FORGE.History.prototype._isStateValid=function(state)
{if(state===null)
{return false;}
var viewerValid=(typeof state.viewer!=="undefined"&&typeof state.viewer.uid==="string");var sceneValid=(typeof state.scene!=="undefined"&&typeof state.scene.uid==="string");return(viewerValid===true&&sceneValid===true);};FORGE.History.prototype.addConfig=function(config)
{this._parseConfig(config);};FORGE.History.prototype.destroy=function()
{this._disable();this._viewer=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.History.prototype,"enabled",{get:function()
{return this._enabled;}});FORGE.LocaleManager=function(viewer)
{this._viewer=viewer;this._config=null;this._locales=null;this._localeIndex=-1;this._defaultLocale="";this._enabled=true;this._onLocaleChangeRequest=null;this._onLocaleChangeComplete=null;FORGE.BaseObject.call(this,"LocaleManager");this._boot();};FORGE.LocaleManager.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.LocaleManager.prototype.constructor=FORGE.LocaleManager;FORGE.LocaleManager.prototype._boot=function()
{this.log("FORGE.LocaleManager._boot();");this._locales=new FORGE.Collection();};FORGE.LocaleManager.prototype.addConfig=function(config)
{this._parseConfig(config);};FORGE.LocaleManager.prototype._parseConfig=function(config)
{this._config=config;this._enabled=(typeof config.enabled==="boolean")?config.enabled:true;if(typeof config.auto!=="undefined"&&config.auto===true&&FORGE.Device.language!=="")
{this._defaultLocale=FORGE.Device.language;}
else if(typeof config.default==="string")
{this._defaultLocale=config.default;}
if(this._enabled===false)
{this.warn("FORGE.LocaleManager: locale management is deactivated");return;}
if(typeof config.locales!=="undefined")
{var configLength=config.locales.length;var currentLocaleLoaded=false;for(var i=0,ii=configLength;i<ii;i++)
{if(this._addLocale(config.locales[i])===true)
{currentLocaleLoaded=true;}}
if(currentLocaleLoaded===false)
{if(this._indexOfLocale(this._defaultLocale)===-1)
{this._defaultLocale=config.locales[0].uid;}
this._setLocaleIndex(this._indexOfLocale(config.locales[0].uid));}}};FORGE.LocaleManager.prototype._indexOfLocale=function(uid)
{var locale;for(var i=0,ii=this._locales.size;i<ii;i++)
{locale=this._locales.get(i);if(locale.uid.toLowerCase()===uid.toLowerCase())
{return i;}}
return-1;};FORGE.LocaleManager.prototype._setLocaleIndex=function(index)
{if(index<0||index>=this._locales.size)
{throw"The locale you are trying to set doesn't exist";}
if(this._localeIndex===index)
{this.warn("FORGE.LocaleManager: You're trying to set a locale that is already the actual locale");return;}
this._localeIndex=index;if(this._onLocaleChangeRequest!==null)
{this._onLocaleChangeRequest.dispatch();}
this._locales.get(this._localeIndex).loadFiles();};FORGE.LocaleManager.prototype._addLocale=function(config)
{var locale;var i=this._indexOfLocale(config.uid);if(i===-1)
{locale=new FORGE.Locale(this._viewer);locale.onLocaleAllFilesLoaded.add(this._localeAllFilesLoaded,this);i=this._locales.add(locale)-1;}
else
{locale=this._locales.get(i);}
locale.addConfig(config);if(i===this._localeIndex||this._defaultLocale.toLowerCase()===config.uid.toLowerCase())
{locale.loadFiles();if(this._localeIndex===-1)
{this._setLocaleIndex(i);}
return true;}
return false;};FORGE.LocaleManager.prototype._localeAllFilesLoaded=function()
{this.log("FORGE.LocaleManager._localeAllFilesLoaded();");if(this._onLocaleChangeComplete!==null)
{this._onLocaleChangeComplete.dispatch();}};FORGE.LocaleManager.prototype.getValue=function(key,jsonKey)
{if(this._localeIndex===-1)
{this.warn("FORGE.LocaleManager: You trying to get a value with no locale selected!");return key;}
var value=this._locales.get(this._localeIndex).getValue(key,jsonKey);var defaultLocalIndex=this._indexOfLocale(this._defaultLocale);if(this._localeIndex!==defaultLocalIndex&&defaultLocalIndex!==-1&&value===key)
{value=this._locales.get(defaultLocalIndex).getValue(key,jsonKey);}
return value;};FORGE.LocaleManager.prototype.hasValue=function(key,jsonKey)
{if(this._localeIndex===-1)
{return false;}
var available=this._locales.get(this._localeIndex).hasValue(key,jsonKey);var defaultLocalIndex=this._indexOfLocale(this._defaultLocale);if(this._localeIndex!==defaultLocalIndex&&defaultLocalIndex!==-1&&available===false)
{available=this._locales.get(defaultLocalIndex).hasValue(key,jsonKey);}
return available;};FORGE.LocaleManager.prototype.destroy=function()
{this._viewer=null;if(this._locales!==null)
{for(var i=0,ii=this._locales.size;i<ii;i++)
{this._locales.get(i).destroy();}
this._locales=null;}
if(this._onLocaleChangeRequest!==null)
{this._onLocaleChangeRequest.destroy();this._onLocaleChangeRequest=null;}
if(this._onLocaleChangeComplete!==null)
{this._onLocaleChangeComplete.destroy();this._onLocaleChangeComplete=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.LocaleManager.prototype,"locale",{get:function()
{if(this._localeIndex!==-1)
{return this._locales.get(this._localeIndex).uid;}
else
{return"";}},set:function(value)
{var index;if(typeof value==="number"&&value<this._locales.size)
{index=value;}
else if(typeof value==="string")
{index=this._indexOfLocale(value);}
this._setLocaleIndex(index);}});Object.defineProperty(FORGE.LocaleManager.prototype,"localeIndex",{get:function()
{return this._localeIndex;},set:function(value)
{if(typeof value==="number"&&value<this._locales.size)
{this._setLocaleIndex(value);}}});Object.defineProperty(FORGE.LocaleManager.prototype,"localeObject",{get:function()
{if(this._localeIndex!==-1)
{return this._locales.get(this._localeIndex);}
else
{return null;}}});Object.defineProperty(FORGE.LocaleManager.prototype,"locales",{get:function()
{var locales=[];for(var i=0,ii=this._locales.size;i<ii;i++)
{locales.push(this._locales.get(i).uid);}
return locales;}});Object.defineProperty(FORGE.LocaleManager.prototype,"onLocaleChangeRequest",{get:function()
{if(this._onLocaleChangeRequest===null)
{this._onLocaleChangeRequest=new FORGE.EventDispatcher(this);}
return this._onLocaleChangeRequest;}});Object.defineProperty(FORGE.LocaleManager.prototype,"onLocaleChangeComplete",{get:function()
{if(this._onLocaleChangeComplete===null)
{this._onLocaleChangeComplete=new FORGE.EventDispatcher(this);}
return this._onLocaleChangeComplete;}});FORGE.LocaleString=function(viewer,key,jsonKey,defaultStr)
{this._viewer=viewer;this._key=key;this._jsonKey=jsonKey;this._defaultValue=defaultStr;this._value=null;FORGE.BaseObject.call(this,"LocaleString");};FORGE.LocaleString.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.LocaleString.prototype.constructor=FORGE.LocaleString;FORGE.LocaleString.prototype.destroy=function()
{this._viewer=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.LocaleString.prototype,"key",{get:function()
{return this._key;},set:function(value)
{this._key=value;}});Object.defineProperty(FORGE.LocaleString.prototype,"jsonKey",{get:function()
{return this._jsonKey;},set:function(value)
{this._jsonKey=value;}});Object.defineProperty(FORGE.LocaleString.prototype,"value",{get:function()
{var locale=this._viewer.i18n.locale;if(locale==="")
{if(typeof this._defaultValue!=="undefined")
{return this._defaultValue;}
return this._key;}
this._value=this._viewer.i18n.getValue((this._key),this._jsonKey);if(this._value===this._key&&typeof this._defaultValue!=="undefined")
{this._value=this._defaultValue;}
return this._value;}});Object.defineProperty(FORGE.LocaleString.prototype,"loaded",{get:function()
{var value=this._viewer.i18n.getValue((this._key),this._jsonKey);return(typeof value!=="undefined"&&value!==this._key);}});FORGE.Locale=function(viewer)
{this._viewer=viewer;this._name="";this._files=null;this.onLocaleFileLoaded=null;this.onLocaleAllFilesLoaded=null;FORGE.BaseObject.call(this,"Locale");this._boot();};FORGE.Locale.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Locale.prototype.constructor=FORGE.Locale;FORGE.Locale.prototype._boot=function()
{this._files=new FORGE.Collection();this.onLocaleFileLoaded=new FORGE.EventDispatcher(this);this.onLocaleAllFilesLoaded=new FORGE.EventDispatcher(this);};FORGE.Locale.prototype.addConfig=function(config)
{if(typeof config.uid==="string")
{this._uid=config.uid;}
if(this._name===""&&typeof config.name==="string")
{this._name=config.name;}
if(typeof config.files!=="undefined")
{var file;for(var i=0,ii=config.files.length;i<ii;i++)
{file=(config.files[i]);if(this._getFileByKey(file.key)===null)
{file.loading=false;file.loaded=false;this._files.add(file);}}}
this.log("Locale.addConfig(); number of files : "+this._files.size);};FORGE.Locale.prototype.loadFiles=function()
{if(this._isAllFilesLoaded()===true)
{this.onLocaleAllFilesLoaded.dispatch();return true;}
var file;for(var i=0,ii=this._files.size;i<ii;i++)
{file=(this._files.get(i));if(file.loading===false&&file.loaded===false)
{this._loadFile(file);}}};FORGE.Locale.prototype._getFileByKey=function(key)
{var file;for(var i=0,ii=this._files.size;i<ii;i++)
{file=this._files.get(i);if(file.key===key)
{return file;}}
return null;};FORGE.Locale.prototype._loadFile=function(file)
{if(file.loading===false&&file.loaded===false)
{file.loading=true;this._viewer.load.json(file.key,file.url,this._loadFileComplete,this);}};FORGE.Locale.prototype._loadFileComplete=function(file)
{var _file=this._getFileByKey(file.key);_file.loading=false;_file.loaded=true;this.log("loadFileComplete(); "+_file.key);this.onLocaleFileLoaded.dispatch();if(this._isAllFilesLoaded()===true)
{this.onLocaleAllFilesLoaded.dispatch();}};FORGE.Locale.prototype._isAllFilesLoaded=function()
{var file;for(var i=0,ii=this._files.size;i<ii;i++)
{file=this._files.get(i);if(file.loaded===false)
{return false;}}
return true;};FORGE.Locale.prototype.getValue=function(key,jsonKey)
{var file,json;for(var i=0,ii=this._files.size;i<ii;i++)
{file=this._files.get(i);if(this._viewer.cache.has(FORGE.Cache.types.JSON,file.key)===true&&(typeof jsonKey==="undefined"||jsonKey===file.key))
{json=this._viewer.cache.get(FORGE.Cache.types.JSON,file.key);if(typeof json.data[key]!=="undefined")
{return json.data[key];}}}
if(typeof jsonKey!=="undefined")
{this.warn("FORGE.Locale: value not found into the specified JSON file, try to find it in all files.");this.getValue(key);}
return key;};FORGE.Locale.prototype.hasValue=function(key,jsonKey)
{var file,json;for(var i=0,ii=this._files.size;i<ii;i++)
{file=this._files.get(i);if(this._viewer.cache.has(FORGE.Cache.types.JSON,file.key)===true&&(typeof jsonKey==="undefined"||jsonKey===file.key))
{json=this._viewer.cache.get(FORGE.Cache.types.JSON,file.key);if(typeof json.data[key]!=="undefined")
{return true;}}}
if(typeof jsonKey!=="undefined")
{this.warn("FORGE.Locale: key not found into the specified JSON file, try to find it in all files.");this.hasValue(key);}
return false;};FORGE.Locale.prototype.getKey=function(value,jsonKey)
{var file,json;for(var i=0,ii=this._files.size;i<ii;i++)
{file=(this._files.get(i));if(this._viewer.cache.has(FORGE.Cache.types.JSON,file.key)===true&&(typeof jsonKey==="undefined"||jsonKey===file.key))
{json=this._viewer.cache.get(FORGE.Cache.types.JSON,file.key);for(var key in json.data)
{if(json.data[key]===value)
{return key;}}}}
if(typeof jsonKey!=="undefined")
{this.warn("FORGE.Locale: value not found into the specified JSON file, try to find it in all files.");this.getKey(value);}
return undefined;};FORGE.Locale.prototype.destroy=function()
{this._viewer=null;this._files=null;this.onLocaleFileLoaded.destroy();this.onLocaleFileLoaded=null;this.onLocaleAllFilesLoaded.destroy();this.onLocaleAllFilesLoaded=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Locale.prototype,"name",{get:function()
{return this._name;}});FORGE.BaseBinding=function(viewer,className,context,name)
{this._viewer=viewer;this._context=context||this;this._name=name||"";FORGE.BaseObject.call(this,className);};FORGE.BaseBinding.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.BaseBinding.prototype.constructor=FORGE.BaseBinding;FORGE.BaseBinding.prototype.destroy=function()
{this._context=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.BaseBinding.prototype,"name",{get:function()
{return this._name;}});Object.defineProperty(FORGE.BaseBinding.prototype,"type",{get:function()
{return this._className;}});FORGE.KeyBinding=function(viewer,keysIn,down,up,hold,keysOut,context,name)
{this._keysIn=keysIn;this._down=down||null;this._up=up||null;this._hold=hold||null;this._keysOut=keysOut;this._waitToHold=false;this._pressed=false;this._downComplete=false;this._downCount=0;this._holdCount=0;this._upCount=0;this._downActionEventDispatcher=null;this._holdActionEventDispatcher=null;this._upActionEventDispatcher=null;FORGE.BaseBinding.call(this,viewer,"KeyBinding",context,name);this._boot();};FORGE.KeyBinding.prototype=Object.create(FORGE.BaseBinding.prototype);FORGE.KeyBinding.prototype.constructor=FORGE.KeyBinding;FORGE.KeyBinding.prototype._boot=function()
{if(typeof this._keysIn==="undefined"||this._keysIn===null)
{this._keysIn=[];}
if(typeof this._keysOut==="undefined")
{this._keysOut=null;}
if(FORGE.Utils.isTypeOf(this._down,"string")===true||FORGE.Utils.isArrayOf(this._down,"string"))
{this._downActionEventDispatcher=new FORGE.ActionEventDispatcher(this._viewer,"onDown");this._downActionEventDispatcher.addActions((this._down));}
if(FORGE.Utils.isTypeOf(this._hold,"string")===true||FORGE.Utils.isArrayOf(this._hold,"string"))
{this._holdActionEventDispatcher=new FORGE.ActionEventDispatcher(this._viewer,"onHold");this._holdActionEventDispatcher.addActions((this._hold));}
if(FORGE.Utils.isTypeOf(this._up,"string")===true||FORGE.Utils.isArrayOf(this._up,"string"))
{this._upActionEventDispatcher=new FORGE.ActionEventDispatcher(this._viewer,"onUp");this._upActionEventDispatcher.addActions((this._up));}};FORGE.KeyBinding.prototype.hasKeyIn=function(keyCode)
{if(typeof this._keysIn==="number"&&this._keysIn===keyCode)
{return true;}
else if(typeof this._keysIn.indexOf==="function")
{return this._keysIn.indexOf(keyCode)!==-1;}
return false;};FORGE.KeyBinding.prototype.hasKeyOut=function(keyCode)
{if(this._keysOut===null)
{return false;}
else if(typeof this._keysOut==="number"&&this._keysOut===keyCode)
{return true;}
else if(typeof this._keysOut.indexOf==="function")
{return this._keysOut.indexOf(keyCode)!==-1;}
return false;};FORGE.KeyBinding.prototype.down=function(event)
{this.log("down");this._downCount++;this._pressed=true;if(typeof this._down==="function")
{this._down.call(this._context,this,event);}
else if(this._downActionEventDispatcher!==null)
{this._downActionEventDispatcher.dispatch();}};FORGE.KeyBinding.prototype.waitToHold=function()
{this._waitToHold=true;var _downCount=this._downCount;var downCompleteCallback=function()
{this.log("downCompleteCallback "+_downCount+" "+this._downCount);if(_downCount===this._downCount)
{this._downComplete=true;}};return downCompleteCallback.bind(this);};FORGE.KeyBinding.prototype.up=function(event)
{this.log("up");this._upCount++;this._pressed=false;this._downComplete=false;if(typeof this._up==="function")
{this._up.call(this._context,this,event);}
else if(this._upActionEventDispatcher!==null)
{this._upActionEventDispatcher.dispatch();}};FORGE.KeyBinding.prototype.hold=function()
{this.log("hold");this._holdCount++;if(typeof this._hold==="function")
{this._hold.call(this._context,this);}
else if(this._holdActionEventDispatcher!==null)
{this._holdActionEventDispatcher.dispatch();}};FORGE.KeyBinding.prototype.destroy=function()
{this._keysIn=null;this._down=null;this._up=null;this._hold=null;this._keysOut=null;if(this._downActionEventDispatcher!==null)
{this._downActionEventDispatcher.destroy();this._downActionEventDispatcher=null;}
if(this._holdActionEventDispatcher!==null)
{this._holdActionEventDispatcher.destroy();this._holdActionEventDispatcher=null;}
if(this._upActionEventDispatcher!==null)
{this._upActionEventDispatcher.destroy();this._upActionEventDispatcher=null;}
FORGE.BaseBinding.prototype.destroy.call(this);};Object.defineProperty(FORGE.KeyBinding.prototype,"pressed",{get:function()
{return this._pressed;}});Object.defineProperty(FORGE.KeyBinding.prototype,"downCount",{get:function()
{return this._downCount;}});Object.defineProperty(FORGE.KeyBinding.prototype,"upCount",{get:function()
{return this._upCount;}});Object.defineProperty(FORGE.KeyBinding.prototype,"holdCount",{get:function()
{return this._holdCount;}});Object.defineProperty(FORGE.KeyBinding.prototype,"hasToWaitToHold",{get:function()
{return this._waitToHold;}});Object.defineProperty(FORGE.KeyBinding.prototype,"downComplete",{get:function()
{return this._downComplete;}});FORGE.ButtonBinding=function(viewer,buttonsIn,down,up,hold,buttonsOut,context,name)
{this._buttonsIn=buttonsIn;this._down=down||null;this._up=up||null;this._hold=hold||null;this._buttonsOut=buttonsOut;this._waitToHold=false;this._pressed=false;this._downComplete=false;this._downCount=0;this._holdCount=0;this._upCount=0;this._downActionEventDispatcher=null;this._holdActionEventDispatcher=null;this._upActionEventDispatcher=null;FORGE.BaseBinding.call(this,viewer,"ButtonBinding",context,name);this._boot();};FORGE.ButtonBinding.prototype=Object.create(FORGE.BaseBinding.prototype);FORGE.ButtonBinding.prototype.constructor=FORGE.ButtonBinding;FORGE.ButtonBinding.prototype._boot=function()
{if(typeof this._buttonsIn==="undefined"||this._buttonsIn===null)
{this._buttonsIn=[];}
if(typeof this._buttonsOut==="undefined")
{this._buttonsOut=null;}
if(FORGE.Utils.isTypeOf(this._down,"string")===true||FORGE.Utils.isArrayOf(this._down,"string"))
{this._downActionEventDispatcher=new FORGE.ActionEventDispatcher(this._viewer,"onPressed");this._downActionEventDispatcher.addActions((this._down));}
if(FORGE.Utils.isTypeOf(this._hold,"string")===true||FORGE.Utils.isArrayOf(this._hold,"string"))
{this._holdActionEventDispatcher=new FORGE.ActionEventDispatcher(this._viewer,"onHold");this._holdActionEventDispatcher.addActions((this._hold));}
if(FORGE.Utils.isTypeOf(this._up,"string")===true||FORGE.Utils.isArrayOf(this._up,"string"))
{this._upActionEventDispatcher=new FORGE.ActionEventDispatcher(this._viewer,"onReleased");this._upActionEventDispatcher.addActions((this._up));}};FORGE.ButtonBinding.prototype.hasButtonIn=function(button)
{return this._buttonsIn===button||(typeof this._buttonsIn.indexOf==="function"&&this._buttonsIn.indexOf(button)!==-1);};FORGE.ButtonBinding.prototype.hasButtonOut=function(button)
{return this._buttonsOut!==null&&(this._buttonsOut===button||(typeof this._buttonsOut.indexOf==="function"&&this._buttonsOut.indexOf(button)!==-1));};FORGE.ButtonBinding.prototype.down=function(value)
{this.log("down");this._pressed=true;this._downCount++;if(typeof this._down==="function")
{this._down.call(this._context,this,value);}
else if(this._downActionEventDispatcher!==null)
{this._downActionEventDispatcher.dispatch();}};FORGE.ButtonBinding.prototype.hold=function()
{this.log("hold");this._holdCount++;if(typeof this._hold==="function")
{this._hold.call(this._context,this);}
else if(this._holdActionEventDispatcher!==null)
{this._holdActionEventDispatcher.dispatch();}};FORGE.ButtonBinding.prototype.up=function(value)
{this.log("up");this._pressed=false;this._downComplete=false;this._upCount++;if(typeof this._up==="function")
{this._up.call(this._context,this,value);}
else if(this._upActionEventDispatcher!==null)
{this._upActionEventDispatcher.dispatch();}};FORGE.ButtonBinding.prototype.waitToHold=function()
{this._waitToHold=true;var _downCount=this._downCount;var downCompleteCallback=function()
{this.log("downCompleteCallback "+_downCount+" "+this._downCount);if(_downCount===this._downCount)
{this._downComplete=true;}};return downCompleteCallback.bind(this);};FORGE.ButtonBinding.prototype.destroy=function()
{this._buttonsIn=null;this._down=null;this._up=null;this._hold=null;this._buttonsOut=null;if(this._downActionEventDispatcher!==null)
{this._downActionEventDispatcher.destroy();this._downActionEventDispatcher=null;}
if(this._holdActionEventDispatcher!==null)
{this._holdActionEventDispatcher.destroy();this._holdActionEventDispatcher=null;}
if(this._upActionEventDispatcher!==null)
{this._upActionEventDispatcher.destroy();this._upActionEventDispatcher=null;}
FORGE.BaseBinding.prototype.destroy.call(this);};Object.defineProperty(FORGE.ButtonBinding.prototype,"pressed",{get:function()
{return this._pressed;}});Object.defineProperty(FORGE.ButtonBinding.prototype,"downCount",{get:function()
{return this._downCount;}});Object.defineProperty(FORGE.ButtonBinding.prototype,"upCount",{get:function()
{return this._upCount;}});Object.defineProperty(FORGE.ButtonBinding.prototype,"holdCount",{get:function()
{return this._holdCount;}});Object.defineProperty(FORGE.ButtonBinding.prototype,"hasToWaitToHold",{get:function()
{return this._waitToHold;}});Object.defineProperty(FORGE.ButtonBinding.prototype,"downComplete",{get:function()
{return this._downComplete;}});FORGE.AxisBinding=function(viewer,axis,change,context,name)
{this._axis=axis;this._change=change||null;this._changeActionEventDispatcher=null;FORGE.BaseBinding.call(this,viewer,"AxisBinding",context,name);this._boot();};FORGE.AxisBinding.prototype=Object.create(FORGE.BaseBinding.prototype);FORGE.AxisBinding.prototype.constructor=FORGE.AxisBinding;FORGE.AxisBinding.prototype._boot=function()
{if(FORGE.Utils.isTypeOf(this._change,"string")===true||FORGE.Utils.isArrayOf(this._change,"string"))
{this._changeActionEventDispatcher=new FORGE.ActionEventDispatcher(this._viewer,"onChange");this._changeActionEventDispatcher.addActions((this._change));}};FORGE.AxisBinding.prototype.change=function(value)
{this.log("change");this._pressed=true;if(typeof this._change==="function")
{this._change.call(this._context,this,value);}
else if(this._changeActionEventDispatcher!==null)
{this._changeActionEventDispatcher.dispatch();}};FORGE.AxisBinding.prototype.destroy=function()
{this._change=null;if(this._changeActionEventDispatcher!==null)
{this._changeActionEventDispatcher.destroy();this._changeActionEventDispatcher=null;}
FORGE.BaseBinding.prototype.destroy.call(this);};Object.defineProperty(FORGE.AxisBinding.prototype,"axis",{get:function()
{return this._axis;}});FORGE.Keyboard=function(viewer)
{this._viewer=viewer;this._enabled=true;this._keyBindings=null;this._keyPressed=null;this._keyDownBind=null;this._keyUpBind=null;FORGE.BaseObject.call(this,"Keyboard");this._boot();};FORGE.Keyboard.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Keyboard.prototype.constructor=FORGE.Keyboard;FORGE.Keyboard.prototype._boot=function()
{this._keyBindings=[];this._keyPressed=[];this._keyDownBind=this._keyDownHandler.bind(this);this._keyUpBind=this._keyUpHandler.bind(this);window.addEventListener("keydown",this._keyDownBind,false);window.addEventListener("keyup",this._keyUpBind,false);};FORGE.Keyboard.prototype._keyDownHandler=function(event)
{this._processKeyDown(event);};FORGE.Keyboard.prototype._keyUpHandler=function(event)
{this._processKeyUp(event);};FORGE.Keyboard.prototype._indexOfBinding=function(value)
{if(this._keyBindings===null||this._keyBindings.length===0)
{return-1;}
if(typeof value==="object"&&value.type==="KeyBinding")
{return this._keyBindings.indexOf(value);}
if(typeof value==="number")
{for(var i=0,ii=this._keyBindings.length;i<ii;i++)
{if(this._keyBindings[i].hasKeyIn(value)===true)
{return i;}}}
return-1;};FORGE.Keyboard.prototype._addKeyPressed=function(keyCode)
{if(this._keyPressed.indexOf(keyCode)===-1)
{this._keyPressed.push(keyCode);return true;}
return false;};FORGE.Keyboard.prototype._removeKeyPressed=function(keyCode)
{var index=this._keyPressed.indexOf(keyCode);if(index!==-1)
{this._keyPressed.splice(index,1);return true;}
return false;};FORGE.Keyboard.prototype._processKeyDown=function(event)
{if(this._enabled===false)
{return;}
var keyCode=event.keyCode;this.log("keyDown "+keyCode);if(this._addKeyPressed(keyCode)===true)
{this._applyKeyDown(event);}};FORGE.Keyboard.prototype._applyKeyDown=function(event)
{var keyCode=event.keyCode;if(this.isKeyOut(keyCode)===true)
{return;}
var keyBindings=this.getBindings(keyCode);var keyBinding;for(var i=0,ii=keyBindings.length;i<ii;i++)
{keyBinding=keyBindings[i];if(keyBinding.pressed===false)
{keyBinding.down(event);}}};FORGE.Keyboard.prototype._processKeyUp=function(event)
{if(this._enabled===false)
{return;}
var keyCode=event.keyCode;this.log("keyUp "+keyCode);if(this._removeKeyPressed(keyCode)===true)
{this._applyKeyUp(event);}};FORGE.Keyboard.prototype._applyKeyUp=function(event)
{var keyCode=event.keyCode;if(this.isKeyOut(keyCode)===true)
{return;}
var keyBindings=this.getBindings(keyCode);var keyBinding;for(var i=0,ii=keyBindings.length;i<ii;i++)
{keyBinding=keyBindings[i];for(var j=0,jj=this._keyPressed.length;j<jj;j++)
{if(keyBinding.hasKeyIn(this._keyPressed[j]))
{return;}}
keyBinding.up(event);for(var k=0,kk=this._keyPressed.length;k<kk;k++)
{if(keyBinding.hasKeyOut(this._keyPressed[k]))
{var keyboardEventInit={keycode:this._keyPressed[k],ctrlKey:event.ctrlKey,shiftKey:event.shiftKey,altKey:event.altKey};var keyboardEvent=new KeyboardEvent("keydown",keyboardEventInit);this._applyKeyDown(keyboardEvent);}}}};FORGE.Keyboard.prototype.update=function()
{var keyBinding;for(var i=0,ii=this._keyBindings.length;i<ii;i++)
{keyBinding=this._keyBindings[i];if(keyBinding.pressed===true)
{if(keyBinding.hasToWaitToHold===true&&keyBinding.downComplete===false)
{continue;}
keyBinding.hold();}}};FORGE.Keyboard.prototype.isKeyPressed=function(keyCode)
{return this._keyPressed.indexOf(keyCode)!==-1;};FORGE.Keyboard.prototype.isKeyOut=function(keyCode)
{var keyBinding;for(var i=0,ii=this._keyBindings.length;i<ii;i++)
{keyBinding=this._keyBindings[i];if(keyBinding.pressed===true&&keyBinding.hasKeyOut(keyCode)===true)
{return true;}}
return false;};FORGE.Keyboard.prototype.addBinding=function(keyBinding)
{if(typeof keyBinding!=="object"&&keyBinding.type!=="KeyBinding")
{return false;}
var index=this._indexOfBinding(keyBinding);if(index===-1)
{this._keyBindings.push(keyBinding);return true;}
else
{this.warn("Trying to add a duplicate key binding on keyboard!");}
return false;};FORGE.Keyboard.prototype.removeBinding=function(keyBinding)
{var index=this._indexOfBinding(keyBinding);if(index!==-1)
{this._keyBindings[index].destroy();this._keyBindings.splice(index,1);return true;}
return false;};FORGE.Keyboard.prototype.hasBinding=function(value)
{return this._indexOfBinding(value)!==-1;};FORGE.Keyboard.prototype.getBindings=function(keyCode)
{var bindings=[];for(var i=0,ii=this._keyBindings.length;i<ii;i++)
{if(this._keyBindings[i].hasKeyIn(keyCode)===true)
{bindings.push(this._keyBindings[i]);}}
return bindings;};FORGE.Keyboard.prototype.destroy=function()
{this._viewer=null;window.removeEventListener("keydown",this._keyDownBind,false);window.removeEventListener("keyup",this._keyUpBind,false);var i=this._keyBindings.length;while(i--)
{this.removeBinding(this._keyBindings[i]);}
this._keyBindings=null;this._keyDownBind=null;this._keyUpBind=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Keyboard.prototype,"enabled",{get:function()
{return this._enabled;},set:function(value)
{this._enabled=Boolean(value);}});FORGE.Drag=function(displayObject)
{this._displayObject=displayObject;this._handleObject=displayObject;this._enabled=false;this._constrain=null;this._axis="";this._startPostion=null;this._lastMousePosition=null;this._dragging=false;this._revert=false;this._reverting=false;this._revertTween=null;this._revertDuration=200;this._originalAlpha=1;this._alpha=1;this._revertEasing=FORGE.Easing.LINEAR;this._onStart=null;this._onDrag=null;this._onStop=null;this._onRevert=null;FORGE.BaseObject.call(this,"Drag");this._boot();};FORGE.Drag.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Drag.prototype.constructor=FORGE.Drag;FORGE.Drag.prototype._boot=function()
{this._alpha=this._displayObject.alpha;};FORGE.Drag.prototype._setHandleObject=function(displayObject)
{if(this._handleObject!==null)
{this._unsetHandleObject();}
this._handleObject=displayObject;this._handleObject.pointer.enabled=true;this._handleObject.pointer.onPanStart.add(this._panStartHandler,this);this._handleObject.pointer.onPanMove.add(this._panMoveHandler,this);this._handleObject.pointer.onPanEnd.add(this._panEndHandler,this);};FORGE.Drag.prototype._unsetHandleObject=function()
{if(this._handleObject!==null)
{this._handleObject.pointer.onPanStart.remove(this._panStartHandler,this);this._handleObject.pointer.onPanMove.remove(this._panMoveHandler,this);this._handleObject.pointer.onPanEnd.remove(this._panEndHandler,this);}
this._handleObject=null;};FORGE.Drag.prototype._panStartHandler=function(event)
{this.log("_panStartHandler");var hammerEvent=event.data;var mouseEvent=event.data["srcEvent"];if(typeof mouseEvent.touches!=="undefined"&&typeof mouseEvent.touches[0]==="object")
{mouseEvent=mouseEvent.touches[0];}
if(this._reverting===true||hammerEvent.target!==this._handleObject.dom||this._isPositionValid()===false)
{return;}
this._dragging=true;this._startPostion={x:this._displayObject.x,y:this._displayObject.y};this._displayObject.top=null;this._displayObject.right=null;this._displayObject.bottom=null;this._displayObject.left=null;this._lastMousePosition={x:mouseEvent.pageX,y:mouseEvent.pageY};this._originalAlpha=this._displayObject.alpha;this._displayObject.alpha=this._alpha;if(this._onStart!==null)
{this._onStart.dispatch();}};FORGE.Drag.prototype._panEndHandler=function()
{this.log("_panEndHandler");if(this._dragging!==true)
{return;}
this._dragging=false;if(this._onStop!==null)
{this._onStop.dispatch();}
if(this._revert===true&&this._revertTween!==null)
{this._reverting=true;this._revertTween.to({x:this._startPostion.x,y:this._startPostion.y},this._revertDuration,this._revertEasing).start();}
else
{this._displayObject.alpha=this._originalAlpha;}
this._startPostion=null;this._lastMousePosition=null;};FORGE.Drag.prototype._panMoveHandler=function(event)
{this.log("_panMoveHandler");if(this._dragging!==true)
{return;}
var mouseEvent=event.data["srcEvent"];if(typeof mouseEvent.touches!=="undefined"&&typeof mouseEvent.touches[0]==="object")
{mouseEvent=mouseEvent.touches[0];}
var position={x:mouseEvent.pageX,y:mouseEvent.pageY};var dx=position.x-this._lastMousePosition.x;var dy=position.y-this._lastMousePosition.y;this._lastMousePosition=position;if(this._constrain!==null)
{var o=this._displayObject.globalOffset;var po=this._displayObject.parent.globalOffset;var co=this._constrain.globalOffset;if(this._axis===""||this._axis==="x")
{if(o.left+dx<co.left)
{this.log("out left");this._displayObject.x=Math.abs(po.left-co.left);}
else if(o.left+dx+this._displayObject.pixelWidth>co.left+this._constrain.innerWidth)
{this.log("out right");this._displayObject.x=Math.abs(po.left-co.left)+this._constrain.innerWidth-this._displayObject.pixelWidth;}
else
{this._displayObject.x+=dx;}}
if(this._axis===""||this._axis==="y")
{if(o.top+dy<co.top)
{this.log("out top");this._displayObject.y=Math.abs(po.top-co.top);}
else if(o.top+dy+this._displayObject.pixelHeight>co.top+this._constrain.innerHeight)
{this.log("out bottom");this._displayObject.y=Math.abs(po.top-co.top)+this._constrain.innerHeight-this._displayObject.pixelHeight;}
else
{this._displayObject.y+=dy;}}}
else
{if(this._axis===""||this._axis==="x")
{this._displayObject.x+=dx;}
if(this._axis===""||this._axis==="y")
{this._displayObject.y+=dy;}}
if(this._onDrag!==null)
{this._onDrag.dispatch();}};FORGE.Drag.prototype._revertCompleteHandler=function()
{this.log("_revertCompleteHandler");this._reverting=false;this._displayObject.alpha=this._originalAlpha;if(this._onRevert!==null)
{this._onRevert.dispatch();}};FORGE.Drag.prototype._isPositionValid=function()
{if(this._constrain===null)
{return true;}
var o=this._displayObject.globalOffset;var co=this._constrain.globalOffset;var left=(o.left<co.left);var right=(o.left+this._displayObject.pixelWidth>co.left+this._constrain.innerWidth);var top=(o.top<co.top);var bottom=(o.top+this._displayObject.pixelHeight>co.top+this._constrain.innerHeight);if(left===true||right===true||top===true||bottom===true)
{return false;}
return true;};FORGE.Drag.prototype.enable=function()
{this._enabled=true;this._setHandleObject(this._handleObject);};FORGE.Drag.prototype.disable=function()
{this._enabled=false;};FORGE.Drag.prototype.destroy=function()
{this.revert=false;if(this._onStart!==null)
{this._onStart.destroy();this._onStart=null;}
if(this._onDrag!==null)
{this._onDrag.destroy();this._onDrag=null;}
if(this._onStop!==null)
{this._onStop.destroy();this._onStop=null;}
if(this._onRevert!==null)
{this._onRevert.destroy();this._onRevert=null;}
this._handleObject=null;this._displayObject=null;this._constrain=null;this._lastMousePosition=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Drag.prototype,"enabled",{get:function()
{return this._enabled;},set:function(value)
{var enabled=Boolean(value);if(enabled===true)
{this.enable();}
else
{this.disable();}}});Object.defineProperty(FORGE.Drag.prototype,"dragging",{get:function()
{return this._dragging;}});Object.defineProperty(FORGE.Drag.prototype,"handle",{get:function()
{return this._handleObject;},set:function(value)
{this._setHandleObject(value);}});Object.defineProperty(FORGE.Drag.prototype,"constrain",{get:function()
{return this._constrain;},set:function(value)
{this._constrain=value;}});Object.defineProperty(FORGE.Drag.prototype,"progress",{get:function()
{if(this._constrain===null)
{return undefined;}
var o=this._displayObject.globalOffset;var co=this._constrain.globalOffset;var progressX=(o.left-co.left)/(this._constrain.innerWidth-this._displayObject.pixelWidth);var progressY=(o.top-co.top)/(this._constrain.innerHeight-this._displayObject.pixelHeight);return{x:progressX,y:progressY};}});Object.defineProperty(FORGE.Drag.prototype,"axis",{get:function()
{return this._axis;},set:function(value)
{if(value==="x"||value==="y")
{this._axis=value;}
else
{this._axis="";}}});Object.defineProperty(FORGE.Drag.prototype,"alpha",{get:function()
{return this._alpha;},set:function(value)
{if(typeof value==="number")
{this._alpha=value;}}});Object.defineProperty(FORGE.Drag.prototype,"reverting",{get:function()
{return this._reverting;}});Object.defineProperty(FORGE.Drag.prototype,"revert",{get:function()
{return this._revert;},set:function(value)
{this._revert=Boolean(value);if(this._revert===true&&this._revertTween===null)
{this._revertTween=new FORGE.Tween(this._displayObject.viewer,this._displayObject);this._revertTween.onComplete.add(this._revertCompleteHandler,this);this._displayObject.viewer.tween.add(this._revertTween);}
else if(this._revert===false&&this._revertTween!==null)
{this._displayObject.viewer.tween.remove(this._revertTween);this._revertTween.onComplete.remove(this._revertCompleteHandler,this);this._revertTween.destroy();this._revertTween=null;}}});Object.defineProperty(FORGE.Drag.prototype,"revertDuration",{get:function()
{return this._revertDuration;},set:function(value)
{if(typeof value==="number")
{this._revertDuration=value;}}});Object.defineProperty(FORGE.Drag.prototype,"revertEasing",{get:function()
{return this._revertEasing;},set:function(value)
{if(typeof value==="function")
{this._revertEasing=value;}}});Object.defineProperty(FORGE.Drag.prototype,"onStart",{get:function()
{if(this._onStart===null)
{this._onStart=new FORGE.EventDispatcher(this._displayObject);}
return this._onStart;}});Object.defineProperty(FORGE.Drag.prototype,"onDrag",{get:function()
{if(this._onDrag===null)
{this._onDrag=new FORGE.EventDispatcher(this._displayObject);}
return this._onDrag;}});Object.defineProperty(FORGE.Drag.prototype,"onStop",{get:function()
{if(this._onStop===null)
{this._onStop=new FORGE.EventDispatcher(this._displayObject);}
return this._onStop;}});Object.defineProperty(FORGE.Drag.prototype,"onRevert",{get:function()
{if(this._onRevert===null)
{this._onRevert=new FORGE.EventDispatcher(this._displayObject);}
return this._onRevert;}});FORGE.Pointer=function(displayObject)
{this._displayObject=displayObject;this._enabled=false;this._cursor=FORGE.Pointer.cursors.DEFAULT;this._hammer=null;this._listeners=[];this._tap=null;this._doubleTap=null;this._press=null;this._pan=null;this._pinch=null;this._rotate=null;this._swipe=null;this._onEnable=null;this._onDisable=null;this._onTap=null;this._onDoubleTap=null;this._onPressStart=null;this._onPressEnd=null;this._onPanStart=null;this._onPanMove=null;this._onPanEnd=null;this._onPinchStart=null;this._onPinchMove=null;this._onPinchEnd=null;this._onRotateStart=null;this._onRotateMove=null;this._onRotateEnd=null;this._onSwipe=null;this._onEnter=null;this._onLeave=null;this._onOver=null;this._onOut=null;this._onMove=null;this._onWheel=null;FORGE.BaseObject.call(this,"Pointer");this._boot();};FORGE.Pointer.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Pointer.prototype.constructor=FORGE.Pointer;FORGE.Pointer.prototype._boot=function()
{this._hammer=new Hammer.Manager(this._displayObject.dom);this._hammer.set({enable:false});};FORGE.Pointer.prototype._indexOfListener=function(event,callback,type)
{var listener;for(var i=0,ii=this._listeners.length;i<ii;i++)
{listener=this._listeners[i];if(listener.event===event&&listener.callback===callback&&listener.type===type)
{return i;}}
return-1;};FORGE.Pointer.prototype._addListener=function(event,callback,type)
{var index=this._indexOfListener(event,callback,type);if(index===-1)
{this._listeners.push({event:event,callback:callback,type:type});if(type===FORGE.Pointer.listenerTypes.NATIVE)
{this._displayObject.dom.addEventListener(event,Hammer.bindFn(callback,this));}
else if(type===FORGE.Pointer.listenerTypes.HAMMER)
{this._hammer.on(event,Hammer.bindFn(callback,this));}
return true;}
return false;};FORGE.Pointer.prototype._removeListener=function(event,callback,type)
{var index=this._indexOfListener(event,callback,type);if(index!==-1)
{this._listeners.splice(index,1);if(type===FORGE.Pointer.listenerTypes.NATIVE)
{this._displayObject.dom.removeEventListener(event,callback);}
else if(type===FORGE.Pointer.listenerTypes.HAMMER)
{this._hammer.off(event);}
return true;}
return false;};FORGE.Pointer.prototype._generateDestroyCallback=function(event,callback,type)
{var destroyCallback=function destroyCallback()
{this._removeListener(event,callback,type);};return destroyCallback;};FORGE.Pointer.prototype._tapHandler=function(event)
{if(this._onTap!==null&&this._enabled===true)
{this._onTap.dispatch(event);}};FORGE.Pointer.prototype._doubleTapHandler=function(event)
{if(this._onDoubleTap!==null&&this._enabled===true)
{this._onDoubleTap.dispatch(event);}};FORGE.Pointer.prototype._pressStartHandler=function(event)
{if(this._onPressStart!==null&&this._enabled===true)
{this._onPressStart.dispatch(event);}};FORGE.Pointer.prototype._pressEndHandler=function(event)
{if(this._onPressEnd!==null&&this._enabled===true)
{this._onPressEnd.dispatch(event);}};FORGE.Pointer.prototype._panStartHandler=function(event)
{if(this._onPanStart!==null&&this._enabled===true)
{this._onPanStart.dispatch(event);}};FORGE.Pointer.prototype._panMoveHandler=function(event)
{if(this._onPanMove!==null&&this._enabled===true)
{this._onPanMove.dispatch(event);}};FORGE.Pointer.prototype._panEndHandler=function(event)
{if(this._onPanEnd!==null&&this._enabled===true)
{this._onPanEnd.dispatch(event);}};FORGE.Pointer.prototype._pinchStartHandler=function(event)
{if(this._onPinchStart!==null&&this._enabled===true)
{this._onPinchStart.dispatch(event);}};FORGE.Pointer.prototype._pinchMoveHandler=function(event)
{if(this._onPinchMove!==null&&this._enabled===true)
{this._onPinchMove.dispatch(event);}};FORGE.Pointer.prototype._pinchEndHandler=function(event)
{if(this._onPinchEnd!==null&&this._enabled===true)
{this._onPinchEnd.dispatch(event);}};FORGE.Pointer.prototype._rotateStartHandler=function(event)
{if(this._onRotateStart!==null&&this._enabled===true)
{this._onRotateStart.dispatch(event);}};FORGE.Pointer.prototype._rotateMoveHandler=function(event)
{if(this._onRotateMove!==null&&this._enabled===true)
{this._onRotateMove.dispatch(event);}};FORGE.Pointer.prototype._rotateEndHandler=function(event)
{if(this._onRotateEnd!==null&&this._enabled===true)
{this._onRotateEnd.dispatch(event);}};FORGE.Pointer.prototype._swipeHandler=function(event)
{if(this._onSwipe!==null&&this._enabled===true)
{this._onSwipe.dispatch(event);}};FORGE.Pointer.prototype._enterHandler=function(event)
{if(this._onEnter!==null&&this._enabled===true)
{this._onEnter.dispatch(event);}};FORGE.Pointer.prototype._leaveHandler=function(event)
{if(this._onLeave!==null&&this._enabled===true)
{this._onLeave.dispatch(event);}};FORGE.Pointer.prototype._overHandler=function(event)
{if(this._onOver!==null&&this._enabled===true)
{this._onOver.dispatch(event);}};FORGE.Pointer.prototype._outHandler=function(event)
{if(this._onOut!==null&&this._enabled===true)
{this._onOut.dispatch(event);}};FORGE.Pointer.prototype._moveHandler=function(event)
{if(this._onMove!==null&&this._enabled===true)
{this._onMove.dispatch(event);}};FORGE.Pointer.prototype._wheelHandler=function(event)
{if(this._onWheel!==null&&this._enabled===true)
{this._onWheel.dispatch(event);}};FORGE.Pointer.prototype.enable=function()
{if(FORGE.Device.cssPointerEvents===true)
{this._displayObject.dom.style.pointerEvents="auto";}
this._hammer.set({enable:true});if(this._tap===null)
{this._tap=new Hammer.Tap();this._hammer.add(this._tap);}
if(this._doubleTap===null)
{this._doubleTap=new Hammer.Tap({event:FORGE.Pointer.events.DOUBLE_TAP,taps:2}).recognizeWith(this._tap);this._hammer.add(this._doubleTap);}
if(this._press===null)
{this._press=new Hammer.Press().recognizeWith(this._tap);this._hammer.add(this._press);}
if(this._pan===null)
{this._pan=new Hammer.Pan();this._hammer.add(this._pan);}
if(this._pinch===null)
{this._pinch=new Hammer.Pinch();this._hammer.add(this._pinch);}
if(this._rotate===null)
{this._rotate=new Hammer.Rotate().recognizeWith(this._pinch);this._hammer.add(this._rotate);}
if(this._swipe===null)
{this._swipe=new Hammer.Swipe().recognizeWith(this._pan);this._hammer.add(this._swipe);}
this._enabled=true;if(this._onEnable!==null)
{this._onEnable.dispatch();}};FORGE.Pointer.prototype.disable=function()
{if(FORGE.Device.cssPointerEvents===true)
{this._displayObject.dom.style.pointerEvents="none";}
this._enabled=false;this._hammer.set({enable:false});if(this._onDisable!==null)
{this._onDisable.dispatch();}};FORGE.Pointer.prototype.destroy=function()
{this.disable();this._tap=null;this._doubleTap=null;this._press=null;this._pan=null;this._pinch=null;this._rotate=null;this._swipe=null;if(this._onEnable!==null)
{this._onEnable.destroy();this._onEnable=null;}
if(this._onDisable!==null)
{this._onDisable.destroy();this._onDisable=null;}
if(this._onTap!==null)
{this._onTap.destroy();this._onTap=null;}
if(this._onDoubleTap!==null)
{this._onDoubleTap.destroy();this._onDoubleTap=null;}
if(this._onPressStart!==null)
{this._onPressStart.destroy();this._onPressStart=null;}
if(this._onPressEnd!==null)
{this._onPressEnd.destroy();this._onPressEnd=null;}
if(this._onPanStart!==null)
{this._onPanStart.destroy();this._onPanStart=null;}
if(this._onPanMove!==null)
{this._onPanMove.destroy();this._onPanMove=null;}
if(this._onPanEnd!==null)
{this._onPanEnd.destroy();this._onPanEnd=null;}
if(this._onPinchStart!==null)
{this._onPinchStart.destroy();this._onPinchStart=null;}
if(this._onPinchMove!==null)
{this._onPinchMove.destroy();this._onPinchMove=null;}
if(this._onPinchEnd!==null)
{this._onPinchEnd.destroy();this._onPinchEnd=null;}
if(this._onRotateStart!==null)
{this._onRotateStart.destroy();this._onRotateStart=null;}
if(this._onRotateMove!==null)
{this._onRotateMove.destroy();this._onRotateMove=null;}
if(this._onRotateEnd!==null)
{this._onRotateEnd.destroy();this._onRotateEnd=null;}
if(this._onSwipe!==null)
{this._onSwipe.destroy();this._onSwipe=null;}
if(this._onEnter!==null)
{this._onEnter.destroy();this._onEnter=null;}
if(this._onLeave!==null)
{this._onLeave.destroy();this._onLeave=null;}
if(this._onOver!==null)
{this._onOver.destroy();this._onOver=null;}
if(this._onOut!==null)
{this._onOut.destroy();this._onOut=null;}
if(this._onMove!==null)
{this._onMove.destroy();this._onMove=null;}
if(this._onWheel!==null)
{this._onWheel.destroy();this._onWheel=null;}
this._displayObject=null;FORGE.BaseObject.prototype.destroy.call(this);};FORGE.Pointer.getRelativeMousePosition=function(event)
{if(typeof event.target.getBoundingClientRect==="function")
{var rect=event.target.getBoundingClientRect();if(typeof event.center!=="undefined")
{var centerX=event.center.x;var centerY=event.center.y;}
var clientX=event.clientX;var clientY=event.clientY;var pageX=event.pageX;var pageY=event.pageY;if(typeof event.srcEvent!=="undefined")
{clientX=event.srcEvent.clientX;clientY=event.srcEvent.clientY;pageX=event.srcEvent.pageX;pageY=event.srcEvent.pageY;}
var x=(centerX||clientX||pageX)-rect.left;var y=(centerY||clientY||pageY)-rect.top;return new THREE.Vector2(x,y);}
return null;};Object.defineProperty(FORGE.Pointer.prototype,"enabled",{get:function()
{return this._enabled;},set:function(value)
{if(Boolean(value)===true)
{this.enable();}
else
{this.disable();}}});Object.defineProperty(FORGE.Pointer.prototype,"cursor",{get:function()
{return this._cursor;},set:function(value)
{this._displayObject.dom.style.cursor=value;if(value!==this._displayObject.dom.style.cursor||this._displayObject.dom.style.cursor==="")
{this._displayObject.dom.style.cursor="-webkit-"+value;}
this._cursor=value;}});Object.defineProperty(FORGE.Pointer.prototype,"onEnable",{get:function()
{if(this._onEnable===null)
{this._onEnable=new FORGE.EventDispatcher(this);}
return this._onEnable;}});Object.defineProperty(FORGE.Pointer.prototype,"onDisable",{get:function()
{if(this._onDisable===null)
{this._onDisable=new FORGE.EventDispatcher(this);}
return this._onDisable;}});Object.defineProperty(FORGE.Pointer.prototype,"onTap",{get:function()
{if(this._onTap===null)
{this._onTap=new FORGE.EventDispatcher(this._displayObject);this._onTap.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.TAP,this._tapHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.TAP,this._tapHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onTap;}});Object.defineProperty(FORGE.Pointer.prototype,"onClick",{get:function()
{return this.onTap;}});Object.defineProperty(FORGE.Pointer.prototype,"onDoubleTap",{get:function()
{if(this._onDoubleTap===null)
{this._onDoubleTap=new FORGE.EventDispatcher(this._displayObject);this._onDoubleTap.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.DOUBLE_TAP,this._doubleTapHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.DOUBLE_TAP,this._doubleTapHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onDoubleTap;}});Object.defineProperty(FORGE.Pointer.prototype,"onDoubleClick",{get:function()
{return this.onDoubleTap;}});Object.defineProperty(FORGE.Pointer.prototype,"onPressStart",{get:function()
{if(this._onPressStart===null)
{this._onPressStart=new FORGE.EventDispatcher(this._displayObject);this._onPressStart.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.PRESS_START,this._pressStartHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.PRESS_START,this._pressStartHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onPressStart;}});Object.defineProperty(FORGE.Pointer.prototype,"onDown",{get:function()
{return this.onPressStart;}});Object.defineProperty(FORGE.Pointer.prototype,"onPressEnd",{get:function()
{if(this._onPressEnd===null)
{this._onPressEnd=new FORGE.EventDispatcher(this._displayObject);this._onPressEnd.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.PRESS_END,this._pressEndHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.PRESS_END,this._pressEndHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onPressEnd;}});Object.defineProperty(FORGE.Pointer.prototype,"onUp",{get:function()
{return this.onPressEnd;}});Object.defineProperty(FORGE.Pointer.prototype,"onPanStart",{get:function()
{if(this._onPanStart===null)
{this._onPanStart=new FORGE.EventDispatcher(this._displayObject);this._onPanStart.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.PAN_START,this._panStartHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.PAN_START,this._panStartHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onPanStart;}});Object.defineProperty(FORGE.Pointer.prototype,"onPanMove",{get:function()
{if(this._onPanMove===null)
{this._onPanMove=new FORGE.EventDispatcher(this._displayObject);this._onPanMove.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.PAN_MOVE,this._panMoveHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.PAN_MOVE,this._panMoveHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onPanMove;}});Object.defineProperty(FORGE.Pointer.prototype,"onPanEnd",{get:function()
{if(this._onPanEnd===null)
{this._onPanEnd=new FORGE.EventDispatcher(this._displayObject);this._onPanEnd.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.PAN_END,this._panEndHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.PAN_END,this._panEndHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onPanEnd;}});Object.defineProperty(FORGE.Pointer.prototype,"onPinchStart",{get:function()
{if(this._onPinchStart===null)
{this._onPinchStart=new FORGE.EventDispatcher(this._displayObject);this._onPinchStart.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.PINCH_START,this._pinchStartHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.PINCH_START,this._pinchStartHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onPinchStart;}});Object.defineProperty(FORGE.Pointer.prototype,"onPinchMove",{get:function()
{if(this._onPinchMove===null)
{this._onPinchMove=new FORGE.EventDispatcher(this._displayObject);this._onPinchMove.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.PINCH_MOVE,this._pinchMoveHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.PINCH_MOVE,this._pinchMoveHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onPinchMove;}});Object.defineProperty(FORGE.Pointer.prototype,"onPinchEnd",{get:function()
{if(this._onPinchEnd===null)
{this._onPinchEnd=new FORGE.EventDispatcher(this._displayObject);this._onPinchEnd.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.PINCH_END,this._pinchEndHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.PINCH_END,this._pinchEndHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onPinchEnd;}});Object.defineProperty(FORGE.Pointer.prototype,"onRotateStart",{get:function()
{if(this._onRotateStart===null)
{this._onRotateStart=new FORGE.EventDispatcher(this._displayObject);this._onRotateStart.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.ROTATE_START,this._rotateStartHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.ROTATE_START,this._rotateStartHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onRotateStart;}});Object.defineProperty(FORGE.Pointer.prototype,"onRotateMove",{get:function()
{if(this._onRotateMove===null)
{this._onRotateMove=new FORGE.EventDispatcher(this._displayObject);this._onRotateMove.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.ROTATE_MOVE,this._rotateMoveHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.ROTATE_MOVE,this._rotateMoveHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onRotateMove;}});Object.defineProperty(FORGE.Pointer.prototype,"onRotateEnd",{get:function()
{if(this._onRotateEnd===null)
{this._onRotateEnd=new FORGE.EventDispatcher(this._displayObject);this._onRotateEnd.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.ROTATE_END,this._rotateEndHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.ROTATE_END,this._rotateEndHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onRotateEnd;}});Object.defineProperty(FORGE.Pointer.prototype,"onSwipe",{get:function()
{if(this._onSwipe===null)
{this._onSwipe=new FORGE.EventDispatcher(this._displayObject);this._onSwipe.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.SWIPE,this._swipeHandler,FORGE.Pointer.listenerTypes.HAMMER),this);this._addListener(FORGE.Pointer.events.SWIPE,this._swipeHandler,FORGE.Pointer.listenerTypes.HAMMER);}
return this._onSwipe;}});Object.defineProperty(FORGE.Pointer.prototype,"onEnter",{get:function()
{if(this._onEnter===null)
{this._onEnter=new FORGE.EventDispatcher(this._displayObject);this._onEnter.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.ENTER,this._enterHandler,FORGE.Pointer.listenerTypes.NATIVE),this);this._addListener(FORGE.Pointer.events.ENTER,this._enterHandler,FORGE.Pointer.listenerTypes.NATIVE);}
return this._onEnter;}});Object.defineProperty(FORGE.Pointer.prototype,"onLeave",{get:function()
{if(this._onLeave===null)
{this._onLeave=new FORGE.EventDispatcher(this._displayObject);this._onLeave.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.LEAVE,this._leaveHandler,FORGE.Pointer.listenerTypes.NATIVE),this);this._addListener(FORGE.Pointer.events.LEAVE,this._leaveHandler,FORGE.Pointer.listenerTypes.NATIVE);}
return this._onLeave;}});Object.defineProperty(FORGE.Pointer.prototype,"onOver",{get:function()
{if(this._onOver===null)
{this._onOver=new FORGE.EventDispatcher(this._displayObject);this._onOver.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.OVER,this._overHandler,FORGE.Pointer.listenerTypes.NATIVE),this);this._addListener(FORGE.Pointer.events.OVER,this._overHandler,FORGE.Pointer.listenerTypes.NATIVE);}
return this._onOver;}});Object.defineProperty(FORGE.Pointer.prototype,"onOut",{get:function()
{if(this._onOut===null)
{this._onOut=new FORGE.EventDispatcher(this._displayObject);this._onOut.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.OUT,this._outHandler,FORGE.Pointer.listenerTypes.NATIVE),this);this._addListener(FORGE.Pointer.events.OUT,this._outHandler,FORGE.Pointer.listenerTypes.NATIVE);}
return this._onOut;}});Object.defineProperty(FORGE.Pointer.prototype,"onMove",{get:function()
{if(this._onMove===null)
{this._onMove=new FORGE.EventDispatcher(this._displayObject);this._onMove.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.MOVE,this._moveHandler,FORGE.Pointer.listenerTypes.NATIVE),this);this._addListener(FORGE.Pointer.events.MOVE,this._moveHandler,FORGE.Pointer.listenerTypes.NATIVE);}
return this._onMove;}});Object.defineProperty(FORGE.Pointer.prototype,"onWheel",{get:function()
{if(this._onWheel===null)
{this._onWheel=new FORGE.EventDispatcher(this._displayObject);this._onWheel.onDestroy.addOnce(this._generateDestroyCallback(FORGE.Pointer.events.WHEEL,this._wheelHandler,FORGE.Pointer.listenerTypes.NATIVE),this);this._addListener(FORGE.Pointer.events.WHEEL,this._wheelHandler,FORGE.Pointer.listenerTypes.NATIVE);}
return this._onWheel;}});FORGE.Pointer.listenerTypes={};FORGE.Pointer.listenerTypes.NATIVE=0;FORGE.Pointer.listenerTypes.HAMMER=1;FORGE.Pointer.events={};FORGE.Pointer.events.TAP="tap";FORGE.Pointer.events.DOUBLE_TAP="doubletap";FORGE.Pointer.events.PRESS_START="press";FORGE.Pointer.events.PRESS_END="pressup";FORGE.Pointer.events.PAN_START="panstart";FORGE.Pointer.events.PAN_MOVE="panmove";FORGE.Pointer.events.PAN_END="panend";FORGE.Pointer.events.PINCH_START="pinchstart";FORGE.Pointer.events.PINCH_MOVE="pinchmove";FORGE.Pointer.events.PINCH_END="pinchend";FORGE.Pointer.events.ROTATE_START="rotatestart";FORGE.Pointer.events.ROTATE_MOVE="rotatemove";FORGE.Pointer.events.ROTATE_END="rotateend";FORGE.Pointer.events.SWIPE="swipe";FORGE.Pointer.events.ENTER="mouseenter";FORGE.Pointer.events.LEAVE="mouseleave";FORGE.Pointer.events.OVER="mouseover";FORGE.Pointer.events.OUT="mouseout";FORGE.Pointer.events.MOVE="mousemove";FORGE.Pointer.events.WHEEL="wheel";FORGE.Pointer.cursors={};FORGE.Pointer.cursors.DEFAULT="default";FORGE.Pointer.cursors.POINTER="pointer";FORGE.Pointer.cursors.GRAB="grab";FORGE.Pointer.cursors.GRABBING="grabbing";FORGE.Gyroscope=function(viewer)
{this._viewer=viewer;this._enabled=true;this._onDeviceOrientationChange=null;this._onScreenOrientationChange=null;FORGE.BaseObject.call(this,"Gyroscope");this._boot();};FORGE.Gyroscope.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Gyroscope.prototype.constructor=FORGE.Gyroscope;FORGE.Gyroscope.prototype._boot=function()
{if(FORGE.Device.deviceOrientation===false)
{return;}
window.addEventListener("deviceorientation",this._deviceOrientationHandler.bind(this),false);window.addEventListener("orientationchange",this._screenOrientationHandler.bind(this),false);};FORGE.Gyroscope.prototype._deviceOrientationHandler=function(event)
{if(this._onDeviceOrientationChange!==null&&this._enabled===true)
{this._onDeviceOrientationChange.dispatch(event);}};FORGE.Gyroscope.prototype._screenOrientationHandler=function()
{if(this._onScreenOrientationChange!==null&&this._enabled===true)
{this._onScreenOrientationChange.dispatch();}};FORGE.Gyroscope.prototype.destroy=function()
{this._viewer=null;window.removeEventListener("deviceorientation",this._deviceOrientationHandler.bind(this),false);window.removeEventListener("orientationchange",this._screenOrientationHandler.bind(this),false);FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Gyroscope.prototype,"enabled",{get:function()
{return this._enabled;},set:function(value)
{this._enabled=Boolean(value);}});Object.defineProperty(FORGE.Gyroscope.prototype,"onDeviceOrientationChange",{get:function()
{if(this._onDeviceOrientationChange===null)
{this._onDeviceOrientationChange=new FORGE.EventDispatcher(this);}
return this._onDeviceOrientationChange;}});Object.defineProperty(FORGE.Gyroscope.prototype,"onScreenOrientationChange",{get:function()
{if(this._onScreenOrientationChange===null)
{this._onScreenOrientationChange=new FORGE.EventDispatcher(this);}
return this._onScreenOrientationChange;}});FORGE.GamepadsManager=function(viewer)
{this._viewer=viewer;this._gamepads=null;this._onGamepadConnected=null;this._onGamepadDisconnected=null;FORGE.BaseObject.call(this,"GamepadsManager");this._boot();};FORGE.GamepadsManager.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.GamepadsManager.prototype.constructor=FORGE.GamepadsManager;FORGE.GamepadsManager.prototype._boot=function()
{if(FORGE.Device.gamepad===false)
{this.warn("Gamepads are not available with your browser");return;}
this._gamepads=[];};FORGE.GamepadsManager.prototype._isConnected=function(gamepad)
{for(var i=0,ii=this._gamepads.length;i<ii;i++)
{if(this._gamepads[i].name===(gamepad.id+"-"+gamepad.index))
{return true;}}
return false;};FORGE.GamepadsManager.prototype._connect=function(pad)
{var gamepad=new FORGE.Gamepad(this._viewer,pad);this._gamepads[pad.index]=gamepad;if(this._onGamepadConnected!==null)
{this._onGamepadConnected.dispatch(gamepad);}};FORGE.GamepadsManager.prototype._disconnect=function(index)
{var name=this._gamepads[index].name;this._gamepads[index].destroy();this._gamepads[index]=null;if(this._onGamepadDisconnected!==null)
{this._onGamepadDisconnected.dispatch(name);}};FORGE.GamepadsManager.prototype.update=function()
{if(this._gamepads===null)
{return;}
var gamepad,gamepads=navigator.getGamepads();for(var i=0,ii=gamepads.length;i<ii;i++)
{gamepad=gamepads[i];if(typeof gamepad!=="undefined"&&gamepad!==null)
{if(this._isConnected(gamepad)===false)
{this._connect(gamepad);}
else if(FORGE.Device.edge===true)
{var pad=this._gamepads[gamepad.index];pad.gamepad=gamepad;}
this._gamepads[i].update();}
else if(gamepad===null&&typeof this._gamepads[i]!=="undefined")
{this._disconnect(i);}}};FORGE.GamepadsManager.prototype.destroy=function()
{this._viewer=null;for(var i=0,ii=this._gamepads.length;i<ii;i++)
{this._disconnect(i);}
this._gamepads=null;if(this._onGamepadConnected!==null)
{this._onGamepadConnected.destroy();this._onGamepadConnected=null;}
if(this._onGamepadDisconnected!==null)
{this._onGamepadDisconnected.destroy();this._onGamepadDisconnected=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.GamepadsManager.prototype,"onGamepadConnected",{get:function()
{if(this._onGamepadConnected===null)
{this._onGamepadConnected=new FORGE.EventDispatcher(this);}
return this._onGamepadConnected;}});Object.defineProperty(FORGE.GamepadsManager.prototype,"onGamepadDisconnected",{get:function()
{if(this._onGamepadDisconnected===null)
{this._onGamepadDisconnected=new FORGE.EventDispatcher(this);}
return this._onGamepadDisconnected;}});Object.defineProperty(FORGE.GamepadsManager.prototype,"all",{get:function()
{return this._gamepads||[];}});FORGE.Gamepad=function(viewer,ref)
{this._viewer=viewer;this._gamepad=ref;this._previousTimestamp=0;this._enabled=true;this._buttonBindings=null;this._axisBindings=null;this._buttonPressed=null;FORGE.BaseObject.call(this,"Gamepad");this._boot();};FORGE.Gamepad.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Gamepad.prototype.constructor=FORGE.Gamepad;FORGE.Gamepad.prototype._boot=function()
{this._uid=this._gamepad.id+"-"+this._gamepad.index;this._register();this._buttonBindings=[];this._axisBindings=[];this._buttonPressed=[];};FORGE.Gamepad.prototype._indexOfBinding=function(value)
{if(this._buttonBindings===null||this._buttonBindings.length===0)
{return-1;}
if(typeof value==="object")
{if(value.type==="ButtonBinding")
{return this._buttonBindings.indexOf((value));}
else if(value.type==="AxisBinding")
{return this._axisBindings.indexOf((value));}}
return-1;};FORGE.Gamepad.prototype._processButtons=function(buttons)
{var button,index,binding;for(var i=0,ii=buttons.length;i<ii;i++)
{button=buttons[i];index=this._buttonPressed.indexOf(i);if(button.pressed===true&&index===-1)
{this.log("button pressed "+i);this._buttonPressed.push(i);this._applyButton(i,button.value,true);}
else if(button.pressed===false&&index!==-1)
{this.log("button released "+i);this._buttonPressed.splice(index,1);this._applyButton(i,button.value,false);}}};FORGE.Gamepad.prototype._applyHoldButtons=function()
{var binding;for(var i=0,ii=this._buttonBindings.length;i<ii;i++)
{binding=this._buttonBindings[i];if(binding.pressed===true)
{if(binding.hasToWaitToHold===true&&binding.downComplete===false)
{continue;}
binding.hold();}}};FORGE.Gamepad.prototype._getButtonBindings=function(index)
{var bindings=[];for(var i=0,ii=this._buttonBindings.length;i<ii;i++)
{if(this._buttonBindings[i].hasButtonIn(index)===true)
{bindings.push(this._buttonBindings[i]);}}
return bindings;};FORGE.Gamepad.prototype._applyButton=function(index,value,pressed)
{var binding,bindings=this._getButtonBindings(index);for(var i=0,ii=bindings.length;i<ii;i++)
{binding=bindings[i];if(pressed===true&&binding.pressed===false)
{binding.down(value);}
else if(pressed===false&&binding.pressed===true)
{binding.up(value);}}};FORGE.Gamepad.prototype._getAxisBindings=function(index)
{var bindings=[];for(var i=0,ii=this._axisBindings.length;i<ii;i++)
{if(this._axisBindings[i].axis===index)
{bindings.push(this._axisBindings[i]);}}
return bindings;};FORGE.Gamepad.prototype._processAxes=function(axes)
{var bindings;for(var i=0,ii=axes.length;i<ii;i++)
{bindings=this._getAxisBindings(i);for(var j=0,jj=bindings.length;j<jj;j++)
{bindings[j].change(axes[i]);}}};FORGE.Gamepad.prototype.update=function()
{if(this._enabled===true)
{if(this._gamepad.timestamp>this._previousTimestamp)
{this._previousTimestamp=this._gamepad.timestamp;if(typeof this._gamepad.buttons!=="undefined")
{this._processButtons(this._gamepad.buttons);}
if(typeof this._gamepad.axes!=="undefined")
{this._processAxes(this._gamepad.axes);}}
this._applyHoldButtons();}};FORGE.Gamepad.prototype.addBinding=function(binding)
{if(typeof binding!=="object"&&binding.type!=="ButtonBinding"&&binding.type!=="AxisBinding")
{return false;}
var index=this._indexOfBinding(binding);if(index===-1)
{if(binding.type==="ButtonBinding")
{this._buttonBindings.push((binding));return true;}
else if(binding.type==="AxisBinding")
{this._axisBindings.push((binding));return true;}}
else
{this.warn("Trying to add a duplicate binding on the gamepad !");}
return false;};FORGE.Gamepad.prototype.removeBinding=function(binding)
{var index=this._indexOfBinding(binding);if(index===-1)
{if(binding.type==="ButtonBinding")
{this._buttonBindings[index].destroy();this._buttonBindings.splice(index,1);return true;}
else if(binding.type==="AxisBinding")
{this._axisBindings[index].destroy();this._axisBindings.splice(index,1);return true;}}
return false;};FORGE.Gamepad.prototype.destroy=function()
{this._viewer=null;var buttonBinding;while(this._buttonBindings!==null&&this._buttonBindings.length>0)
{buttonBinding=this._buttonBindings.pop();buttonBinding.destroy();}
this._buttonBindings=null;var axisBinding;while(this._axisBindings!==null&&this._axisBindings.length>0)
{axisBinding=this._axisBindings.pop();axisBinding.destroy();}
this._axisBindings=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Gamepad.prototype,"name",{get:function()
{return this._gamepad.id+"-"+this._gamepad.index;}});Object.defineProperty(FORGE.Gamepad.prototype,"mapping",{get:function()
{return this._gamepad.mapping;}});Object.defineProperty(FORGE.Gamepad.prototype,"hand",{get:function()
{return this._gamepad.hand;}});Object.defineProperty(FORGE.Gamepad.prototype,"position",{get:function()
{return this._gamepad.pose;}});Object.defineProperty(FORGE.Gamepad.prototype,"enabled",{get:function()
{return this._enabled;},set:function(value)
{this._enabled=Boolean(value);}});Object.defineProperty(FORGE.Gamepad.prototype,"gamepad",{get:function()
{return this._gamepad;},set:function(value)
{if(value!==null)
{this._gamepad=value;}}});FORGE.DisplayList=function(viewer)
{this._viewer=viewer;this._objects=[];this._objectsToUpdate=[];this._fullScreenChangeBind=null;this._fullscreenObject=null;FORGE.BaseObject.call(this,"DisplayList");this._boot();};FORGE.DisplayList.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.DisplayList.prototype.constructor=FORGE.DisplayList;FORGE.DisplayList.prototype._boot=function()
{this._fullScreenChangeBind=this._fullScreenChangeHandler.bind(this);document.addEventListener("fullscreenchange",this._fullScreenChangeBind,false);document.addEventListener("mozfullscreenchange",this._fullScreenChangeBind,false);document.addEventListener("webkitfullscreenchange",this._fullScreenChangeBind,false);document.addEventListener("MSFullscreenChange",this._fullScreenChangeBind,false);};FORGE.DisplayList.prototype._fullScreenChangeHandler=function()
{this.log("_fullScreenChangeHandler");if(document[FORGE.Device.fullscreenElement]!==null)
{var obj;var n=this._objects.length;while(n--)
{obj=this._objects[n];if(obj.dom===document[FORGE.Device.fullscreenElement])
{this._fullscreenObject=obj;this._fullscreenObject._notifyFullscreenEnter();break;}}}
else
{this._fullscreenObject._notifyFullscreenExit();this._fullscreenObject=null;}};FORGE.DisplayList.prototype.register=function(object,update)
{this._objects.push(object);if(update===true)
{this._objectsToUpdate.push(object);}};FORGE.DisplayList.prototype.unregister=function(object)
{this._objects.splice(this._objects.indexOf(object),1);var index=this._objectsToUpdate.indexOf(object);if(index!==-1)
{this._objectsToUpdate.splice(index,1);}};FORGE.DisplayList.prototype.update=function()
{for(var i=0,ii=this._objectsToUpdate.length;i<ii;i++)
{this._objectsToUpdate[i].update();}};FORGE.DisplayList.prototype.destroy=function()
{var objCount=this._objects.length;while(objCount--)
{this._objects[objCount].destroy();}
this._objects=[];this._objectsToUpdate=[];document.removeEventListener("fullscreenchange",this._fullScreenChangeBind,false);document.removeEventListener("mozfullscreenchange",this._fullScreenChangeBind,false);document.removeEventListener("webkitfullscreenchange",this._fullScreenChangeBind,false);document.removeEventListener("MSFullscreenChange",this._fullScreenChangeBind,false);this._fullScreenChangeBind=null;this._fullscreenObject=null;};FORGE.DisplayList.types=["DisplayObject","DisplayObjectContainer","Image","TextField","Button","VideoDash","VideoHTML5","Canvas","Sprite","Iframe"];FORGE.DisplayObject=function(viewer,dom,className)
{this._viewer=viewer;this._dom=dom||null;this._parent=null;this._index=0;this._id="";this._x=0;this._y=0;this._keepRatio=false;this._width=0;this._unitWidth="px";this._scaleWidth=1;this._height=0;this._unitHeight="px";this._scaleHeight=1;this._horizontalCenter=false;this._verticalCenter=false;this._top=null;this._right=null;this._bottom=null;this._left=null;this._alpha=1;this._rotation=0;this._pointer=null;this._drag=null;this._background="";this._borderStyle="solid";this._borderWidth=0;this._borderColor="rgb(0, 0, 0)";this._borderRadius=0;this._maximized=false;this._tooltip="";this._data=null;this._ready=false;this._needPending=true;this._pending=null;this._pendingApplying=false;this._fullscreenData=null;this._onReady=null;this._onResize=null;this._onBorderResize=null;this._onMove=null;this._onAddedToParent=null;this._onAddedToDom=null;this._onShow=null;this._onHide=null;this._onFullscreenEnter=null;this._onFullscreenExit=null;FORGE.BaseObject.call(this,className||"DisplayObject");this._boot();};FORGE.DisplayObject.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.DisplayObject.prototype.constructor=FORGE.DisplayObject;FORGE.DisplayObject.prototype._boot=function()
{if(this._ready===true)
{return;}
this._register();this._createDom();this._pending=[];if(this._className==="DisplayObject")
{this._viewer.display.register(this);this._notifyReady();this._applyPending(false);}};FORGE.DisplayObject.prototype._createDom=function()
{if(typeof this._dom==="undefined"||this._dom===null)
{this._dom=document.createElement("div");}
else
{this._width=FORGE.Dom.getValueWidth(this._dom);this._unitWidth=FORGE.Dom.getUnitWidth(this._dom);this._height=FORGE.Dom.getValueHeight(this._dom);this._unitHeight=FORGE.Dom.getUnitHeight(this._dom);}
this._dom.style.width=this._width+""+this._unitWidth;this._dom.style.height=this._height+""+this._unitHeight;this._dom.style.display="block";this._dom.style.position="relative";this._dom.style.margin="0px";this._dom.style.padding="0px";this._dom.style.top=this._y+"px";this._dom.style.left=this._x+"px";this._dom.style.overflow="hidden";this._dom.style.boxSizing="border-box";if(FORGE.Device.cssPointerEvents===true)
{this._dom.style.pointerEvents="none";}
this._dom.style.userSelect="none";this._dom.style.webkitUserSelect="none";this._dom.style.mozUserSelect="none";this._dom.style.msUserSelect="none";this._dom.style.webkitTouchCallout="none";this._dom.style.borderStyle=this._borderStyle;this._dom.style.borderWidth=this._borderWidth+"px";this._dom.style.borderColor=this._borderColor;this._dom.style.background=this._background;};FORGE.DisplayObject.prototype._notifyReady=function()
{if(this._ready===true)
{return;}
this.log("_notifyReady");this._ready=true;if(this._onReady!==null)
{this._onReady.dispatch();}};FORGE.DisplayObject.prototype._notifyAddedToDom=function()
{this.log("_notifyAddedToDom");if(this._onAddedToDom!==null)
{this._onAddedToDom.dispatch();}};FORGE.DisplayObject.prototype._notifyShow=function()
{this.log("_notifyShow");if(this.isInDom()===false)
{return;}
if(this._onShow!==null&&this.visible===true)
{this._onShow.dispatch();}};FORGE.DisplayObject.prototype._notifyHide=function()
{this.log("_notifyHide");if(this._onHide!==null&&this.visible===false)
{this._onHide.dispatch();}};FORGE.DisplayObject.prototype._notifyBorderResize=function()
{if(this._onBorderResize!==null)
{this._onBorderResize.dispatch();}};FORGE.DisplayObject.prototype._notifyParentResize=function(data)
{if(this._maximized===true)
{this.maximize(this._maximized);}
this._updatePercentValues(data.property);this._updateAnchors();};FORGE.DisplayObject.prototype._notifyResize=function(data)
{this._updateAnchors();if(this._onResize!==null)
{this._onResize.dispatch(data);}};FORGE.DisplayObject.prototype._notifyFullscreenEnter=function()
{this.log("_notifyFullscreenEnter");this._fullscreenSaveData();if(this._onFullscreenEnter!==null)
{this._onFullscreenEnter.dispatch();}};FORGE.DisplayObject.prototype._notifyFullscreenExit=function()
{this.log("_notifyFullscreenChange");this._fullscreenRestoreData();if(this._onFullscreenExit!==null)
{this._onFullscreenExit.dispatch();}};FORGE.DisplayObject.prototype._fullscreenSaveData=function()
{this.log("_fullscreenSaveData");this._fullscreenData={x:this._x,y:this._y,width:this._width,unitWidth:this._unitWidth,height:this._height,unitHeight:this._unitHeight,top:this._top,right:this._right,bottom:this._bottom,left:this._left};this._x=0;this._y=0;this._width=screen.width;this._unitWidth="px";this._dom.style.width=this._width+"px";this._height=screen.height;this._unitHeight="px";this._dom.style.height=this._height+"px";this._top=null;this._right=null;this._bottom=null;this._left=null;this._dom.style.top="0";this._dom.style.left="0";this._notifyResize({property:"both"});};FORGE.DisplayObject.prototype._fullscreenRestoreData=function()
{this.log("_fullscreenRestoreData");this._x=this._fullscreenData.x;this._dom.style.left=this._x+"px";this._y=this._fullscreenData.y;this._dom.style.top=this._y+"px";this._width=this._fullscreenData.width;this._unitWidth=this._fullscreenData.unitWidth;this._dom.style.width=this.pixelWidth+"px";this._height=this._fullscreenData.height;this._unitHeight=this._fullscreenData.unitHeight;this._dom.style.height=this.pixelHeight+"px";this._top=this._fullscreenData.top;this._right=this._fullscreenData.right;this._bottom=this._fullscreenData.bottom;this._left=this._fullscreenData.left;this._notifyResize({property:"both"});this._fullscreenData=null;};FORGE.DisplayObject.prototype._updateAnchors=function()
{if(this._parent===null||this._width===0||this._height===0)
{return;}
this.log("_updateAnchors");if(this._horizontalCenter===true)
{this.horizontalCenter=true;}
else
{this.left=this._left;this.right=this._right;}
if(this._verticalCenter===true)
{this.verticalCenter=true;}
else
{this.top=this._top;this.bottom=this._bottom;}};FORGE.DisplayObject.prototype._updatePercentValues=function(property)
{var widthRelated=property.toLowerCase().indexOf("width")!==-1||property==="both";var heightRelated=property.toLowerCase().indexOf("height")!==-1||property==="both";var notification=0;if(widthRelated===true&&this._unitWidth==="%")
{this._dom.style.width=this.pixelWidth+"px";this._dom.width=this.pixelWidth;notification+=1;}
if(heightRelated===true&&this._unitHeight==="%")
{this._dom.style.height=this.pixelHeight+"px";this._dom.height=this.pixelHeight;notification+=2;}
switch(notification)
{case 1:this._notifyResize({property:"width"});break;case 2:this._notifyResize({property:"height"});break;case 3:this._notifyResize({property:"both"});break;default:}};FORGE.DisplayObject.prototype._addPending=function(prop,value)
{this._pending.push({prop:prop,value:value});};FORGE.DisplayObject.prototype._hasPending=function(prop)
{for(var i=0,ii=this._pending.length;i<ii;i++)
{if(this._pending[i].prop===prop)
{return true;}}
return false;};FORGE.DisplayObject.prototype._clearPending=function(prop)
{if(typeof prop==="string")
{var i=this._pending.length;while(i--)
{if(this._pending[i].prop===prop)
{this._pending.splice(i,1);}}}
else
{this._pending=[];}};FORGE.DisplayObject.prototype._applyPending=function(needPending)
{this.log("_applyPending");this._needPending=needPending;if(this._pending===null||this._pending.length===0)
{return;}
this._pendingApplying=true;for(var i=0,ii=this._pending.length;i<ii;i++)
{this[this._pending[i].prop]=this._pending[i].value;}
this._pendingApplying=false;this._clearPending();};FORGE.DisplayObject.prototype.show=function()
{this._dom.style.display="block";this._notifyShow();};FORGE.DisplayObject.prototype.hide=function()
{this._dom.style.display="none";this._notifyHide();};FORGE.DisplayObject.prototype.toggleVisibility=function()
{this.visible=!this.visible;};FORGE.DisplayObject.prototype.maximize=function(keepMaximized)
{if(keepMaximized===true)
{this._maximized=true;if(this._needPending===true)
{this._addPending("maximized",true);}}
if(this._parent!==null)
{this._keepRatio=false;var width=this.pixelWidth;this._width=this._parent.innerWidth;this._unitWidth="px";this._dom.style.width=this._parent.innerWidth+"px";this._dom.width=this._parent.innerWidth;var height=this.pixelHeight;this._height=this._parent.innerHeight;this._unitHeight="px";this._dom.style.height=this._parent.innerHeight+"px";this._dom.height=this._parent.innerHeight;if(width!==this.pixelWidth||height!==this.pixelHeight)
{this._notifyResize({property:"both"});}}};FORGE.DisplayObject.prototype.isInDom=function()
{return FORGE.Dom.has(this._dom);};FORGE.DisplayObject.prototype.resize=function(width,height)
{if(width!==null&&typeof width!=="undefined")
{this.width=width;}
if(height!==null&&typeof height!=="undefined")
{this.height=height;}};FORGE.DisplayObject.prototype.fullscreenEnter=function()
{if(document[FORGE.Device.fullscreenEnabled]===true&&this.isFullscreen()===false)
{this._dom[FORGE.Device.requestFullscreen]();}};FORGE.DisplayObject.prototype.fullscreenExit=function()
{if(document[FORGE.Device.fullscreenEnabled]===true&&this.isFullscreen()===true)
{document[FORGE.Device.exitFullscreen]();}};FORGE.DisplayObject.prototype.isFullscreen=function()
{return document[FORGE.Device.fullscreenElement]===this._dom;};FORGE.DisplayObject.prototype.destroy=function()
{if(this._alive===false)
{return;}
this._viewer.display.unregister(this);if(this._parent!==null)
{this._parent.removeChild(this,false);this._parent=null;}
if(this._pointer!==null)
{this._pointer.destroy();this._pointer=null;}
if(this._drag!==null)
{this._drag.destroy();this._drag=null;}
if(this._onResize!==null)
{this._onResize.destroy();this._onResize=null;}
if(this._onBorderResize!==null)
{this._onBorderResize.destroy();this._onBorderResize=null;}
if(this._onReady!==null)
{this._onReady.destroy();this._onReady=null;}
if(this._onAddedToParent!==null)
{this._onAddedToParent.destroy();this._onAddedToParent=null;}
if(this._onAddedToDom!==null)
{this._onAddedToDom.destroy();this._onAddedToDom=null;}
if(this._onFullscreenEnter!==null)
{this._onFullscreenEnter.destroy();this._onFullscreenEnter=null;}
if(this._onFullscreenExit!==null)
{this._onFullscreenExit.destroy();this._onFullscreenExit=null;}
this._dom=null;this._data=null;this._viewer=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.DisplayObject.prototype,"viewer",{get:function()
{return this._viewer;}});Object.defineProperty(FORGE.DisplayObject.prototype,"dom",{get:function()
{return this._dom;}});Object.defineProperty(FORGE.DisplayObject.prototype,"id",{get:function()
{return this._id;},set:function(value)
{this._id=value;this._dom.id=this._id;}});Object.defineProperty(FORGE.DisplayObject.prototype,"ready",{get:function()
{return this._ready;}});Object.defineProperty(FORGE.DisplayObject.prototype,"parent",{get:function()
{return this._parent;},set:function(value)
{if(typeof value!=="object"||Array.isArray(value.children)===false||value===this._parent)
{return;}
this._parent=value;this._dom.style.position="absolute";if(this._maximized===true)
{this.maximize(this._maximized);}
this._updatePercentValues("both");this._updateAnchors();if(this._onAddedToParent!==null)
{this._onAddedToParent.dispatch();}
if(this._parent.isInDom()===true)
{this._notifyAddedToDom();this._notifyShow();}}});Object.defineProperty(FORGE.DisplayObject.prototype,"visible",{get:function()
{return this._dom.style.display==="block";},set:function(value)
{if(typeof value!=="boolean")
{return;}
if(value===true)
{this.show();}
else
{this.hide();}}});Object.defineProperty(FORGE.DisplayObject.prototype,"x",{get:function()
{return this._x;},set:function(value)
{if(typeof value!=="number")
{return;}
var x=this._x;this._x=value;this._dom.style.left=this._x+"px";if(this._onMove!==null&&x!==this._x)
{this._onMove.dispatch({property:"x"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"y",{get:function()
{return this._y;},set:function(value)
{if(typeof value!=="number")
{return;}
var y=this._y;this._y=value;this._dom.style.top=this._y+"px";if(this._onMove!==null&&y!==this._y)
{this._onMove.dispatch({property:"y"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"keepRatio",{get:function()
{return this._keepRatio;},set:function(value)
{if(typeof value!=="boolean"||value===this._keepRatio)
{return;}
this._keepRatio=value;}});Object.defineProperty(FORGE.DisplayObject.prototype,"width",{get:function()
{return this._width;},set:function(value)
{var width=this._width;var unitWidth=this._unitWidth;if(typeof value==="string")
{var size=FORGE.Utils.parseSizeString(value);if(size.value===null||size.unit===null)
{throw"FORGE.DisplayObject.width value "+value+" is incorrect";}
this._unitWidth=size.unit;this._width=size.value;}
else if(typeof value==="number")
{this._width=value;}
else
{return;}
if(this._needPending===true)
{this._addPending("width",this._width);return;}
this._maximized=false;this._dom.style.width=this.pixelWidth+"px";this._dom.width=this.pixelWidth;if((width!==this._width||unitWidth!==this._unitWidth)||this._pendingApplying===true)
{this._notifyResize({property:"width"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"pixelWidth",{get:function()
{if(this._unitWidth==="px")
{return this._width;}
else if(this._unitWidth==="%")
{if(this._parent!==null)
{return this._parent.innerWidth*this._width / 100;}
else
{return 0;}}},set:function(value)
{if(typeof value!=="number")
{return;}
var width=this._width;var unitWidth=this._unitWidth;this._width=value;this._unitWidth="px";if(this._needPending===true)
{this._addPending("pixelWidth",value);return;}
this._maximized=false;this._dom.style.width=this.pixelWidth+"px";this._dom.width=this.pixelWidth;if((width!==this._width||unitWidth!=="px")||this._pendingApplying===true)
{this._notifyResize({property:"pixelWidth"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"percentWidth",{get:function()
{if(this._unitWidth==="%")
{return this._width;}
else if(this._unitWidth==="px")
{if(this._parent!==null)
{return this._width / this._parent.innerWidth*100;}
else
{return 0;}}},set:function(value)
{if(typeof value!=="number")
{return;}
var width=this._width;var unitWidth=this._unitWidth;this._width=value;this._unitWidth="%";if(this._needPending===true)
{this._addPending("percentWidth",value);return;}
this._maximized=false;this._dom.style.width=this.pixelWidth+"px";this._dom.width=this.pixelWidth;if((width!==this._width||unitWidth!=="%")||this._pendingApplying===true)
{this._notifyResize({property:"percentWidth"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"unitWidth",{get:function()
{return this._unitWidth;},set:function(value)
{if(typeof value!=="string"||(value!=="px"&&value!=="%"))
{return;}
var unitWidth=this._unitWidth;this._unitWidth=value;if(this._needPending===true)
{this._addPending("unitWidth",value);return;}
this._maximized=false;this._dom.style.width=this.pixelWidth+"px";this._dom.width=this.pixelWidth;if(unitWidth!==this._unitWidth||this._pendingApplying===true)
{this._notifyResize({property:"unitWidth"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"innerWidth",{get:function()
{return this.pixelWidth-(this._borderWidth*2);}});Object.defineProperty(FORGE.DisplayObject.prototype,"height",{get:function()
{return this._height;},set:function(value)
{var height=this._height;var unitHeight=this._unitHeight;if(typeof value==="string")
{var size=FORGE.Utils.parseSizeString(value);if(size.value===null||size.unit===null)
{throw"FORGE.DisplayObject.height value "+value+" is incorrect";}
this._unitHeight=size.unit;this._height=size.value;}
else if(typeof value==="number")
{this._height=value;}
else
{return;}
if(this._needPending===true)
{this._addPending("height",this._height);return;}
this._maximized=false;this._dom.style.height=this.pixelHeight+"px";this._dom.height=this.pixelHeight;if((height!==this._height||unitHeight!==this._unitHeight)||this._pendingApplying===true)
{this._notifyResize({property:"height"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"pixelHeight",{get:function()
{if(this._unitHeight==="px")
{return this._height;}
else if(this._unitHeight==="%")
{if(this._parent!==null)
{return this._parent.innerHeight*this._height / 100;}
else
{return 0;}}},set:function(value)
{if(typeof value!=="number")
{return;}
var height=this._height;var unitHeight=this._unitHeight;this._height=value;this._unitHeight="px";if(this._needPending===true)
{this._addPending("pixelHeight",value);return;}
this._maximized=false;this._dom.style.height=this.pixelHeight+"px";this._dom.height=this.pixelHeight;if((height!==this._height||unitHeight!=="px")||this._pendingApplying===true)
{this._notifyResize({property:"pixelHeight"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"percentHeight",{get:function()
{if(this._unitHeight==="%")
{return this._height;}
else if(this._unitHeight==="px")
{if(this._parent!==null)
{return this._height / this._parent.innerHeight*100;}
else
{return 0;}}},set:function(value)
{if(typeof value!=="number")
{return;}
var height=this._height;var unitHeight=this._unitHeight;this._height=value;this._unitHeight="%";if(this._needPending===true)
{this._addPending("percentHeight",value);return;}
this._maximized=false;this._dom.style.height=this.pixelHeight+"px";this._dom.height=this.pixelHeight;if((height!==this._height||unitHeight!=="%")||this._pendingApplying===true)
{this._notifyResize({property:"percentHeight"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"unitHeight",{get:function()
{return this._unitHeight;},set:function(value)
{if(typeof value!=="string")
{return;}
var unitHeight=this._unitHeight;this._unitHeight=value;if(this._needPending===true)
{this._addPending("unitHeight",value);return;}
this._maximized=false;this._dom.style.height=this.pixelHeight+"px";this._dom.height=this.pixelHeight;if(unitHeight!==this._unitHeight||this._pendingApplying===true)
{this._notifyResize({property:"unitHeight"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"innerHeight",{get:function()
{return this.pixelHeight-(this._borderWidth*2);}});Object.defineProperty(FORGE.DisplayObject.prototype,"maximized",{get:function()
{return this._maximized;},set:function(value)
{if(typeof value!=="boolean")
{return;}
this._maximized=value;if(this._maximized===true)
{this.maximize(true);}}});Object.defineProperty(FORGE.DisplayObject.prototype,"horizontalCenter",{get:function()
{return this._horizontalCenter;},set:function(value)
{if(typeof value!=="boolean")
{return;}
this._horizontalCenter=value;if(this._horizontalCenter===true)
{this._left=null;this._right=null;}
if(this._parent===null)
{return;}
var x=this._x;this._x=(this._parent.innerWidth-this.pixelWidth)/ 2;this._dom.style.left=this._x+"px";if(this._onMove!==null&&x!==this._x)
{this._onMove.dispatch({property:"x"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"verticalCenter",{get:function()
{return this._verticalCenter;},set:function(value)
{if(typeof value!=="boolean")
{return;}
this._verticalCenter=value;if(this._verticalCenter===true)
{this._top=null;this._bottom=null;}
if(this._parent===null)
{return;}
var y=this._y;this._y=(this._parent.innerHeight-this.pixelHeight)/ 2;this._dom.style.top=this._y+"px";if(this._onMove!==null&&y!==this._y)
{this._onMove.dispatch({property:"y"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"top",{get:function()
{return this._top;},set:function(value)
{if(typeof value!=="number"&&value!==null)
{return;}
this._top=value;this._verticalCenter=false;if(this._parent===null||this._top===null)
{return;}
var y=this._y;this._y=value;this._dom.style.top=this._y+"px";if(this._onMove!==null&&y!==this._y)
{this._onMove.dispatch({property:"y"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"right",{get:function()
{return this._right;},set:function(value)
{if(typeof value!=="number"&&value!==null)
{return;}
this._right=value;this._horizontalCenter=false;if(this._parent===null||this._right===null)
{return;}
var x=this._x;this._x=this._parent.innerWidth-this.pixelWidth-value;this._dom.style.left=this._x+"px";if(this._onMove!==null&&x!==this._x)
{this._onMove.dispatch({property:"x"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"bottom",{get:function()
{return this._bottom;},set:function(value)
{if(typeof value!=="number"&&value!==null)
{return;}
this._bottom=value;this._verticalCenter=false;if(this._parent===null||this._bottom===null)
{return;}
var y=this._y;this._y=this._parent.innerHeight-this.pixelHeight-value;this._dom.style.top=this._y+"px";if(this._onMove!==null&&y!==this._y)
{this._onMove.dispatch({property:"y"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"left",{get:function()
{return this._left;},set:function(value)
{if(typeof value!=="number"&&value!==null)
{return;}
this._left=value;this._horizontalCenter=false;if(this._parent===null||this._left===null)
{return;}
var x=this._x;this._x=value;this._dom.style.left=this._x+"px";if(this._onMove!==null&&x!==this._x)
{this._onMove.dispatch({property:"x"});}}});Object.defineProperty(FORGE.DisplayObject.prototype,"alpha",{get:function()
{return this._alpha;},set:function(value)
{if(typeof value!=="number"||value===this._alpha)
{return;}
this._alpha=value;this._dom.style.opacity=this._alpha;}});Object.defineProperty(FORGE.DisplayObject.prototype,"rotation",{get:function()
{return this._rotation;},set:function(value)
{if(typeof value!=="number"||value===this._rotation)
{return;}
this._rotation=value;this._dom.style.transform="rotate("+this._rotation+"deg)";}});Object.defineProperty(FORGE.DisplayObject.prototype,"background",{get:function()
{return this._background;},set:function(value)
{if(typeof value!=="string"||value===this._background)
{return;}
this._background=value;this._dom.style.background=this._background;}});Object.defineProperty(FORGE.DisplayObject.prototype,"borderStyle",{get:function()
{return this._borderStyle;},set:function(value)
{var borderStyles=["none","dotted","dashed","solid","double","groove","ridge","inset","outset"];if(borderStyles.indexOf(value)===-1||value===this._borderStyle)
{return;}
this._borderStyle=value;if(this._needPending===true)
{this._addPending("borderStyle",value);return;}
this._dom.style.borderStyle=this._borderStyle;}});Object.defineProperty(FORGE.DisplayObject.prototype,"borderWidth",{get:function()
{return this._borderWidth;},set:function(value)
{if(typeof value!=="number")
{return;}
var borderWidth=this._borderWidth;this._borderWidth=value;if(this._needPending===true)
{this._addPending("borderWidth",value);return;}
this._dom.style.borderWidth=this._borderWidth+"px";if(borderWidth!==this._borderWidth||this._pendingApplying===true)
{this._notifyBorderResize();}}});Object.defineProperty(FORGE.DisplayObject.prototype,"borderColor",{get:function()
{return this._borderColor;},set:function(value)
{if(typeof value!=="string"||value===this._borderColor)
{return;}
this._borderColor=value;this._dom.style.borderColor=this._borderColor;}});Object.defineProperty(FORGE.DisplayObject.prototype,"borderRadius",{get:function()
{return this._borderRadius;},set:function(value)
{if((typeof value!=="number"&&typeof value!=="string")||value===this._borderRadius)
{return;}
if(typeof value==="string")
{value=parseInt(value,10);}
if(isNaN(value))
{return;}
this._borderRadius=value;this._dom.style.borderRadius=this._borderRadius+"px";}});Object.defineProperty(FORGE.DisplayObject.prototype,"globalOffset",{get:function()
{var element=this._dom;var top=0,left=0;do
{top+=element.offsetTop||0;left+=element.offsetLeft||0;element=element.offsetParent;}
while(element);return{top:top,left:left};}});Object.defineProperty(FORGE.DisplayObject.prototype,"tooltip",{get:function()
{return this._tooltip;},set:function(value)
{if(typeof value!=="string"||value===this._tooltip)
{return;}
this._tooltip=value;this._dom.title=this._tooltip;}});Object.defineProperty(FORGE.DisplayObject.prototype,"index",{get:function()
{return this._index;},set:function(value)
{if(typeof value!=="number"||value===this._index)
{return;}
this._index=value;this._dom.style.zIndex=this._index;}});Object.defineProperty(FORGE.DisplayObject.prototype,"fullscreen",{set:function(value)
{if(typeof value!=="boolean")
{return;}
if(value===true)
{this.fullscreenEnter();}
else
{this.fullscreenExit();}}});Object.defineProperty(FORGE.DisplayObject.prototype,"pointer",{get:function()
{if(this._pointer===null)
{this._pointer=new FORGE.Pointer(this);}
return this._pointer;}});Object.defineProperty(FORGE.DisplayObject.prototype,"drag",{get:function()
{if(this._drag===null)
{this._drag=new FORGE.Drag(this);}
return this._drag;}});Object.defineProperty(FORGE.DisplayObject.prototype,"onResize",{get:function()
{if(this._onResize===null)
{this._onResize=new FORGE.EventDispatcher(this);}
return this._onResize;}});Object.defineProperty(FORGE.DisplayObject.prototype,"onBorderResize",{get:function()
{if(this._onBorderResize===null)
{this._onBorderResize=new FORGE.EventDispatcher(this);}
return this._onBorderResize;}});Object.defineProperty(FORGE.DisplayObject.prototype,"onMove",{get:function()
{if(this._onMove===null)
{this._onMove=new FORGE.EventDispatcher(this);}
return this._onMove;}});Object.defineProperty(FORGE.DisplayObject.prototype,"onReady",{get:function()
{if(this._onReady===null)
{this._onReady=new FORGE.EventDispatcher(this,true);}
return this._onReady;}});Object.defineProperty(FORGE.DisplayObject.prototype,"onAddedToParent",{get:function()
{if(this._onAddedToParent===null)
{this._onAddedToParent=new FORGE.EventDispatcher(this);}
return this._onAddedToParent;}});Object.defineProperty(FORGE.DisplayObject.prototype,"onAddedToDom",{get:function()
{if(this._onAddedToDom===null)
{this._onAddedToDom=new FORGE.EventDispatcher(this);}
return this._onAddedToDom;}});Object.defineProperty(FORGE.DisplayObject.prototype,"onShow",{get:function()
{if(this._onShow===null)
{this._onShow=new FORGE.EventDispatcher(this);}
return this._onShow;}});Object.defineProperty(FORGE.DisplayObject.prototype,"onHide",{get:function()
{if(this._onHide===null)
{this._onHide=new FORGE.EventDispatcher(this);}
return this._onHide;}});Object.defineProperty(FORGE.DisplayObject.prototype,"onFullscreenEnter",{get:function()
{if(this._onFullscreenEnter===null)
{this._onFullscreenEnter=new FORGE.EventDispatcher(this);}
return this._onFullscreenEnter;}});Object.defineProperty(FORGE.DisplayObject.prototype,"onFullscreenExit",{get:function()
{if(this._onFullscreenExit===null)
{this._onFullscreenExit=new FORGE.EventDispatcher(this);}
return this._onFullscreenExit;}});FORGE.DisplayObjectContainer=function(viewer,dom,className,root)
{this._children=[];this._root=(typeof root!=="undefined")?root:null;this._rootData=null;this._fitted=false;this._overflow="hidden";FORGE.DisplayObject.call(this,viewer,dom,className||"DisplayObjectContainer");};FORGE.DisplayObjectContainer.prototype=Object.create(FORGE.DisplayObject.prototype);FORGE.DisplayObjectContainer.prototype.constructor=FORGE.DisplayObjectContainer;FORGE.DisplayObjectContainer.prototype._boot=function()
{FORGE.DisplayObject.prototype._boot.call(this);if(this._className==="DisplayObjectContainer")
{var needsUpdate=this._root!==null;if(needsUpdate===true)
{this._rootData={originalWidth:this._root.clientWidth,originalHeight:this._root.clientHeight,currentWidth:this._root.clientWidth,currentHeight:this._root.clientHeight,scaleWidth:1,scaleHeight:1,frameCount:0,frameInterval:10};this._width=this._rootData.currentWidth;this._dom.style.width=this.pixelWidth+"px";this._height=this._rootData.currentHeight;this._dom.style.height=this.pixelHeight+"px";this._dom.style.position="absolute";this._root.appendChild(this._dom);}
this._viewer.display.register(this,needsUpdate);this._notifyReady();this._applyPending(false);}};FORGE.DisplayObjectContainer.prototype._notifyResize=function(data)
{for(var i=0,ii=this._children.length;i<ii;i++)
{this._children[i]._notifyParentResize(data);}
FORGE.DisplayObject.prototype._notifyResize.call(this,data);};FORGE.DisplayObjectContainer.prototype._notifyAddedToDom=function()
{FORGE.DisplayObject.prototype._notifyAddedToDom.call(this);for(var i=0,ii=this._children.length;i<ii;i++)
{this._children[i]._notifyAddedToDom();}};FORGE.DisplayObjectContainer.prototype._notifyShow=function()
{FORGE.DisplayObject.prototype._notifyShow.call(this);for(var i=0,ii=this._children.length;i<ii;i++)
{this._children[i]._notifyShow();}};FORGE.DisplayObjectContainer.prototype._notifyHide=function()
{FORGE.DisplayObject.prototype._notifyHide.call(this);for(var i=0,ii=this._children.length;i<ii;i++)
{this._children[i]._notifyHide();}};FORGE.DisplayObjectContainer.prototype._indexOfChild=function(child)
{if(this._children===null)
{return-1;}
for(var i=0,ii=this._children.length;i<ii;i++)
{if(this._children[i]===child)
{return i;}}
return-1;};FORGE.DisplayObjectContainer.prototype._applyChildrenIndexes=function()
{var child;for(var i=0,ii=this._children.length;i<ii;i++)
{child=this._children[i];child.index=i;}};FORGE.DisplayObjectContainer.prototype.update=function()
{this._rootData.frameCount++;if(this._rootData.frameCount<this._rootData.frameInterval)
{return;}
this._rootData.frameCount=0;var w=this._root.clientWidth;var h=this._root.clientHeight;var resized=false;if(w!==this._rootData.currentWidth)
{this._rootData.currentWidth=w;this._rootData.scaleWidth=this._rootData.currentWidth / this._rootData.originalWidth;resized=true;}
if(h!==this._rootData.currentHeight)
{this._rootData.currentHeight=h;this._rootData.scaleHeight=this._rootData.currentHeight / this._rootData.scaleHeight;resized=true;}
if(resized===true)
{this.resize(this._rootData.currentWidth,this._rootData.currentHeight);}};FORGE.DisplayObjectContainer.prototype.addChild=function(child)
{if(child===this)
{throw"You can't add a FORGE.DisplayObjectContainer to itself!";}
var c=child;if(child instanceof Element)
{c=new FORGE.DisplayObject(child);}
this._dom.appendChild(c.dom);c.parent=this;var index=this._children.push(c)-1;if(c.index===null)
{c.index=index;}};FORGE.DisplayObjectContainer.prototype.addChildAt=function(child,index)
{var c=child;if(child instanceof Element)
{c=new FORGE.DisplayObject(child);}
this._dom.appendChild(c.dom);c.parent=this;this._children.splice(index,0,c);c.index=index;this._applyChildrenIndexes();};FORGE.DisplayObjectContainer.prototype.fitToContent=function()
{var children=this._children;if(children.length>0)
{this._fitted=true;for(var i=0,ii=children.length;i<ii;i++)
{if(children[i].isInDom()===true&&children[i].visible===true)
{
//@todo what happens if visible or isInDOM are set after?var maxWidth=Math.max(children[i].width+children[i].x,children[i].width+children[i].left,children[i].width+children[i].right);var maxHeight=Math.max(children[i].height+children[i].y,children[i].height+children[i].top,children[i].height+children[i].bottom);if(maxWidth>this.pixelWidth)
{this.width=maxWidth;}
if(maxHeight>this.pixelHeight)
{this.height=maxHeight;}}}}
if(this.parent!==null&&FORGE.Utils.isTypeOf(this.parent,"DisplayObjectContainer")===true&&this.parent._fitted===true)
{this.parent.fitToContent();}};FORGE.DisplayObjectContainer.prototype.removeChild=function(child,destroy)
{var index=this._indexOfChild(child);if(index!==-1)
{this.removeChildAt(index,destroy);}};FORGE.DisplayObjectContainer.prototype.removeChildAt=function(index,destroy)
{if(index>=0&&index<this._children.length)
{var child=this._children[index];this._children.splice(index,1);this._dom.removeChild(child.dom);if(typeof destroy==="undefined"||destroy===true)
{child.destroy();}
if(this._fitted===true&&this._children.length===0)
{this.width=0;this.height=0;}}};FORGE.DisplayObjectContainer.prototype.empty=function(destroy)
{var index=this._children.length;while(index--)
{this.removeChildAt(index,destroy);}};FORGE.DisplayObjectContainer.prototype.hasChild=function(child)
{return this._indexOfChild(child)!==-1;};FORGE.DisplayObjectContainer.prototype.destroy=function()
{this.empty(false);this._children=null;this._root=null;this._rootData=null;FORGE.DisplayObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.DisplayObjectContainer.prototype,"children",{get:function()
{return this._children;}});Object.defineProperty(FORGE.DisplayObjectContainer.prototype,"overflow",{get:function()
{return this._overflow;},set:function(value)
{var values=["hidden","visible","scroll"];if(values.indexOf(value)!==-1)
{this._overflow=value;this._dom.style.overflow=value;}}});FORGE.Iframe=function(viewer,config)
{this._element=null;this._config=config||null;this._url="";this._i18n=false;this._i18nUrl="";this._i18nUrlLocaleString=null;this._loadCompleteBind=null;this._loaded=false;this._onLoadStart=null;this._onLoadComplete=null;FORGE.DisplayObject.call(this,viewer,null,"Iframe");};FORGE.Iframe.prototype=Object.create(FORGE.DisplayObject.prototype);FORGE.Iframe.prototype.constructor=FORGE.Iframe;FORGE.Iframe.prototype._boot=function()
{FORGE.DisplayObject.prototype._boot.call(this);this._loadCompleteBind=this._loadCompleteHandler.bind(this);this._element=document.createElement("iframe");this._element.style.width="100%";this._element.style.height="100%";this._element.style.border=0;this._element.style.overflow="hidden";this._element.addEventListener("load",this._loadCompleteBind,this!==null&&this!==undefined);this._element.setAttribute("allowFullScreen","");this._dom.appendChild(this._element);if(this._config!==null)
{this.load(this._config);}
this._viewer.display.register(this);this._notifyReady();this._applyPending(false);};FORGE.Iframe.prototype._localeChangeComplete=function()
{this.log("_localeChangeComplete");if(this._viewer.i18n.hasValue(this._i18nUrl)===true)
{var url=this._i18nUrlLocaleString.value;this._loadIframe(url);}};FORGE.Iframe.prototype._loadIframe=function(url)
{this.log("_loadIframe url: "+url);this._loaded=false;if(this._onLoadStart!==null)
{this._onLoadStart.dispatch();}
this._url=url;this._element.src=this._url;};FORGE.Iframe.prototype._loadCompleteHandler=function()
{if(this._url==="")
{return;}
this.log("_loadCompleteHandler url: "+this._url);this._loaded=true;if(this._onLoadComplete!==null)
{this._onLoadComplete.dispatch();}};FORGE.Iframe.prototype._parseConfig=function(config)
{if(typeof config==="object"&&config!==null)
{this._i18n=config.i18n||false;if(this._i18n===true)
{this._url="";this._i18nUrl=config.url;}
else
{this._url=config.url;}}
else
{this._i18n=false;this._url="";if(typeof config==="string")
{this._url=config;}}};FORGE.Iframe.prototype._addLocaleChangeListener=function()
{if(this._viewer.i18n.onLocaleChangeComplete.has(this._localeChangeComplete,this)===false)
{this._viewer.i18n.onLocaleChangeComplete.add(this._localeChangeComplete,this);}};FORGE.Iframe.prototype.load=function(config)
{this._parseConfig(config);var url;if(this._i18n===true&&(typeof this._i18nUrl==="string"&&this._i18nUrl!==""))
{this._i18nUrlLocaleString=new FORGE.LocaleString(this._viewer,this._i18nUrl);this._addLocaleChangeListener();url=this._i18nUrlLocaleString.value;}
else if(typeof this._url==="string"&&this._url!=="")
{url=this._url;}
if(typeof url!=="undefined")
{this._loadIframe(url);}};FORGE.Iframe.prototype.destroy=function()
{if(this._alive===false)
{return;}
if(this._i18nUrlLocaleString!==null)
{this._i18nUrlLocaleString.destroy();this._i18nUrlLocaleString=null;this._viewer.i18n.onLocaleChangeComplete.remove(this._localeChangeComplete,this);}
if(this._onLoadStart!==null)
{this._onLoadStart.destroy();this._onLoadStart=null;}
if(this._onLoadComplete!==null)
{this._onLoadComplete.destroy();this._onLoadComplete=null;}
this._element=null;this._loadCompleteBind=null;FORGE.DisplayObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Iframe.prototype,"i18nUrl",{get:function()
{return this._i18nUrl;},set:function(value)
{if(typeof value==="string")
{this._i18n=true;this._i18nUrl=value;var url;if(this._i18nUrl!=="")
{this._i18nUrlLocaleString=new FORGE.LocaleString(this._viewer,this._i18nUrl);this._addLocaleChangeListener();url=this._i18nUrlLocaleString.value;}
if(typeof url!=="undefined")
{this._loadIframe(url);}}}});Object.defineProperty(FORGE.Iframe.prototype,"url",{get:function()
{return this._url;},set:function(value)
{if(typeof value==="string")
{this._i18n=false;this._loadIframe(value);}}});Object.defineProperty(FORGE.Iframe.prototype,"loaded",{get:function()
{return this._loaded;}});Object.defineProperty(FORGE.Iframe.prototype,"onLoadStart",{get:function()
{if(this._onLoadStart===null)
{this._onLoadStart=new FORGE.EventDispatcher(this);}
return this._onLoadStart;}});Object.defineProperty(FORGE.Iframe.prototype,"onLoadComplete",{get:function()
{if(this._onLoadComplete===null)
{this._onLoadComplete=new FORGE.EventDispatcher(this);}
return this._onLoadComplete;}});FORGE.TextField=function(viewer,config)
{
//@import url(https://fonts.googleapis.com/css?family=Open+Sans&subset=latin,vietnamese);this._config=config;this._i18nKey="";this._i18n=false;this._i18nLocaleString=null;this._value="";this._color="rgb(0, 0, 0)";this._autoWidth=true;this._autoHeight=true;this._padding=0;this._selectable=false;this._editable=false;this._editableKeyBinding=null;this._wordWrap=false;this._textAlign="";this._textDecoration="";this._textShadow="";this._textTransform="";this._textOverflow="";this._whiteSpace="";this._font="";this._fontFamily="";this._fontSize="";this._fontStyle="";this._fontWeight="";this._fontVariant="";this._lineHeight="";this._span=null;this._textArea=null;this._clickBind=null;this._changeBind=null;this._blurBind=null;this._loaded=false;this._onValueChange=null;this._onLoadComplete=null;FORGE.DisplayObject.call(this,viewer,null,"TextField");};FORGE.TextField.prototype=Object.create(FORGE.DisplayObject.prototype);FORGE.TextField.prototype.constructor=FORGE.TextField;FORGE.TextField.prototype._boot=function()
{FORGE.DisplayObject.prototype._boot.call(this);this._clickBind=this._clickHandler.bind(this);this._changeBind=this._changeHandler.bind(this);this._blurBind=this._blurHandler.bind(this);this._span=document.createElement("span");this._dom.appendChild(this._span);if(typeof this._config!=="undefined"&&this._config!==null)
{this.load(this._config);}
this._viewer.display.register(this);this._notifyReady();this._applyPending(false);};FORGE.TextField.prototype._notifyResize=function(data)
{var property=data.property;if(property.toLowerCase().indexOf("width")!==-1&&property!=="autoWidth")
{this._autoWidth=false;}
if(property.toLowerCase().indexOf("height")!==-1&&property!=="autoHeight")
{this._autoHeight=false;}
FORGE.DisplayObject.prototype._notifyResize.call(this,data);};FORGE.TextField.prototype._notifyShow=function()
{this._updateAutoSize();FORGE.DisplayObject.prototype._notifyShow.call(this);};FORGE.TextField.prototype._updateValue=function(value)
{if(value!==this._value)
{this._value=String(value);this._span.innerHTML=value;this._updateAutoSize();this._updateAnchors();if(this._onValueChange!==null)
{this._onValueChange.dispatch();}}
if(this._i18n===false||(this._i18n===true&&this._i18nLocaleString.loaded===true))
{this._loaded=true;if(this._onLoadComplete!==null)
{this._onLoadComplete.dispatch();}}};FORGE.TextField.prototype._updateAutoSize=function()
{if(this.isInDom()===false)
{return;}
if(this._autoWidth===true)
{var width=this.pixelWidth;this._dom.style.width="";var w=this._dom.offsetWidth;if(w>0)
{w+=1;}
this._width=w;this._unitWidth="px";this._dom.style.width=this._width+"px";if(width!==this._width)
{this._notifyResize({property:"autoWidth"});}}
if(this._autoHeight===true)
{var height=this.pixelHeight;this._dom.style.height="";var h=this._dom.offsetHeight;if(h>0)
{h+=1;}
this._height=h;this._unitHeight="px";this._dom.style.height=this._height+"px";if(height!==this._height)
{this._notifyResize({property:"autoHeight"});}}};FORGE.TextField.prototype._createLocaleString=function()
{if(this._i18nLocaleString===null)
{this._i18nLocaleString=new FORGE.LocaleString(this._viewer,this._i18nKey);}
this._updateValue(this._i18nLocaleString.value);};FORGE.TextField.prototype._createLocaleStringEvent=function()
{if(this._viewer.i18n.onLocaleChangeComplete.has(this._localeChangeComplete,this)===false)
{this._viewer.i18n.onLocaleChangeComplete.add(this._localeChangeComplete,this);}};FORGE.TextField.prototype._localeChangeComplete=function()
{this.log("_localeChangeComplete");if(this._viewer.i18n.hasValue(this._i18nKey)===true)
{this.value=this._i18nLocaleString.value;}};FORGE.TextField.prototype._updateTextarea=function()
{};FORGE.TextField.prototype._clickHandler=function()
{if(this._editable===true&&this._textArea===null)
{this._createInput();this._textArea.focus();}};FORGE.TextField.prototype._changeHandler=function()
{this._updateValue(this._textArea.value);};FORGE.TextField.prototype._blurHandler=function()
{this._destroyInput();};FORGE.TextField.prototype._createInput=function()
{this._editing=true;this._textArea=document.createElement("textarea");this._textArea.style.position="absolute";this._textArea.style.top="0px";this._textArea.style.left="0px";this._textArea.style.width="100%";this._textArea.style.height="100%";this._textArea.style.resize="none";this._textArea.style.margin="0px";this._textArea.style.padding="0px";this._textArea.style.overflowX="hidden";this._textArea.style.overflowY="auto";this._textArea.style.boxSizing="border-box";this._textArea.value=this._value;this._textArea.addEventListener("input",this._changeBind,false);this._textArea.addEventListener("blur",this._blurBind,false);this._dom.appendChild(this._textArea);};FORGE.TextField.prototype._destroyInput=function()
{this._editing=false;if(this._textArea!==null)
{this._textArea.removeEventListener("input",this._changeBind,false);this._textArea.removeEventListener("blur",this._blurBind,false);this._dom.removeChild(this._textArea);this._textArea=null;}};FORGE.TextField.prototype._parseConfig=function(config)
{if(typeof config==="object"&&config!==null)
{if(config.color)
{this.color=config.color;}
if(config.font)
{this.font=config.font;}
if(config.fontFamily)
{this.fontFamily=config.fontFamily;}
if(config.fontWeight)
{this.fontWeight=config.fontWeight;}
if(config.fontSize)
{this.fontSize=config.fontSize;}
if(config.fontStyle)
{this.fontStyle=config.fontStyle;}
if(config.fontVariant)
{this.fontVariant=config.fontVariant;}
if(config.textAlign)
{this.textAlign=config.textAlign;}
if(config.textShadow)
{this.textShadow=config.textShadow;}
if(config.textDecoration)
{this.textDecoration=config.textDecoration;}
if(config.textOverflow)
{this.textOverflow=config.textOverflow;}
if(config.textTransform)
{this.textTransform=config.textTransform;}
if(config.whiteSpace)
{this.whiteSpace=config.whiteSpace;}
if(config.wordWrap)
{this.wordWrap=config.wordWrap;}
if(config.lineHeight)
{this.lineHeight=config.lineHeight;}
if(config.autoWidth)
{this.autoWidth=config.autoWidth;}
if(config.autoHeight)
{this.autoHeight=config.autoHeight;}
if(config.padding)
{this.padding=config.padding;}
if(config.selectable)
{this.selectable=config.selectable;}
if(config.editable)
{this.editable=config.editable;}
this._i18n=config.i18n||false;if(this._i18n===true)
{this._i18nKey=config.value;}
else
{this.value=config.value;}}
else if(typeof config==="string")
{this._i18n=false;this.value=config;}};FORGE.TextField.prototype.load=function(config)
{this._loaded=false;this._parseConfig(config);if(this._i18n===true&&(typeof this._i18nKey==="string"&&this._i18nKey!==""))
{this._createLocaleString();this._createLocaleStringEvent();}};FORGE.TextField.prototype.destroy=function()
{if(this._alive===false)
{return;}
if(this._i18nLocaleString!==null)
{this._i18nLocaleString.destroy();this._i18nLocaleString=null;this._viewer.i18n.onLocaleChangeComplete.remove(this._localeChangeComplete,this);}
this._destroyInput();if(this._onLoadComplete!==null)
{this._onLoadComplete.destroy();this._onLoadComplete=null;}
if(this._onValueChange!==null)
{this._onValueChange.destroy();this._onValueChange=null;}
FORGE.DisplayObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.TextField.prototype,"i18nValue",{get:function()
{return this._i18nKey;},set:function(value)
{if(typeof value!=="string")
{return;}
if(this._i18nKey==="")
{this._createLocaleStringEvent();}
this._i18n=true;this._i18nKey=value;this._createLocaleString();}});Object.defineProperty(FORGE.TextField.prototype,"i18n",{get:function()
{return this._i18n;}});Object.defineProperty(FORGE.TextField.prototype,"value",{get:function()
{return this._value;},set:function(value)
{if((typeof value!=="string"&&typeof value!=="number"))
{return;}
this._i18n=false;this._updateValue(value);}});Object.defineProperty(FORGE.TextField.prototype,"color",{get:function()
{return this._color;},set:function(value)
{if(typeof value!=="string")
{return;}
this._color=value;this._dom.style.color=this._color;}});Object.defineProperty(FORGE.TextField.prototype,"font",{get:function()
{return this._font;},set:function(value)
{if(typeof value!=="string")
{return;}
var valueArray=value.split(" ").toString();if(valueArray.length<2)
{return;}
this._font=value.replace(/"/g,"\"");this._dom.style.font=this._font;}});Object.defineProperty(FORGE.TextField.prototype,"fontFamily",{get:function()
{return this._fontFamily;},set:function(value)
{if(typeof value!=="string")
{return;}
this._fontFamily=value.replace(/"/g,"\"");this._dom.style.fontFamily=this._fontFamily;this._updateAutoSize();}});Object.defineProperty(FORGE.TextField.prototype,"fontSize",{get:function()
{return this._fontSize;},set:function(value)
{if(typeof value!=="number"&&typeof value!=="string")
{return;}
if(typeof value==="number")
{value=value+"px";}
this._fontSize=value;this._dom.style.fontSize=this._fontSize;}});Object.defineProperty(FORGE.TextField.prototype,"fontStyle",{get:function()
{return this._fontStyle;},set:function(value)
{if(typeof value!=="string")
{return;}
this._fontStyle=value;this._dom.style.fontStyle=this._fontStyle;}});Object.defineProperty(FORGE.TextField.prototype,"fontWeight",{get:function()
{return this._fontWeight;},set:function(value)
{if(typeof value!=="string"&&typeof value!=="number")
{return;}
this._fontWeight=value.toString();this._dom.style.fontWeight=this._fontWeight;}});Object.defineProperty(FORGE.TextField.prototype,"fontVariant",{get:function()
{return this._fontVariant;},set:function(value)
{if(typeof value!=="string")
{return;}
this._fontVariant=value;this._dom.style.fontVariant=this._fontVariant;}});Object.defineProperty(FORGE.TextField.prototype,"lineHeight",{get:function()
{return this._lineHeight;},set:function(value)
{if(typeof value!=="number"&&typeof value!=="string")
{return;}
if(typeof value==="number")
{value=value+"px";}
this._lineHeight=value;this._dom.style.lineHeight=this._lineHeight;}});Object.defineProperty(FORGE.TextField.prototype,"textAlign",{get:function()
{return this._textAlign;},set:function(value)
{if(typeof value!=="string")
{return;}
this._textAlign=value;this._dom.style.textAlign=this._textAlign;}});Object.defineProperty(FORGE.TextField.prototype,"textShadow",{get:function()
{return this._textShadow;},set:function(value)
{if(typeof value!=="string")
{return;}
this._textShadow=value;this._dom.style.textShadow=this._textShadow;}});Object.defineProperty(FORGE.TextField.prototype,"textDecoration",{get:function()
{return this._textDecoration;},set:function(value)
{if(typeof value!=="string")
{return;}
this._textDecoration=value;this._dom.style.textDecoration=this._textDecoration;}});Object.defineProperty(FORGE.TextField.prototype,"textTransform",{get:function()
{return this._textTransform;},set:function(value)
{if(typeof value!=="string")
{return;}
this._textTransform=value;this._dom.style.textTransform=this._textTransform;}});Object.defineProperty(FORGE.TextField.prototype,"autoWidth",{get:function()
{return this._autoWidth;},set:function(value)
{if(typeof value!=="boolean")
{return;}
this._autoWidth=value;this._updateAutoSize();}});Object.defineProperty(FORGE.TextField.prototype,"autoHeight",{get:function()
{return this._autoHeight;},set:function(value)
{if(typeof value!=="boolean")
{return;}
this._autoHeight=value;this._updateAutoSize();}});Object.defineProperty(FORGE.TextField.prototype,"padding",{get:function()
{return this._padding;},set:function(value)
{if(typeof value!=="number"&&typeof value!=="string")
{return;}
if(typeof value==="string")
{var valueArray=value.split(" ",4).toString();value=valueArray.replace(/,/g," ");}
else
{value=value+"px";}
this._padding=value;this._dom.style.padding=this._padding;}});Object.defineProperty(FORGE.TextField.prototype,"selectable",{get:function()
{return this._selectable;},set:function(value)
{if(typeof value!=="boolean")
{return;}
this._selectable=value;if(this._selectable===false)
{if(this._editable===false&&this._restoreMouse===true)
{this.pointer.enabled=false;this._restoreMouse=false;}
this._dom.style.userSelect="none";this._dom.style.webkitUserSelect="none";this._dom.style.mozUserSelect="none";this._dom.style.msUserSelect="none";this._dom.style.webkitTouchCallout="none";}
else
{if(this.pointer.enabled===false)
{this.pointer.enabled=true;this._restoreMouse=true;}
this._dom.style.userSelect="text";this._dom.style.webkitUserSelect="text";this._dom.style.mozUserSelect="text";this._dom.style.msUserSelect="text";this._dom.style.webkitTouchCallout="inherit";}}});Object.defineProperty(FORGE.TextField.prototype,"wordWrap",{get:function()
{return this._wordWrap;},set:function(value)
{if(typeof value!=="boolean")
{return;}
this._wordWrap=value;if(this._wordWrap===false)
{this._dom.style.wordWrap="normal";}
else
{this._dom.style.wordWrap="break-word";}}});Object.defineProperty(FORGE.TextField.prototype,"whiteSpace",{get:function()
{return this._whiteSpace;},set:function(value)
{if(typeof value!=="string")
{return;}
this._whiteSpace=value;this._dom.style.whiteSpace=this._whiteSpace;}});Object.defineProperty(FORGE.TextField.prototype,"textOverflow",{get:function()
{return this._textOverflow;},set:function(value)
{if(typeof value!=="string")
{return;}
this._textOverflow=value;this._dom.style.textOverflow=this._textOverflow;}});Object.defineProperty(FORGE.TextField.prototype,"editable",{get:function()
{return this._editable;},set:function(value)
{var bool=Boolean(value);if(this._editable===bool)
{return;}
this._editable=bool;if(this._editable===false)
{this._dom.removeEventListener("click",this._clickBind,this!==null&&this!==undefined);this._viewer.keyboard.removeBinding(this._editableKeyBinding);this._editableKeyBinding=null;this.pointer.enabled=true;this._dom.style.cursor="text";}
else
{this._dom.addEventListener("click",this._clickBind,this!==null&&this!==undefined);this._editableKeyBinding=new FORGE.KeyBinding(this._viewer,[13,27],this._destroyInput,null,null,null,this);this._viewer.keyboard.addBinding(this._editableKeyBinding);this._dom.style.cursor="default";}}});Object.defineProperty(FORGE.TextField.prototype,"loaded",{get:function()
{return this._loaded;}});Object.defineProperty(FORGE.TextField.prototype,"onLoadComplete",{get:function()
{if(this._onLoadComplete===null)
{this._onLoadComplete=new FORGE.EventDispatcher(this);}
return this._onLoadComplete;}});Object.defineProperty(FORGE.TextField.prototype,"onValueChange",{get:function()
{if(this._onValueChange===null)
{this._onValueChange=new FORGE.EventDispatcher(this);}
return this._onValueChange;}});FORGE.Button=function(viewer,config)
{this._config=config||null;this._skins={};this._skin="";this._state="";this._defaultSkin="";this._image=null;this._label=null;this._autoWidth=false;this._autoHeight=false;this._itemsLoaded=0;this._loaded=false;FORGE.DisplayObjectContainer.call(this,viewer,null,"Button");};FORGE.Button.prototype=Object.create(FORGE.DisplayObjectContainer.prototype);FORGE.Button.prototype.constructor=FORGE.Button;FORGE.Button.states={OUT:"out",OVER:"over",DOWN:"down"};FORGE.Button.prototype._boot=function()
{FORGE.DisplayObjectContainer.prototype._boot.call(this);this._state=FORGE.Button.states.OUT;this._image=new FORGE.Image(this._viewer);this._image.onLoadComplete.add(this._itemLoadComplete,this);this._image.onResize.add(this._itemResizeHandler,this);this.addChild(this._image);this._label=new FORGE.TextField(this._viewer);this._label.onLoadComplete.add(this._itemLoadComplete,this);this._label.onResize.add(this._itemResizeHandler,this);this._label.autoWidth=true;this._label.autoHeight=true;this.addChild(this._label);this.pointer.enabled=true;this.pointer.cursor=FORGE.Pointer.cursors.POINTER;this.pointer.onEnter.add(this._mouseEnterHandler,this);this.pointer.onLeave.add(this._mouseLeaveHandler,this);this.pointer.onPressStart.add(this._pressStartHandler,this);this.pointer.onPressEnd.add(this._pressEndHandler,this);this._viewer.display.register(this);this._notifyReady();this._applyPending(false);this._viewer.i18n.onLocaleChangeComplete.add(this._localeChangeCompleteHandler,this);this.load(this._config);};FORGE.Button.prototype._mouseEnterHandler=function()
{this._applyState(FORGE.Button.states.OVER);};FORGE.Button.prototype._mouseLeaveHandler=function()
{this._applyState(FORGE.Button.states.OUT);};FORGE.Button.prototype._pressStartHandler=function()
{this._applyState(FORGE.Button.states.DOWN);};FORGE.Button.prototype._pressEndHandler=function()
{this._applyState(FORGE.Button.states.OVER);};FORGE.Button.prototype._localeChangeCompleteHandler=function()
{this._applyState(this._state);};FORGE.Button.prototype._itemLoadComplete=function(event)
{this.log("_itemLoadComplete "+event.emitter.className);this._itemsLoaded++;if(this._itemsLoaded===2)
{this._allItemsLoaded();}};FORGE.Button.prototype._allItemsLoaded=function()
{this.log("_allItemsLoaded");this._updateLayout();this._updateAutoSize();this._loaded=true;};FORGE.Button.prototype._itemResizeHandler=function()
{this._updateLayout();this._updateAutoSize();};FORGE.Button.prototype._applySkin=function(name)
{this._skin=name;this._applyState(this._state);};FORGE.Button.prototype._applyState=function(state)
{this._loaded=false;this._state=state;var skin=this._skins[this._skin];this._itemsLoaded=0;var hasImage=skin.hasImage(this._state);this.background=(skin.getProperty("background",this._state));this.borderStyle=(skin.getProperty("borderStyle",this._state));this.borderColor=(skin.getProperty("borderColor",this._state));this.borderRadius=(skin.getProperty("borderRadius",this._state));this.borderWidth=(skin.getProperty("borderWidth",this._state));this._autoWidth=(skin.getProperty("autoWidth",this._state));this._autoHeight=(skin.getProperty("autoHeight",this._state));var label=(skin.getProperty("label",this._state));
//@todo !!!if(typeof label!=="undefined")
{this._label.load(label);}
if(hasImage===true)
{this._image.load((skin.getProperty("image",this._state)));}
else
{}};FORGE.Button.prototype._updateLayout=function()
{this.log("_updateLayout");var skin=this._skins[this._skin];var align=skin.getProperty("align",this._state);var padding=skin.getProperty("padding",this._state);var spacing=skin.getProperty("spacing",this._state);var f=skin.getProperty("first",this._state);var first,second;if(f==="label")
{first=this._label;second=this._image;}
else
{first=this._image;second=this._label;}
switch(align)
{case"left":first.left=padding;first.verticalCenter=true;second.left=first.left+spacing+first.pixelWidth;second.verticalCenter=true;break;case"right":first.right=padding;first.verticalCenter=true;second.right=first.right+spacing+first.pixelWidth;second.verticalCenter=true;break;case"top":first.top=padding;first.horizontalCenter=true;second.top=first.top+first.pixelHeight+spacing;second.horizontalCenter=true;break;case"bottom":first.bottom=padding;first.horizontalCenter=true;second.bottom=first.bottom+spacing+first.pixelHeight;second.horizontalCenter=true;break;default:first.horizontalCenter=true;first.verticalCenter=true;second.horizontalCenter=true;second.verticalCenter=true;}};FORGE.Button.prototype._updateAutoSize=function()
{this.log("_updateAutoSize");if(this._autoWidth===false&&this._autoHeight===false)
{return;}
var skin=this._skins[this._skin];var padding=(skin.getProperty("padding",this._state));if(this._autoWidth===true)
{var width=this.pixelWidth;var xMin=Math.min(this._label.x,this._image.x);var xMax=Math.max(this._label.x+this._label.pixelWidth,this._image.x+this._image.pixelWidth);this._width=(xMax-xMin)+padding*2+this._borderWidth*2;this._unitWidth="px";this._dom.style.width=this._width+"px";if(width!==this.pixelWidth)
{this._notifyResize({property:"autoWidth"});}}
if(this._autoHeight===true)
{var height=this.pixelHeight;var yMin=Math.min(this._label.y,this._image.y);var yMax=Math.max(this._label.y+this._label.pixelHeight,this._image.y+this._image.pixelHeight);this._height=(yMax-yMin)+padding*2+this._borderWidth*2;this._unitHeight="px";this._dom.style.height=this._height+"px";if(height!==this.pixelHeight)
{this._notifyResize({property:"autoHeight"});}}};FORGE.Button.prototype._parseConfig=function(config)
{if(typeof config!=="undefined"&&config!==null)
{if(FORGE.Utils.isArrayOf(config.skins,"ButtonSkin")===true)
{for(var i=0,ii=config.skins.length;i<ii;i++)
{this.addSkin(config.skins[i]);}}
else
{if(typeof config.skins==="object"&&config.skins.length>0)
{var skin;for(var j=0,jj=config.skins.length;j<jj;j++)
{skin=new FORGE.ButtonSkin(config.skins[j].name,config.skins[j].states);this.addSkin(skin);}}}
if(FORGE.Utils.isTypeOf(config.skin,"ButtonSkin"))
{this.addSkin(config.skin);}
else
{if(typeof config.skin==="object")
{var singleSkin=new FORGE.ButtonSkin(config.skin.name,config.skin.states);this.addSkin(singleSkin);}}
if(FORGE.Utils.isTypeOf(config.default,"string")===true&&this.hasSkin((config.default))===true)
{this._defaultSkin=(config.default);}}
var skins=this._skins||{};if(Object.keys(skins).length===0)
{var defaultSkin=new FORGE.ButtonSkin("default");this.addSkin(defaultSkin);}
if(this._defaultSkin==="")
{this._defaultSkin=this._skins[Object.keys(skins)[0]].name;}};FORGE.Button.prototype._destroyImage=function()
{if(this._image!==null)
{this._image.onLoadComplete.remove(this._itemLoadComplete,this);this._image.onResize.remove(this._itemResizeHandler,this);this.removeChild(this._image,true);this._image=null;}};FORGE.Button.prototype._destroyLabel=function()
{if(this._label!==null)
{this._label.onLoadComplete.remove(this._itemLoadComplete,this);this._label.onResize.remove(this._itemResizeHandler,this);this.removeChild(this._label,true);this._label=null;}};FORGE.Button.prototype.load=function(config)
{this._parseConfig(config);this._applySkin(this._defaultSkin);};FORGE.Button.prototype.addSkin=function(skin,setup)
{if(FORGE.Utils.isTypeOf(skin,"ButtonSkin")===false)
{throw"FORGE.Button: Invalid button skin!";}
skin.setDefaultFromState(FORGE.Button.states.OUT);this._skins[skin.name]=skin;if(setup===true)
{this._applySkin(skin.name);}};FORGE.Button.prototype.setSkin=function(value)
{if(typeof value==="string"&&FORGE.Utils.isTypeOf(this._skins[value],"ButtonSkin")===true)
{this._applySkin(value);}
else if(FORGE.Utils.isTypeOf(value,"ButtonSkin")===true)
{if(this._skins[value.name]===value)
{this._applySkin(value.name);}
else if(typeof this._skins[value.name]==="undefined"||this._skins[value.name]===null)
{this.addSkin((value),true);}}};FORGE.Button.prototype.hasSkin=function(name)
{return(typeof this._skins[name]!=="undefined");};FORGE.Button.prototype.updateSkin=function()
{this._skins[this._skin].setDefaultFromState(FORGE.Button.states.OUT);this._applySkin(this._skin);};FORGE.Button.prototype.destroy=function()
{this._viewer.i18n.onLocaleChangeComplete.remove(this._localeChangeCompleteHandler,this);if(typeof this._skins!=="undefined"&&this._skins.length>0)
{for(var i in this._skins)
{if(this._skins.hasOwnProperty(i))
{this._skins[i].destroy();}}}
this._skins={};this._destroyImage();this._destroyLabel();FORGE.DisplayObjectContainer.prototype.destroy.call(this);};Object.defineProperty(FORGE.Button.prototype,"skins",{get:function()
{return this._skins;}});Object.defineProperty(FORGE.Button.prototype,"skin",{get:function()
{return this._skins[this._skin];},set:function(value)
{this.setSkin(value);}});Object.defineProperty(FORGE.Button.prototype,"autoWidth",{get:function()
{return this._autoWidth;},set:function(value)
{if(typeof value!=="boolean")
{return;}
this._autoWidth=value;this._updateAutoSize();}});Object.defineProperty(FORGE.Button.prototype,"autoHeight",{get:function()
{return this._autoHeight;},set:function(value)
{if(typeof value!=="boolean")
{return;}
this._autoHeight=value;this._updateAutoSize();}});FORGE.ButtonSkin=function(name,states)
{this._name=name||"";this._defaultState=(FORGE.Utils.extendSimpleObject(FORGE.ButtonSkin.DEFAULT_STATE,{}));this._states=(FORGE.Utils.extendSimpleObject((states||{}),{"out":{},"over":{},"down":{}}));FORGE.BaseObject.call(this,"ButtonSkin");};FORGE.ButtonSkin.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.ButtonSkin.prototype.constructor=FORGE.ButtonSkin;FORGE.ButtonSkin.EMPTY_STATE_IMAGE={key:"",url:"",i18n:false,keepRatio:true,maximized:false,alpha:1};FORGE.ButtonSkin.EMPTY_STATE_LABEL={value:"",i18n:false,color:"",fontFamily:"",fontWeight:""};FORGE.ButtonSkin.EMPTY_STATE={name:"",background:"",borderStyle:"solid",borderColor:"",borderRadius:0,borderWidth:0,autoWidth:true,autoHeight:true,align:"center",padding:0,spacing:0,first:"image",image:(FORGE.ButtonSkin.EMPTY_STATE_IMAGE),label:(FORGE.ButtonSkin.EMPTY_STATE_LABEL)};FORGE.ButtonSkin.DEFAULT_STATE_IMAGE={key:"",url:"",i18n:false,keepRatio:true,maximized:false,alpha:1};FORGE.ButtonSkin.DEFAULT_STATE_LABEL={value:"Button",i18n:false,color:"",fontFamily:"",fontWeight:""};FORGE.ButtonSkin.DEFAULT_STATE={name:"default",background:"#eee",borderStyle:"solid",borderColor:"#555",borderRadius:5,borderWidth:2,autoWidth:true,autoHeight:true,align:"left",padding:5,spacing:0,first:"image",image:(FORGE.ButtonSkin.DEFAULT_STATE_IMAGE),label:(FORGE.ButtonSkin.DEFAULT_STATE_LABEL)};FORGE.ButtonSkin.prototype.setDefaultFromState=function(name)
{if(typeof this._states[name]!=="undefined")
{this._defaultState=this._states[name];}};FORGE.ButtonSkin.isValid=function(skin)
{if(skin)
{return true;}
return false;};FORGE.ButtonSkin.prototype.getProperty=function(property,state)
{var result=FORGE.Utils.getObjectProperty(this._states,state+"."+property,FORGE.Utils.getObjectProperty(this._defaultState,property,FORGE.Utils.getObjectProperty(FORGE.ButtonSkin.EMPTY_STATE,property)));if(typeof result==="object")
{result=FORGE.Utils.extendSimpleObject(this._defaultState[property],(result));}
return result;};FORGE.ButtonSkin.prototype.hasImage=function(state)
{var image=this.getProperty("image",state);return(typeof image!=="undefined"&&(typeof image.url==="string"&&image.url!==""));};FORGE.ButtonSkin.prototype.hasLabel=function(state)
{var label=this.getProperty("label",state);return(typeof label!=="undefined"&&(typeof label.value==="string"&&label.value!==""));};Object.defineProperty(FORGE.ButtonSkin.prototype,"name",{get:function()
{return this._name;}});Object.defineProperty(FORGE.ButtonSkin.prototype,"default",{get:function()
{return this._defaultState;},set:function(value)
{this._defaultState=value;}});Object.defineProperty(FORGE.ButtonSkin.prototype,"out",{get:function()
{return this._states.out;},set:function(value)
{this._states.out=value;}});Object.defineProperty(FORGE.ButtonSkin.prototype,"over",{get:function()
{return this._states.over;},set:function(value)
{this._states.over=value;}});Object.defineProperty(FORGE.ButtonSkin.prototype,"down",{get:function()
{return this._states.down;},set:function(value)
{this._states.down=value;}});FORGE.Canvas=function(viewer)
{FORGE.DisplayObject.call(this,viewer,document.createElement("canvas"),"Canvas");};FORGE.Canvas.prototype=Object.create(FORGE.DisplayObject.prototype);FORGE.Canvas.prototype.constructor=FORGE.Canvas;FORGE.Canvas.prototype._boot=function()
{FORGE.DisplayObject.prototype._boot.call(this);this._viewer.display.register(this);this._notifyReady();this._applyPending(false);};Object.defineProperty(FORGE.Canvas.prototype,"context2D",{get:function()
{return this._dom.getContext("2d");}});Object.defineProperty(FORGE.Canvas.prototype,"context3D",{get:function()
{return this._dom.getContext("webgl");}});Object.defineProperty(FORGE.Canvas.prototype,"element",{get:function()
{return this._dom;}});FORGE.Image=function(viewer,config,className)
{this._config=config||null;this._imageKey="";this._imageUrl="";this._i18n=false;this._i18nImageKey="";this._i18nImageUrl="";this._i18nImageUrlLocaleString=null;this._img=null;this._imageLoaded=false;this._frame=null;this._frames=null;this._framesUrl="";this._framesLoaded=false;this._loaded=false;this._autoWidth=true;this._autoHeight=true;this._renderMode="";this._canvas=null;this._onLoadStart=null;this._onLoadComplete=null;this._onLoadError=null;FORGE.DisplayObject.call(this,viewer,null,className||"Image");};FORGE.Image.prototype=Object.create(FORGE.DisplayObject.prototype);FORGE.Image.prototype.constructor=FORGE.Image;FORGE.Image.renderModes={};FORGE.Image.renderModes.CSS="css";FORGE.Image.renderModes.CANVAS="canvas";FORGE.Image.renderMode=FORGE.Image.renderModes.CANVAS;FORGE.Image.prototype._boot=function()
{FORGE.DisplayObject.prototype._boot.call(this);this._keepRatio=true;if(this._config!==null)
{this.load(this._config);}
this._viewer.display.register(this);this._notifyReady();};FORGE.Image.prototype._notifyResize=function(data)
{var property=data.property;if(property.toLowerCase().indexOf("width")!==-1&&property!=="autoWidth")
{this._autoWidth=false;}
if(property.toLowerCase().indexOf("height")!==-1&&property!=="autoHeight")
{this._autoHeight=false;}
if(this._img===null)
{return;}
if(this._renderMode===FORGE.Image.renderModes.CSS)
{this._updateBackgroundSize();this._updateBackgroundPosition();}
else if(this._renderMode===FORGE.Image.renderModes.CANVAS)
{if(this._frame!==null)
{this._drawFrame(this._frame);}}
if(this._keepRatio===true)
{if(property.toLowerCase().indexOf("width")!==-1)
{this._updateScaleWidth();}
else if(property.toLowerCase().indexOf("height")!==-1)
{this._updateScaleHeight();}}
FORGE.DisplayObject.prototype._notifyResize.call(this,data);};FORGE.Image.prototype._notifyBorderResize=function()
{if(this._renderMode===FORGE.Image.renderModes.CSS)
{this._dom.style.backgroundPosition=(-this._borderWidth)+"px "+(-this._borderWidth)+"px";}
else if(this._renderMode===FORGE.Image.renderModes.CANVAS)
{this._canvas.style.top=-this._borderWidth+"px";this._canvas.style.left=-this._borderWidth+"px";}
FORGE.DisplayObject.prototype._notifyBorderResize.call(this);};FORGE.Image.prototype._notifyLoadComplete=function()
{if(this._onLoadComplete!==null)
{this._onLoadComplete.dispatch();}};FORGE.Image.prototype._getLocalizedCacheKey=function(locale)
{return this._imageKey+"_"+locale;};FORGE.Image.prototype._localeChangeComplete=function()
{var key=this._getLocalizedCacheKey(this._viewer.i18n.locale);if(key===this._i18nImageKey)
{return;}
this._i18nImageKey=key;if(this._viewer.i18n.hasValue(this._i18nImageUrl)===true)
{var url=this._i18nImageUrlLocaleString.value;this._loadImage(key,url);}};FORGE.Image.prototype._setRenderMode=function(mode)
{if(mode===FORGE.Image.renderModes.CSS||mode===FORGE.Image.renderModes.CANVAS)
{this._renderMode=mode;}
if(this._renderMode===FORGE.Image.renderModes.CSS)
{this._dom.style.backgroundRepeat="no-repeat";}
else if(this._renderMode===FORGE.Image.renderModes.CANVAS&&this._canvas===null)
{this._canvas=document.createElement("canvas");this._canvas.style.position="absolute";this._canvas.style.top="0px";this._canvas.style.left="0px";this._dom.appendChild(this._canvas);}};FORGE.Image.prototype._setFrame=function(frame)
{this._frame=frame;if(this._autoWidth===true)
{this._width=this._frame.w;this._unitWidth="px";this._dom.style.width=this.pixelWidth+"px";}
if(this._autoHeight===true)
{this._height=this._frame.h;this._unitHeight="px";this._dom.style.height=this.pixelHeight+"px";}
if(this._renderMode===FORGE.Image.renderModes.CSS)
{this._updateBackgroundSize();this._updateBackgroundPosition();}
else if(this._renderMode===FORGE.Image.renderModes.CANVAS)
{this._drawFrame(this._frame);}};FORGE.Image.prototype._drawFrame=function(frame)
{if(this._img===null||this._imageLoaded===false)
{return;}
this._canvas.width=this.innerWidth;this._canvas.height=this.innerHeight;var ctx=this._canvas.getContext("2d");ctx.clearRect(0,0,this.innerWidth,this.innerHeight);ctx.drawImage(this._img,frame.x,frame.y,frame.w,frame.h,0,0,this.innerWidth,this.innerHeight);};FORGE.Image.prototype._updateBackgroundSize=function()
{var backgroundWidth=(this.pixelWidth / this._frame.w)*this._img.naturalWidth;var backgroundHeight=(this.pixelHeight / this._frame.h)*this._img.naturalHeight;this._dom.style.backgroundSize=backgroundWidth+"px "+backgroundHeight+"px";};FORGE.Image.prototype._updateBackgroundPosition=function()
{var posX=(-this._frame.x-this._borderWidth)*(this.pixelWidth / this._frame.w);var posY=(-this._frame.y-this._borderWidth)*(this.pixelHeight / this._frame.h);this._dom.style.backgroundPosition=posX+"px "+posY+"px";};FORGE.Image.prototype._updateScaleWidth=function()
{var scaleWidth=this.pixelWidth / this._frame.w;if(scaleWidth===this._scaleWidth)
{return;}
this._scaleWidth=scaleWidth;if(this._keepRatio===true)
{this._scaleHeight=scaleWidth;this.height=this._frame.h*this._scaleHeight;}};FORGE.Image.prototype._updateScaleHeight=function()
{var scaleHeight=this.pixelHeight / this._frame.h;if(scaleHeight===this._scaleHeight)
{return;}
this._scaleHeight=scaleHeight;if(this._keepRatio===true)
{this._scaleWidth=scaleHeight;this.width=this._frame.w*this._scaleWidth;}};FORGE.Image.prototype._loadImage=function(key,url)
{this._loaded=false;this._viewer.load.image(key,url,this._loadImageComplete,this._loadImageError,this);};FORGE.Image.prototype._loadImageComplete=function(file)
{if(this._alive===false)
{return;}
this._img=file.data;if(this._renderMode===FORGE.Image.renderModes.CSS)
{this._dom.style.backgroundImage="url('"+file.url+"')";}
this._imageLoaded=true;this._loadComplete();};FORGE.Image.prototype._loadImageError=function(file)
{if(this._alive===false)
{return;}
this.warn(file.url+" load error");if(this._onLoadError!==null)
{this._onLoadError.dispatch();}};FORGE.Image.prototype._loadFrames=function(url)
{this._loaded=false;var key=this._imageKey+"-frames";this._viewer.load.json(key,url,this._loadFramesComplete,this);};FORGE.Image.prototype._loadFramesComplete=function(file)
{if(typeof file.data.frames!=="undefined")
{this._frames=file.data.frames;}
else
{this.warn("No frames found in file!");}
this._framesLoaded=true;this._loadComplete();};FORGE.Image.prototype._loadComplete=function()
{if(this._loaded===true)
{return;}
if(this._imageLoaded===true&&this._framesLoaded===true)
{this._loaded=true;var frame;if(this._frame!==null)
{frame=this._frame;}
else
{if(this._frames!==null)
{frame=this._frames[0].frame;}
else
{frame={x:0,y:0,w:this._img.naturalWidth,h:this._img.naturalHeight};}}
this._setFrame(frame);this._updateAnchors();this._applyPending(false);this._notifyLoadComplete();}};FORGE.Image.prototype._parseConfig=function(config)
{if(typeof config==="object"&&config!==null)
{var renderMode=(typeof config.renderMode==="string")?config.renderMode:FORGE.Image.renderMode;this._setRenderMode(renderMode);this._imageKey=config.key||"";this._i18n=config.i18n||false;if(this._i18n===true)
{this._imageUrl="";this._i18nImageUrl=config.url;}
else
{this._imageUrl=config.url;}
this._frame=config.frame||null;if(typeof config.frames==="string")
{this._framesUrl=config.frames;}
else if(typeof config.frames==="object"&&config.frames!==null)
{this._frames=config.frames;}
this.alpha=config.alpha;this.keepRatio=config.keepRatio;this.maximized=config.maximized;this.width=config.width;this.height=config.height;}
else
{this._setRenderMode(FORGE.Image.renderMode);this._imageKey="";this._imageUrl="";this._i18n=false;if(typeof config==="string")
{this._imageUrl=config;}}};FORGE.Image.prototype.load=function(config)
{this._loaded=false;this._imageLoaded=false;this._framesLoaded=false;this._parseConfig(config);var imageKey=this._imageKey;var imageUrl=this._imageUrl;if(this._i18n===true&&typeof this._i18nImageUrl==="string")
{this._i18nImageUrlLocaleString=new FORGE.LocaleString(this._viewer,this._i18nImageUrl);if(this._viewer.i18n.onLocaleChangeComplete.has(this._localeChangeComplete,this)===false)
{this._viewer.i18n.onLocaleChangeComplete.add(this._localeChangeComplete,this);}
var locale=this._viewer.i18n.locale;if(locale!=="")
{imageKey=this._getLocalizedCacheKey(locale);}
if(this._viewer.i18n.hasValue(this._i18nImageUrl)===true)
{imageUrl=this._i18nImageUrlLocaleString.value;}}
if(imageUrl!=="")
{this._loadImage(imageKey,imageUrl);}
else
{this._imageLoaded=true;}
if(typeof this._framesUrl==="string"&&this._framesUrl!=="")
{this._loadFrames(this._framesUrl);}
else
{this._framesLoaded=true;}};FORGE.Image.prototype.unload=function()
{this._dom.style.backgroundImage="";this._img=null;};FORGE.Image.prototype.destroy=function(clearCache)
{if(this._alive===false)
{return;}
if(this._i18nImageUrlLocaleString!==null)
{this._i18nImageUrlLocaleString.destroy();this._i18nImageUrlLocaleString=null;this._viewer.i18n.onLocaleChangeComplete.remove(this._localeChangeComplete,this);}
if(this._onLoadStart!==null)
{this._onLoadStart.destroy();this._onLoadStart=null;}
if(this._onLoadComplete!==null)
{this._onLoadComplete.destroy();this._onLoadComplete=null;}
if(this._onLoadError!==null)
{this._onLoadError.destroy();this._onLoadError=null;}
this._img=null;if(typeof clearCache==="undefined"||clearCache===true)
{if(this._i18n===true)
{var locales=this._viewer.i18n.locales;var cacheKey;for(var i=0,ii=locales.length;i<ii;i++)
{cacheKey=this._getLocalizedCacheKey(locales[i]);this._viewer.cache.remove(FORGE.Cache.types.IMAGE,cacheKey);}}
else
{this._viewer.cache.remove(FORGE.Cache.types.IMAGE,this._imageKey);}}
FORGE.DisplayObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Image.prototype,"loaded",{get:function()
{return this._loaded;}});Object.defineProperty(FORGE.Image.prototype,"element",{get:function()
{return this._img;}});Object.defineProperty(FORGE.Image.prototype,"canvas",{get:function()
{return this._canvas;}});Object.defineProperty(FORGE.Image.prototype,"frame",{get:function()
{return this._frame;},set:function(frame)
{this._setFrame(frame);}});Object.defineProperty(FORGE.Image.prototype,"frames",{get:function()
{return this._frames;}});Object.defineProperty(FORGE.Image.prototype,"originalWidth",{get:function()
{if(this._img!==null)
{return this._img.naturalWidth;}}});Object.defineProperty(FORGE.Image.prototype,"originalHeight",{get:function()
{if(this._img!==null)
{return this._img.naturalHeight;}}});Object.defineProperty(FORGE.Image.prototype,"onLoadStart",{get:function()
{if(this._onLoadStart===null)
{this._onLoadStart=new FORGE.EventDispatcher(this);}
return this._onLoadStart;}});Object.defineProperty(FORGE.Image.prototype,"onLoadComplete",{get:function()
{if(this._onLoadComplete===null)
{this._onLoadComplete=new FORGE.EventDispatcher(this);}
return this._onLoadComplete;}});Object.defineProperty(FORGE.Image.prototype,"onLoadError",{get:function()
{if(this._onLoadError===null)
{this._onLoadError=new FORGE.EventDispatcher(this);}
return this._onLoadError;}});FORGE.Sprite=function(viewer,config)
{this._animations=null;FORGE.Image.call(this,viewer,config,"Sprite");};FORGE.Sprite.prototype=Object.create(FORGE.Image.prototype);FORGE.Sprite.prototype.constructor=FORGE.Sprite;FORGE.Sprite.prototype._boot=function()
{this._animations=new FORGE.SpriteAnimationManager(this);FORGE.Image.prototype._boot.call(this);this._viewer.display.register(this,true);};FORGE.Sprite.prototype._parseConfig=function(config)
{FORGE.Image.prototype._parseConfig.call(this,config);if(typeof config.frameRate==="number")
{this._animations.frameRate=config.frameRate;}
if(Array.isArray(config.animations)===true)
{this._animations.addConfig(config.animations);}
var animation=(typeof config.animation==="string")?config.animation:"default";var loop=(typeof config.loop==="boolean")?config.loop:true;var frame=(typeof config.frame==="number"&&isNaN(config.frame)===false)?config.frame:0;this._animations.play(animation,loop,frame);if(config.paused===true||typeof config.paused==="number")
{this._animations.pause(frame);}};FORGE.Sprite.prototype.play=function(animation,loop,index)
{this._animations.play(animation,loop,index);};FORGE.Sprite.prototype.pause=function(index)
{this._animations.pause(index);};FORGE.Sprite.prototype.resume=function(index)
{this._animations.resume(index);};FORGE.Sprite.prototype.stop=function()
{this._animations.stop();};FORGE.Sprite.prototype.update=function()
{this._animations.update();};FORGE.Sprite.prototype.destroy=function()
{if(this._alive===false)
{return;}
this._animations.destroy();this._animations=null;FORGE.Image.prototype.destroy.call(this);};Object.defineProperty(FORGE.Sprite.prototype,"animations",{get:function()
{return this._animations;}});Object.defineProperty(FORGE.Sprite.prototype,"animation",{get:function()
{return this._animations.current;}});FORGE.SpriteAnimationManager=function(sprite)
{this._sprite=sprite;this._anims={};this._animation="default";this._frameRate=30;this._pending=[];FORGE.BaseObject.call(this,"SpriteAnimationManager");this._boot();};FORGE.SpriteAnimationManager.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.SpriteAnimationManager.prototype.constructor=FORGE.SpriteAnimationManager;FORGE.SpriteAnimationManager.prototype._boot=function()
{this.add("default");if(this._sprite.loaded===false)
{this._sprite.onLoadComplete.addOnce(this._spriteLoadComplete,this);}};FORGE.SpriteAnimationManager.prototype._spriteLoadComplete=function()
{this.log("_spriteLoadComplete");var method,args;for(var i=0,ii=this._pending.length;i<ii;i++)
{method=this._pending[i].method;args=this._pending[i].args;FORGE.SpriteAnimationManager.prototype[method].apply(this,args);}
this._pending=[];};FORGE.SpriteAnimationManager.prototype.addConfig=function(config)
{if(Array.isArray(config)===true)
{var anim;for(var i=0,ii=config.length;i<ii;i++)
{anim=config[i];this.add(anim.name,anim.start,anim.end,anim.frameRate,anim.loop);}}};FORGE.SpriteAnimationManager.prototype.add=function(name,start,end,frameRate,loop)
{if(this._sprite.loaded===false)
{this._pending.push({method:"add",args:arguments});return;}
this.log("add");name=(typeof name==="string")?name:"default";start=parseInt(start,10);end=parseInt(end,10);frameRate=(typeof frameRate==="number")?frameRate:this._frameRate;loop=(typeof loop==="boolean")?loop:true;var frames=this._sprite.frames;if(typeof start!=="number"||isNaN(start)===true||start<0||start>=frames.length)
{start=0;}
if(typeof end!=="number"||isNaN(end)===true||end<0||end>=frames.length)
{end=frames.length-1;}
var selectedFrames=frames.slice(start,end+1);this._anims[name]=new FORGE.SpriteAnimation(this._sprite,name,selectedFrames,frameRate,loop);};FORGE.SpriteAnimationManager.prototype.play=function(animation,loop,index)
{if(this._sprite.loaded===false)
{this._pending.push({method:"play",args:[animation,loop,index]});return;}
animation=(typeof animation==="string")?animation:(this.current!==null)?this.current.name:"default";loop=(typeof loop==="boolean")?loop:true;index=(typeof index==="number"&&isNaN(index)===false)?index:0;var anim=this.get(animation);if(anim!==null)
{anim.play(loop,index);}};FORGE.SpriteAnimationManager.prototype.pause=function(index)
{if(this._sprite.loaded===false)
{this._pending.push({method:"pause",args:[index]});return;}
if(this.current!==null)
{this.current.pause(index);}};FORGE.SpriteAnimationManager.prototype.resume=function(index)
{if(this._sprite.loaded===false)
{this._pending.push({method:"resume",args:[index]});return;}
if(this.current!==null)
{this.current.resume(index);}};FORGE.SpriteAnimationManager.prototype.stop=function()
{if(this._sprite.loaded===false)
{this._pending.push({method:"stop",args:[]});return;}
if(this.current!==null)
{this.current.stop();}};FORGE.SpriteAnimationManager.prototype.get=function(name)
{if(FORGE.Utils.isTypeOf(this._anims[name],"SpriteAnimation")===true)
{return this._anims[name];}
return null;};FORGE.SpriteAnimationManager.prototype.update=function()
{if(this.current!==null)
{this.current.update();}};FORGE.SpriteAnimationManager.prototype.destroy=function()
{for(var name in this._anims)
{this._anims[name].destroy();this._anims[name]=null;}
this._sprite=null;this._anims=null;this._pending=null;FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.SpriteAnimationManager.prototype,"frameRate",{get:function()
{return this._frameRate;},set:function(value)
{if(typeof value==="number")
{this._frameRate=value;}}});Object.defineProperty(FORGE.SpriteAnimationManager.prototype,"current",{get:function()
{return this.get(this._animation);},set:function(animation)
{if(FORGE.Utils.isTypeOf(animation,"SpriteAnimation")===true)
{this._animation=animation.name;}}});Object.defineProperty(FORGE.SpriteAnimationManager.prototype,"all",{get:function()
{return this._anims;}});FORGE.SpriteAnimation=function(sprite,name,frames,frameRate,loop)
{this._sprite=sprite;this._name=name;this._frames=frames||[];this._frameIndex=0;this._frameRate=frameRate||30;this._loop=loop||false;this._loopCount=0;this._delay=1000 / frameRate;this._timeLastFrame=0;this._timeNextFrame=0;this._frameDiff=0;this._frameSkip=1;this._playing=false;this._paused=false;this._complete=false;this._onPlay=null;this._onPause=null;this._onResume=null;this._onLoop=null;this._onStop=null;this._onComplete=null;FORGE.BaseObject.call(this,"SpriteAnimation");};FORGE.SpriteAnimation.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.SpriteAnimation.prototype.constructor=FORGE.SpriteAnimation;FORGE.SpriteAnimation.prototype._notifyComplete=function()
{this._setFrameIndex(this._frames.length-1);this._playing=false;this._complete=true;this._paused=false;if(this._onComplete!==null)
{this._onComplete.dispatch();}};FORGE.SpriteAnimation.prototype._setFrameIndex=function(index)
{this._frameIndex=(typeof index==="number"&&index>=0&&index<this._frames.length)?index:0;this._sprite.frame=this._frames[this._frameIndex].frame;};FORGE.SpriteAnimation.prototype.play=function(loop,index)
{if(typeof loop==="boolean")
{this._loop=loop;}
this._playing=true;this._complete=false;this._paused=false;this._loopCount=0;var time=this._sprite.viewer.clock.time;this._timeLastFrame=time;this._timeNextFrame=time+this._delay;this._setFrameIndex(index);this._sprite.animations.current=this;if(this._onPlay!==null)
{this._onPlay.dispatch();}};FORGE.SpriteAnimation.prototype.pause=function(index)
{if(this._paused===true)
{return;}
this._paused=true;if(typeof index==="number")
{this._setFrameIndex(index);}
if(this._onPause!==null)
{this._onPause.dispatch();}};FORGE.SpriteAnimation.prototype.resume=function(index)
{if(this._paused===false)
{return;}
this._paused=false;if(typeof index==="number")
{this._setFrameIndex(index);}
if(this._playing)
{this._timeNextFrame=this._sprite.viewer.clock.time+this._delay;}
if(this._onResume!==null)
{this._onResume.dispatch();}};FORGE.SpriteAnimation.prototype.stop=function()
{this._playing=false;this._complete=true;this._paused=false;this._setFrameIndex(0);if(this._onStop!==null)
{this._onStop.dispatch();}};FORGE.SpriteAnimation.prototype.update=function()
{if(this._paused===true)
{return;}
var time=this._sprite.viewer.clock.time;if(this._playing===true&&time>=this._timeNextFrame)
{this._frameSkip=1;this._frameDiff=time-this._timeNextFrame;this._timeLastFrame=time;if(this._frameDiff>this._delay)
{this._frameSkip=Math.floor(this._frameDiff / this._delay);this._frameDiff-=(this._frameSkip*this._delay);}
this._timeNextFrame=time+(this._delay-this._frameDiff);var frameIndex=this._frameIndex+this._frameSkip;if(frameIndex>=this._frames.length)
{if(this._loop===true)
{frameIndex%=this._frames.length;this._loopCount++;if(this._onLoop!==null)
{this._onLoop.dispatch();}
this._setFrameIndex(frameIndex);}
else
{this._notifyComplete();}}
else
{this._setFrameIndex(frameIndex);}}};FORGE.SpriteAnimation.prototype.destroy=function()
{this._sprite=null;this._frames=null;if(this._onPlay!==null)
{this._onPlay.destroy();this._onPlay=null;}
if(this._onPause!==null)
{this._onPause.destroy();this._onPause=null;}
if(this._onResume!==null)
{this._onResume.destroy();this._onResume=null;}
if(this._onComplete!==null)
{this._onComplete.destroy();this._onComplete=null;}
if(this._onLoop!==null)
{this._onLoop.destroy();this._onLoop=null;}
if(this._onStop!==null)
{this._onStop.destroy();this._onStop=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.SpriteAnimation.prototype,"name",{get:function()
{return this._name;}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"frames",{get:function()
{return this._frames;}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"frameIndex",{get:function()
{return this._frameIndex;}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"frameRate",{get:function()
{return this._frameRate;},set:function(value)
{if(typeof value!=="number")
{return;}
this._frameRate=value;this._delay=1000 / this._frameRate;}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"loop",{get:function()
{return this._loop;},set:function(value)
{this._loop=Boolean(value);}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"loopCount",{get:function()
{return this._loopCount;}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"playing",{get:function()
{return this._playing;}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"paused",{get:function()
{return this._paused;},set:function(value)
{if(Boolean(value)===true)
{this.pause();}
else
{this.resume();}}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"complete",{get:function()
{return this._complete;}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"onPlay",{get:function()
{if(this._onPlay===null)
{this._onPlay=new FORGE.EventDispatcher(this);}
return this._onPlay;}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"onPause",{get:function()
{if(this._onPause===null)
{this._onPause=new FORGE.EventDispatcher(this);}
return this._onPause;}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"onResume",{get:function()
{if(this._onResume===null)
{this._onResume=new FORGE.EventDispatcher(this);}
return this._onResume;}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"onLoop",{get:function()
{if(this._onLoop===null)
{this._onLoop=new FORGE.EventDispatcher(this);}
return this._onLoop;}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"onComplete",{get:function()
{if(this._onComplete===null)
{this._onComplete=new FORGE.EventDispatcher(this);}
return this._onComplete;}});Object.defineProperty(FORGE.SpriteAnimation.prototype,"onStop",{get:function()
{if(this._onStop===null)
{this._onStop=new FORGE.EventDispatcher(this);}
return this._onStop;}});FORGE.VideoBase=function(viewer,name)
{this._playing=false;this._canPlay=false;this._playCount=0;this._endCount=0;this._paused=false;FORGE.DisplayObject.call(this,viewer,null,name);};FORGE.VideoBase.prototype=Object.create(FORGE.DisplayObject.prototype);FORGE.VideoBase.prototype.constructor=FORGE.VideoBase;FORGE.VideoBase.prototype._boot=function()
{FORGE.DisplayObject.prototype._boot.call(this);this._viewer.onPause.add(this._onVisibilityChange,this);this._viewer.onResume.add(this._onVisibilityChange,this);};FORGE.VideoBase.prototype._onVisibilityChange=function(event)
{var status=document[FORGE.Device.visibilityState];var external=(event.data.internal===undefined);if(this._viewer.config.autoPause===true&&(status==="hidden"||external===true)&&this._playing===true)
{this.pause();this._paused=false;return;}
if(this._viewer.config.autoResume===true&&(status==="visible"||external===true)&&this._playing===false&&this._paused===false)
{this.play();return;}};FORGE.VideoBase.prototype.play=function(time,loop)
{this.currentTime=time;this.loop=loop;};FORGE.VideoBase.prototype.pause=function()
{};FORGE.VideoBase.prototype.destroy=function()
{this._viewer.onPause.remove(this._onVisibilityChange,this);this._viewer.onResume.remove(this._onVisibilityChange,this);FORGE.DisplayObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.VideoBase.prototype,"playing",{get:function()
{return this._playing;}});Object.defineProperty(FORGE.VideoBase.prototype,"playCount",{get:function()
{return this._playCount;}});Object.defineProperty(FORGE.VideoBase.prototype,"canPlay",{get:function()
{return this._canPlay;}});Object.defineProperty(FORGE.VideoBase.prototype,"paused",{get:function()
{return this._paused;}});Object.defineProperty(FORGE.VideoBase.prototype,"endCount",{get:function()
{return this._endCount;}});FORGE.VideoHTML5=function(viewer,key,config,qualityMode,ambisonic)
{this._key=key;this._config=config||null;this._qualities=null;this._defaultQualityMode=qualityMode||FORGE.VideoQualityMode.AUTO;this._qualityMode="";this._videos=null;this._requestIndex=-1;this._currentIndex=-1;this._requestTimer=null;this._forceRequest=false;this._syncTime=6000;this._timeoutTime=20000;this._autoQualityTimer=null;this._loop=false;this._volume=1;this._muted=false;this._mutedVolume=0;this._decoder=null;this._ambisonic=ambisonic||false;this._defaultChannelMap=[0,1,2,3];this._metaDataLoaded=false;this._onLoadStart=null;this._onLoadedMetaData=null;this._onLoadedData=null;this._onProgress=null;this._onDurationChange=null;this._onCanPlay=null;this._onCanPlayThrough=null;this._onPlay=null;this._onPause=null;this._onTimeUpdate=null;this._onCurrentTimeChange=null;this._onVolumeChange=null;this._onSeeking=null;this._onSeeked=null;this._onEnded=null;this._onError=null;this._onWaiting=null;this._onStalled=null;this._onPlaying=null;this._onMute=null;this._onUnmute=null;this._onQualityRequest=null;this._onQualityChange=null;this._onQualityAbort=null;this._onQualitiesLoaded=null;this._onQualityModeChange=null;this._onRequestErrorBind=null;this._onRequestLoadStartBind=null;this._onRequestLoadedMetaDataBind=null;this._onRequestLoadedDataBind=null;this._onRequestCanPlayBeforeSeekBind=null;this._onRequestSeekedBind=null;this._onRequestCanPlayAfterSeekBind=null;this._onRequestSeekedWhileSyncBind=null;this._onEventBind=null;this._decoderInitializedSuccessBind=null;this._decoderInitializedErrorBind=null;FORGE.VideoBase.call(this,viewer,"VideoHTML5");};FORGE.VideoHTML5.prototype=Object.create(FORGE.VideoBase.prototype);FORGE.VideoHTML5.prototype.constructor=FORGE.VideoHTML5;FORGE.VideoHTML5.prototype._boot=function()
{FORGE.VideoBase.prototype._boot.call(this);if(this._ambisonic===true&&this._isAmbisonic()===false)
{this.log("FORGE.VideoHTML5: can't manage ambisonic sound without Google Chrome Omnitone library and WebAudio API.");this._ambisonic=false;}
this._uid=this._key;this._register();this._onRequestErrorBind=this._onRequestError.bind(this);this._onRequestLoadStartBind=this._onRequestLoadStart.bind(this);this._onRequestLoadedMetaDataBind=this._onRequestLoadedMetaData.bind(this);this._onRequestLoadedDataBind=this._onRequestLoadedData.bind(this);this._onRequestCanPlayBeforeSeekBind=this._onRequestCanPlayBeforeSeek.bind(this);this._onRequestSeekedBind=this._onRequestSeeked.bind(this);this._onRequestCanPlayAfterSeekBind=this._onRequestCanPlayAfterSeek.bind(this);this._onRequestSeekedWhileSyncBind=this._onRequestSeekedWhileSync.bind(this);this._onEventBind=this._onEventHandler.bind(this);this._requestTimer=this._viewer.clock.create(false);this._autoQualityTimer=this._viewer.clock.create(false);this._autoQualityTimer.loop(500,this._autoQualityTimerLoop,this);this._viewer.audio.onVolumeChange.add(this._mainVolumeChangeHandler,this);this._viewer.audio.onDisable.add(this._disableSoundHandler,this);this._onQualitiesLoaded=new FORGE.EventDispatcher(this,true);if(this._config!==null)
{this.load(this._config);}
this._viewer.display.register(this,this._isAmbisonic());this._notifyReady();this._applyPending(false);};FORGE.VideoHTML5.prototype._parseConfig=function(config)
{if(config!==null)
{if(FORGE.Utils.isTypeOf(config,"string")===true)
{config=[config];}
else if(FORGE.Utils.isTypeOf(config,"VideoQuality")===true)
{config=[config];}
if(FORGE.Utils.isArrayOf(config,"string")===true)
{this._qualities=this._createQualitiesFromURLs((config));}
else if(FORGE.Utils.isArrayOf(config,"VideoQuality")===true)
{this._qualities=(config);}}
if(this._onQualitiesLoaded!==null)
{this._onQualitiesLoaded.dispatch(this._qualities);}
return this._qualities;};FORGE.VideoHTML5.prototype._notifyResize=function(data)
{var currentVideo=this._getCurrentVideo();if(currentVideo!==null&&currentVideo.element!==null)
{currentVideo.element.setAttribute("width",this.pixelWidth);currentVideo.element.setAttribute("height",this.pixelHeight);}
FORGE.DisplayObject.prototype._notifyResize.call(this,data);};FORGE.VideoHTML5.prototype._createQualitiesFromURLs=function(urls,checkURL)
{var qualities=[];var quality;for(var i=0,ii=urls.length;i<ii;i++)
{if(checkURL===true&&FORGE.URL.isValid(urls[i])===false)
{throw"FORGE.VideoHTML5: URL "+urls[i]+" is invalid";}
quality=new FORGE.VideoQuality(urls[i]);qualities.push(quality);}
return qualities;};FORGE.VideoHTML5.prototype._indexOfQuality=function(quality)
{var q;for(var i=0,ii=this._qualities.length;i<ii;i++)
{q=this._qualities[i];if(q===quality)
{return i;}}
return-1;};FORGE.VideoHTML5.prototype._indexOfVideo=function(video)
{var v;for(var i=0,ii=this._videos.length;i<ii;i++)
{v=this._videos[i];if(v===video)
{return i;}}
return-1;};FORGE.VideoHTML5.prototype._getVideoAt=function(index)
{if(this._videos===null)
{return null;}
var video=this._videos[index];if(video!==null&&typeof video!=="undefined")
{return video;}
return null;};FORGE.VideoHTML5.prototype._getRequestedVideo=function()
{return this._getVideoAt(this._requestIndex);};FORGE.VideoHTML5.prototype._getCurrentVideo=function()
{return this._getVideoAt(this._currentIndex);};FORGE.VideoHTML5.prototype._getCurrentVideoElementProperty=function(property,defaultReturnValue)
{var video=this._getCurrentVideo();if(video!==null&&video.element!==null)
{return video.element[property];}
return defaultReturnValue;};FORGE.VideoHTML5.prototype._createVideoObjects=function(count)
{var videos=[];var video;for(var i=0,ii=count;i<ii;i++)
{video={index:i,element:null,buffer:null,played:null,requestCount:0,currentCount:0,abortCount:0,leaveCount:0,downCount:0,lastTimeStamp:0};videos[i]=video;}
this._videos=videos;return videos;};FORGE.VideoHTML5.prototype._createVideoAt=function(index)
{var element=document.createElement("video");element.setAttribute("webkit-playsinline","true");element.setAttribute("playsinline","true");element.setAttribute("width",this.pixelWidth);element.setAttribute("height",this.pixelHeight);element.volume=0;element.crossOrigin="anonymous";element.id="FORGE-VideoHTML5-"+this._uid+"-"+index;var buffer=new FORGE.VideoTimeRanges(element,"buffered");var played=new FORGE.VideoTimeRanges(element,"played");var video=this._videos[index];video.element=element;video.buffer=buffer;video.played=played;return video;};FORGE.VideoHTML5.prototype._createSourceTags=function(video,quality)
{if(FORGE.Device.edge===true)
{video.element.src=quality.url;}
else
{var source=document.createElement("source");source.addEventListener("error",this._onRequestErrorBind,false);source.src=quality.url;source.type=quality.mimeType;video.element.appendChild(source);}
return video;};FORGE.VideoHTML5.prototype._destroyVideo=function(video)
{var index=this._indexOfVideo(video);if(index!==-1)
{this._destroyVideoAt(index);}};FORGE.VideoHTML5.prototype._destroyVideoAt=function(index)
{if(index!==-1)
{this.log("_destroyVideoAt "+index);var video=this._videos[index];var element=video.element;if(typeof element!=="undefined"&&element!==null)
{this._uninstallEvents(element);element.pause();element.src="";if(FORGE.Device.edge!==true)
{var source;for(var i=0,ii=element.children.length;i<ii;i++)
{source=element.children[i];source.removeEventListener("error",this._onRequestErrorBind,false);source.src="";element.removeChild(source);source=null;}}
element.load();if(element.parentNode===this._dom)
{this._dom.removeChild(element);}}
element=null;video.element=null;if(video.buffer!==null)
{video.buffer.destroy();video.buffer=null;}
if(video.played!==null)
{video.played.destroy();video.played=null;}}};FORGE.VideoHTML5.prototype._setRequestIndex=function(index,force)
{this._forceRequest=force||false;this.log("Requesting index: "+index+", force: "+this._forceRequest);if(this._requestIndex!==-1&&this._requestIndex!==index)
{this._clearRequestedVideo();}
var alreadyRequested=index===this._requestIndex?true:false;this._requestIndex=index;if(this._onQualityRequest!==null)
{this._onQualityRequest.dispatch(index);}
if(index===this._currentIndex||alreadyRequested===true)
{return;}
var requestedVideo=this._createVideoAt(this._requestIndex);requestedVideo.requestCount++;var quality=this._qualities[this._requestIndex];if(this._currentIndex>-1)
{requestedVideo.element.addEventListener("loadstart",this._onRequestLoadStartBind,false);requestedVideo.element.addEventListener("error",this._onRequestErrorBind,false);}
this._createSourceTags(requestedVideo,quality);this._decoderInitializedSuccessBind=this._decoderInitializedSuccess.bind(this);if(this._isAmbisonic()===true)
{this._context=this._viewer.audio.context;this._decoder=Omnitone.createFOADecoder(this._context,requestedVideo.element,{channelMap:this._defaultChannelMap});this._decoderInitializedErrorBind=this._decoderInitializedError.bind(this);this._decoder.initialize().then(this._decoderInitializedSuccessBind,this._decoderInitializedErrorBind);}
else
{this._decoderInitializedSuccess();}
if(this._currentIndex===-1)
{this.log("No current video, set directly the current index");this._setCurrentIndex(index);}
else
{this._requestTimer.add(this._timeoutTime,this._requestTimeOutHandler,this);this._requestTimer.start();}};FORGE.VideoHTML5.prototype._decoderInitializedSuccess=function()
{if(this._requestIndex===-1)
{this._getCurrentVideo().element.load();}
else
{this._getRequestedVideo().element.load();}};FORGE.VideoHTML5.prototype._decoderInitializedError=function()
{this.log("FOA decoder could not be initialized");};FORGE.VideoHTML5.prototype._onRequestLoadStart=function()
{var element=this._getRequestedVideo().element;this.log("_onRequestLoadStart [readyState: "+element.readyState+"]");element.removeEventListener("loadstart",this._onRequestLoadStartBind,false);element.addEventListener("loadedmetadata",this._onRequestLoadedMetaDataBind,false);};FORGE.VideoHTML5.prototype._onRequestLoadedMetaData=function()
{var element=this._getRequestedVideo().element;this.log("_onRequestLoadedMetaData [readyState: "+element.readyState+"]");element.removeEventListener("loadedmetadata",this._onRequestLoadedMetaDataBind,false);element.addEventListener("loadeddata",this._onRequestLoadedDataBind,false);};FORGE.VideoHTML5.prototype._onRequestLoadedData=function()
{var element=this._getRequestedVideo().element;this.log("_onRequestLoadedData [readyState: "+element.readyState+"]");element.removeEventListener("loadeddata",this._onRequestLoadedDataBind,false);if(FORGE.Device.desktop===true)
{element.addEventListener("play",this._onRequestCanPlayBeforeSeekBind,false);element.play();}
else
{this._setCurrentIndex(this._requestIndex,true);}};FORGE.VideoHTML5.prototype._onRequestCanPlayBeforeSeek=function()
{var element=this._getRequestedVideo().element;this.log("_onRequestCanPlayBeforeSeek [readyState: "+element.readyState+"]");element.pause();element.removeEventListener("play",this._onRequestCanPlayBeforeSeekBind,false);element.addEventListener("seeked",this._onRequestSeekedBind,false);var currentTime=this.currentTime;if(this._playing===true&&this._forceRequest===false)
{element.currentTime=currentTime+(this._syncTime / 1000);}
else
{element.currentTime=currentTime;}};FORGE.VideoHTML5.prototype._onRequestSeeked=function()
{var element=this._getRequestedVideo().element;this.log("_onRequestSeeked [readyState: "+element.readyState+"]");element.removeEventListener("seeked",this._onRequestSeekedBind,false);if(element.readyState===HTMLMediaElement.HAVE_ENOUGH_DATA)
{element.removeEventListener("error",this._onRequestErrorBind,false);this._requestWaitSync();}
else
{if(FORGE.Device.edge===true||FORGE.Device.ie===true)
{element.addEventListener("canplaythrough",this._onRequestCanPlayAfterSeekBind,false);}
else
{element.addEventListener("canplay",this._onRequestCanPlayAfterSeekBind,false);}}};FORGE.VideoHTML5.prototype._onRequestCanPlayAfterSeek=function()
{var element=this._getRequestedVideo().element;this.log("_onRequestCanPlayAfterSeek [readyState: "+element.readyState+"]");element.currentTime=this.currentTime;if(FORGE.Device.edge===true||FORGE.Device.ie===true)
{element.removeEventListener("canplaythrough",this._onRequestCanPlayAfterSeekBind,false);}
else
{element.removeEventListener("canplay",this._onRequestCanPlayAfterSeekBind,false);}
element.removeEventListener("error",this._onRequestErrorBind,false);this._requestWaitSync();};FORGE.VideoHTML5.prototype._requestWaitSync=function()
{var currentVideo=this._getCurrentVideo();if(currentVideo!==null&&currentVideo.element!==null&&this._forceRequest===false)
{this.log("Current video listen to seek, wait both video to sync");currentVideo.element.addEventListener("seeked",this._onRequestSeekedWhileSyncBind,false);this._requestTimer.loop(10,this._videoSyncTimerLoop,this);}
if(FORGE.Device.edge!==true)
{var element=this._getRequestedVideo().element;var source;for(var i=0,ii=element.children.length;i<ii;i++)
{source=element.children[i];source.removeEventListener("error",this._onRequestErrorBind,false);}}
if(this._forceRequest===true)
{this._setCurrentIndex(this._requestIndex);}};FORGE.VideoHTML5.prototype._onRequestSeekedWhileSync=function()
{this.log("_onRequestSeekedWhileSync "+this.currentTime);var requestIndex=this._requestIndex;this._abortRequest(false);this._setRequestIndex(requestIndex);};FORGE.VideoHTML5.prototype._videoSyncTimerLoop=function()
{this.log("_videoSyncTimerLoop "+this._requestIndex);var video=this._getRequestedVideo();if(video!==null&&this.currentTime>=video.element.currentTime&&this.currentTime<(video.element.currentTime+0.05))
{this._setCurrentIndex(this._requestIndex);}};FORGE.VideoHTML5.prototype._requestTimeOutHandler=function()
{this.log("_requestTimeOutHandler "+this._requestIndex);this._abortRequest(true);};FORGE.VideoHTML5.prototype._onRequestError=function(event)
{this.log("_onRequestError");this.log(event);this._abortRequest(true);};FORGE.VideoHTML5.prototype._setCurrentIndex=function(index,sync)
{if(index===this._currentIndex)
{return;}
this._dom.innerHTML="";var requestedVideo=this._getRequestedVideo();if(this._playing===true)
{requestedVideo.element.play();}
this._updateVolume(requestedVideo);var videoToBeRemoved=this._getCurrentVideo();this._requestIndex=-1;this._currentIndex=index;var currentVideo=this._getCurrentVideo();currentVideo.currentCount++;if(sync===true&&videoToBeRemoved!==null)
{currentVideo.element.currentTime=videoToBeRemoved.element.currentTime;}
this._installEvents(currentVideo.element);this._dom.appendChild(currentVideo.element);if(videoToBeRemoved!==null&&videoToBeRemoved.element!==null)
{videoToBeRemoved.element.removeEventListener("seeked",this._onRequestSeekedWhileSyncBind,false);this._destroyVideo(videoToBeRemoved);}
this._requestTimer.stop(true);if(this._onQualityChange!==null)
{this._onQualityChange.dispatch(this._currentIndex);}
if(this._qualityMode==="")
{this._setQualityMode(this._defaultQualityMode);}};FORGE.VideoHTML5.prototype._autoQualityTimerLoop=function()
{if(this._playing===false||this._requestIndex!==-1)
{return;}
if(this._shouldAutoQualityDowngrade()===true)
{this._downgradeAutoQuality();return;}
if(this._shouldAutoQualityUpgrade()===true)
{this._upgradeAutoQuality();return;}};FORGE.VideoHTML5.prototype._shouldAutoQualityUpgrade=function()
{var currentVideo=this._getCurrentVideo();if(currentVideo!==null&&currentVideo.buffer!==null)
{if(currentVideo.buffer.isInRanges(currentVideo.element.currentTime,this._syncTime / 1000))
{return true;}}
return false;};FORGE.VideoHTML5.prototype._shouldAutoQualityDowngrade=function()
{var currentVideo=this._getCurrentVideo();var time=currentVideo.element.currentTime;if(currentVideo.element.playing===false)
{return false;}
if(time===currentVideo.lastTimeStamp)
{currentVideo.downCount++;if(currentVideo.downCount>=3)
{currentVideo.lastTimeStamp=0;return true;}}
else
{currentVideo.lastTimeStamp=time;currentVideo.downCount=0;}
return false;};FORGE.VideoHTML5.prototype._upgradeAutoQuality=function()
{if(this._currentIndex!==this._qualities.length-1)
{var nextIndex=this._currentIndex+1;if(this._videos[nextIndex].abortCount===0&&this._videos[nextIndex].leaveCount<=1)
{this.log("AutoQuality upgrade quality");this._setRequestIndex(nextIndex);}
else
{this.log("AutoQuality do not attempt to load an already aborted video");}}};FORGE.VideoHTML5.prototype._downgradeAutoQuality=function()
{var currentVideo=this._getCurrentVideo();currentVideo.leaveCount++;if(this._currentIndex-1>=0)
{this.log("AutoQuality downgrade quality");this._setRequestIndex(this._currentIndex-1,true);}
else
{this.log("Can't downgrade video quality anymore!");}};FORGE.VideoHTML5.prototype._setQualityMode=function(mode)
{if(FORGE.Device.desktop===false)
{mode=FORGE.VideoQualityMode.MANUAL;this.warn("Quality mode force to manual, you are not on desktop");}
if(this._qualityMode===mode)
{return;}
if(mode===FORGE.VideoQualityMode.AUTO||mode===FORGE.VideoQualityMode.MANUAL)
{this._qualityMode=mode;this._autoQualityTimer.stop(false);if(this._qualityMode===FORGE.VideoQualityMode.AUTO)
{this._autoQualityTimer.start();}
if(this._onQualityModeChange!==null)
{this._onQualityModeChange.dispatch(this._qualityMode);}}};FORGE.VideoHTML5.prototype._abortRequest=function(count)
{var requestedVideo=this._getRequestedVideo();if(requestedVideo===null)
{return;}
if(count===true)
{requestedVideo.abortCount++;}
this._clearRequestedVideo();this._requestTimer.stop(true);if(this._onQualityAbort!==null)
{this._onQualityAbort.dispatch();}};FORGE.VideoHTML5.prototype._clearRequestedVideo=function()
{var video=this._getRequestedVideo();if(video!==null)
{var element=video.element;element.removeEventListener("loadstart",this._onRequestLoadStartBind,false);element.removeEventListener("loadedmetadata",this._onRequestLoadedMetaDataBind,false);element.removeEventListener("loadeddata",this._onRequestLoadedDataBind,false);element.removeEventListener("play",this._onRequestCanPlayBeforeSeekBind,false);element.removeEventListener("seeked",this._onRequestSeekedBind,false);if(FORGE.Device.edge===true||FORGE.Device.ie===true)
{element.removeEventListener("canplaythrough",this._onRequestCanPlayAfterSeekBind,false);}
else
{element.removeEventListener("canplay",this._onRequestCanPlayAfterSeekBind,false);}
element.removeEventListener("error",this._onRequestErrorBind,false);this._destroyVideo(video);this._requestIndex=-1;}};FORGE.VideoHTML5.prototype._mainVolumeChangeHandler=function()
{this._updateVolume();};FORGE.VideoHTML5.prototype._updateVolume=function(video)
{var v=video||this._getCurrentVideo();if(v!==null&&v.element!==null&&this._viewer.audio.enabled===true)
{v.element.volume=this._volume*this._viewer.audio.volume;}};FORGE.VideoHTML5.prototype._disableSoundHandler=function()
{var v=this._getCurrentVideo();if(v!==null&&v.element!==null&&this._viewer.audio.enabled===false)
{v.element.volume=0;}};FORGE.VideoHTML5.prototype._installEvents=function(element)
{element.addEventListener("loadstart",this._onEventBind,false);element.addEventListener("durationchange",this._onEventBind,false);element.addEventListener("loadedmetadata",this._onEventBind,false);element.addEventListener("loadeddata",this._onEventBind,false);element.addEventListener("progress",this._onEventBind,false);element.addEventListener("canplay",this._onEventBind,false);element.addEventListener("canplaythrough",this._onEventBind,false);element.addEventListener("play",this._onEventBind,false);element.addEventListener("pause",this._onEventBind,false);element.addEventListener("timeupdate",this._onEventBind,false);element.addEventListener("volumechange",this._onEventBind,false);element.addEventListener("seeking",this._onEventBind,false);element.addEventListener("seeked",this._onEventBind,false);element.addEventListener("ended",this._onEventBind,false);element.addEventListener("error",this._onEventBind,false);element.addEventListener("waiting",this._onEventBind,false);element.addEventListener("stalled",this._onEventBind,false);element.addEventListener("playing",this._onEventBind,false);};FORGE.VideoHTML5.prototype._uninstallEvents=function(element)
{element.removeEventListener("loadstart",this._onEventBind,false);element.removeEventListener("durationchange",this._onEventBind,false);element.removeEventListener("loadedmetadata",this._onEventBind,false);element.removeEventListener("loadeddata",this._onEventBind,false);element.removeEventListener("progress",this._onEventBind,false);element.removeEventListener("canplay",this._onEventBind,false);element.removeEventListener("canplaythrough",this._onEventBind,false);element.removeEventListener("play",this._onEventBind,false);element.removeEventListener("pause",this._onEventBind,false);element.removeEventListener("timeupdate",this._onEventBind,false);element.removeEventListener("volumechange",this._onEventBind,false);element.removeEventListener("seeking",this._onEventBind,false);element.removeEventListener("seeked",this._onEventBind,false);element.removeEventListener("ended",this._onEventBind,false);element.removeEventListener("error",this._onEventBind,false);element.removeEventListener("waiting",this._onEventBind,false);element.removeEventListener("stalled",this._onEventBind,false);element.removeEventListener("playing",this._onEventBind,false);element.removeEventListener("error",this._onRequestErrorBind,false);};FORGE.VideoHTML5.prototype._onEventHandler=function(event)
{var element=this._getCurrentVideo().element;this.log(event.type+" [readyState: "+element.readyState+"]");switch(event.type)
{case"loadstart":if(this._onLoadStart!==null)
{this._onLoadStart.dispatch(event);}
break;case"durationchange":
//@firefox - FF dispatch durationchange twice on readystate HAVE_METADATA (1) & HAVE_ENOUGH_DATA (4)if(this._onDurationChange!==null&&element.readyState===HTMLMediaElement.HAVE_METADATA)
{this._onDurationChange.dispatch(event);}
break;case"loadedmetadata":this._metaDataLoaded=true;if(this._onLoadedMetaData!==null)
{this._onLoadedMetaData.dispatch(event);}
break;case"loadeddata":if(this._onLoadedData!==null)
{this._onLoadedData.dispatch(event);}
break;case"progress":if(this._onProgress!==null)
{this._onProgress.dispatch(event);}
break;case"canplay":this._canPlay=true;if(this._onCanPlay!==null)
{this._onCanPlay.dispatch(event);}
break;case"canplaythrough":this._canPlay=true;if(this._onCanPlayThrough!==null)
{this._onCanPlayThrough.dispatch(event);}
break;case"play":if(this._onPlay!==null)
{this._onPlay.dispatch(event);}
break;case"pause":this._playing=false;if(this._onPause!==null)
{this._onPause.dispatch(event);}
break;case"timeupdate":if(this._onTimeUpdate!==null)
{this._onTimeUpdate.dispatch(event);}
break;case"volumechange":if(this._onVolumeChange!==null&&element.readyState!==HTMLMediaElement.HAVE_NOTHING)
{this._onVolumeChange.dispatch(event);}
break;case"seeking":this._canPlay=false;if(this._onSeeking!==null)
{this._onSeeking.dispatch(event);}
break;case"seeked":this._canPlay=false;if(this._onSeeked!==null)
{this._onSeeked.dispatch(event);}
break;case"ended":this._playing=false;this.currentTime=0;this._endCount++;if(this._loop===true)
{this.play(0);}
if(this._onEnded!==null)
{this._onEnded.dispatch(event);}
break;case"error":if(this._onError!==null)
{this._onError.dispatch(event);}
break;case"waiting":if(this._onWaiting!==null)
{this._onWaiting.dispatch(event);}
break;case"stalled":if(this._onStalled!==null)
{this._onStalled.dispatch(event);}
break;case"playing":if(this._onPlaying!==null)
{this._onPlaying.dispatch(event);}
break;default:this.warn("The event \""+event.type+"\" is not handled.");break;}};FORGE.VideoHTML5.prototype._isAmbisonic=function()
{return(this._ambisonic===true&&this._viewer.audio.useWebAudio===true&&typeof Omnitone!=="undefined");};FORGE.VideoHTML5.prototype.update=function()
{if(this._decoder!==null&&this._playing===true)
{var m4=this._viewer.renderer.camera.modelViewInverse;this._decoder.setRotationMatrixFromCamera(m4);}};FORGE.VideoHTML5.prototype.load=function(config)
{this._parseConfig(config);if(this._qualities===null||this._qualities.length===0)
{throw"FORGE.VideoHTML5.load: Can't create video with no qualities set!";}
this._createVideoObjects(this._qualities.length);this._setRequestIndex(0);};FORGE.VideoHTML5.prototype.play=function(time,loop)
{FORGE.VideoBase.prototype.play.call(this,time,loop);var currentVideo=this._getCurrentVideo();if(currentVideo!==null&&currentVideo.element!==null)
{var p=currentVideo.element.play();if(typeof p!=="undefined"&&typeof Promise!=="undefined"&&p instanceof Promise)
{p.then(function()
{this._playing=true;this._paused=false;this._playCount++;}.bind(this)).catch(function(error)
{this.log("error while playing the video : "+error);}.bind(this));}
else
{this._playing=true;this._paused=true;this._playCount++;}}};FORGE.VideoHTML5.prototype.pause=function()
{var currentVideo=this._getCurrentVideo();if(currentVideo!==null&&currentVideo.element!==null)
{currentVideo.element.pause();this._playing=false;this._paused=true;}};FORGE.VideoHTML5.prototype.stop=function()
{var currentVideo=this._getCurrentVideo();if(currentVideo!==null&&currentVideo.element!==null)
{currentVideo.element.pause();currentVideo.element.currentTime=0;this._playing=false;this._paused=true;}};FORGE.VideoHTML5.prototype.togglePlayback=function()
{if(this._playing===true||this._viewer.audio.enabled===false)
{this.pause();}
else
{this.play();}};FORGE.VideoHTML5.prototype.mute=function()
{if(this._muted===true||this._viewer.audio.enabled===false)
{return;}
this._muted=true;this._mutedVolume=this._volume;this._volume=0;this._updateVolume();if(this._onMute!==null)
{this._onMute.dispatch();}};FORGE.VideoHTML5.prototype.unmute=function(volume)
{if(this._muted===false)
{return;}
var v=(typeof volume==="number")?volume:this._mutedVolume;this._muted=false;this._volume=FORGE.Math.clamp(v,0,1);this._updateVolume();if(this._onUnmute!==null)
{this._onUnmute.dispatch();}};FORGE.VideoHTML5.prototype.destroy=function()
{this._clearRequestedVideo();this._requestTimer.destroy();this._requestTimer=null;this._autoQualityTimer.destroy();this._autoQualityTimer=null;if(this._onLoadStart!==null)
{this._onLoadStart.destroy();this._onLoadStart=null;}
if(this._onLoadedMetaData!==null)
{this._onLoadedMetaData.destroy();this._onLoadedMetaData=null;}
if(this._onLoadedData!==null)
{this._onLoadedData.destroy();this._onLoadedData=null;}
if(this._onProgress!==null)
{this._onProgress.destroy();this._onProgress=null;}
if(this._onDurationChange!==null)
{this._onDurationChange.destroy();this._onDurationChange=null;}
if(this._onCanPlay!==null)
{this._onCanPlay.destroy();this._onCanPlay=null;}
if(this._onCanPlayThrough!==null)
{this._onCanPlayThrough.destroy();this._onCanPlayThrough=null;}
if(this._onPlay!==null)
{this._onPlay.destroy();this._onPlay=null;}
if(this._onPause!==null)
{this._onPause.destroy();this._onPause=null;}
if(this._onTimeUpdate!==null)
{this._onTimeUpdate.destroy();this._onTimeUpdate=null;}
if(this._onCurrentTimeChange!==null)
{this._onCurrentTimeChange.destroy();this._onCurrentTimeChange=null;}
if(this._onVolumeChange!==null)
{this._onVolumeChange.destroy();this._onVolumeChange=null;}
if(this._onSeeking!==null)
{this._onSeeking.destroy();this._onSeeking=null;}
if(this._onSeeked!==null)
{this._onSeeked.destroy();this._onSeeked=null;}
if(this._onEnded!==null)
{this._onEnded.destroy();this._onEnded=null;}
if(this._onError!==null)
{this._onError.destroy();this._onError=null;}
if(this._onWaiting!==null)
{this._onWaiting.destroy();this._onWaiting=null;}
if(this._onStalled!==null)
{this._onStalled.destroy();this._onStalled=null;}
if(this._onPlaying!==null)
{this._onPlaying.destroy();this._onPlaying=null;}
if(this._onMute!==null)
{this._onMute.destroy();this._onMute=null;}
if(this._onUnmute!==null)
{this._onUnmute.destroy();this._onUnmute=null;}
if(this._onQualityRequest!==null)
{this._onQualityRequest.destroy();this._onQualityRequest=null;}
if(this._onQualityChange!==null)
{this._onQualityChange.destroy();this._onQualityChange=null;}
if(this._onQualityAbort!==null)
{this._onQualityAbort.destroy();this._onQualityAbort=null;}
if(this._onQualityModeChange!==null)
{this._onQualityModeChange.destroy();this._onQualityModeChange=null;}
if(this._onQualitiesLoaded!==null)
{this._onQualitiesLoaded.destroy();this._onQualitiesLoaded=null;}
for(var i=0,ii=this._videos.length;i<ii;i++)
{this._destroyVideoAt(i);}
this._decoderInitializedSuccessBind=null;this._decoderInitializedErrorBind=null;this._onRequestErrorBind=null;this._onRequestLoadStartBind=null;this._onRequestLoadedMetaDataBind=null;this._onRequestLoadedDataBind=null;this._onRequestCanPlayBeforeSeekBind=null;this._onRequestSeekedBind=null;this._onRequestCanPlayAfterSeekBind=null;this._onRequestSeekedWhileSyncBind=null;this._onEventBind=null;this._viewer.audio.onVolumeChange.remove(this._mainVolumeChangeHandler,this);this._viewer.audio.onDisable.remove(this._disableSoundHandler,this);this._config=null;this._qualities=null;this._videos=null;FORGE.VideoBase.prototype.destroy.call(this);};Object.defineProperty(FORGE.VideoHTML5.prototype,"quality",{get:function()
{return this._qualities[this._currentIndex];},set:function(value)
{if(typeof value==="number"&&value>=0&&value<this._qualities.length)
{this._setQualityMode(FORGE.VideoQualityMode.MANUAL);this._setRequestIndex(value);}
else if(FORGE.Utils.isTypeOf(value,"VideoQuality")===true)
{var i=this._indexOfQuality(value);if(i!==-1)
{this._setQualityMode(FORGE.VideoQualityMode.MANUAL);this._setRequestIndex(i);}
else
{throw"Unknown quality";}}
else
{throw"Video quality "+value+" out of bounds";}}});Object.defineProperty(FORGE.VideoHTML5.prototype,"qualityMode",{get:function()
{return this._qualityMode;},set:function(value)
{if(value===FORGE.VideoQualityMode.AUTO||value===FORGE.VideoQualityMode.MANUAL)
{this._setQualityMode(value);}}});Object.defineProperty(FORGE.VideoHTML5.prototype,"qualities",{get:function()
{return this._qualities;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"requestIndex",{get:function()
{return this._requestIndex;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"currentIndex",{get:function()
{return this._currentIndex;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"videos",{get:function()
{return this._videos;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"element",{get:function()
{var currentVideo=this._getCurrentVideo();if(currentVideo!==null&&currentVideo.element!==null)
{return currentVideo.element;}
return null;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"buffer",{get:function()
{var currentVideo=this._getCurrentVideo();if(currentVideo!==null&&currentVideo.buffer!==null)
{return currentVideo.buffer;}
return null;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"played",{get:function()
{var currentVideo=this._getCurrentVideo();if(currentVideo!==null&&currentVideo.played!==null)
{return currentVideo.played;}
return null;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"originalWidth",{get:function()
{return this._getCurrentVideoElementProperty("videoWidth",0);}});Object.defineProperty(FORGE.VideoHTML5.prototype,"originalHeight",{get:function()
{return this._getCurrentVideoElementProperty("videoHeight",0);}});Object.defineProperty(FORGE.VideoHTML5.prototype,"currentTime",{get:function()
{return this._getCurrentVideoElementProperty("currentTime",0);},set:function(value)
{if(typeof value==="number")
//@todo see if we can put video currentTime in pending if no metadata received ? (typeof value === "number" && value < this.duration){var currentVideo=this._getCurrentVideo();if(currentVideo!==null&&currentVideo.element!==null)
{currentVideo.element.currentTime=value;if(this._onCurrentTimeChange!==null)
{this._onCurrentTimeChange.dispatch(value);}}}}});Object.defineProperty(FORGE.VideoHTML5.prototype,"currentTimeMS",{get:function()
{return this.currentTime*1000;},set:function(value)
{this.currentTime=value / 1000;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"remainingTime",{get:function()
{return this.duration-this.currentTime;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"duration",{get:function()
{return this._getCurrentVideoElementProperty("duration",0);}});Object.defineProperty(FORGE.VideoHTML5.prototype,"durationMS",{get:function()
{return Math.round(this.duration*1000);}});Object.defineProperty(FORGE.VideoHTML5.prototype,"metaDataLoaded",{get:function()
{return this._metaDataLoaded;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"loop",{get:function()
{return this._loop;},set:function(value)
{if(typeof value==="boolean")
{this._loop=value;}}});Object.defineProperty(FORGE.VideoHTML5.prototype,"volume",{get:function()
{return this._volume;},set:function(value)
{if(typeof value==="number")
{this._volume=FORGE.Math.clamp(value,0,1);this._muted=false;this._updateVolume();}}});Object.defineProperty(FORGE.VideoHTML5.prototype,"muted",{get:function()
{return this._muted;},set:function(value)
{if(Boolean(value)===true)
{this.mute();}
else
{this.unmute();}}});Object.defineProperty(FORGE.VideoHTML5.prototype,"ambisonic",{get:function()
{return this._ambisonic;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onLoadStart",{get:function()
{if(this._onLoadStart===null)
{this._onLoadStart=new FORGE.EventDispatcher(this);}
return this._onLoadStart;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onLoadedMetaData",{get:function()
{if(this._onLoadedMetaData===null)
{this._onLoadedMetaData=new FORGE.EventDispatcher(this);}
return this._onLoadedMetaData;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onLoadedData",{get:function()
{if(this._onLoadedData===null)
{this._onLoadedData=new FORGE.EventDispatcher(this);}
return this._onLoadedData;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onProgress",{get:function()
{if(this._onProgress===null)
{this._onProgress=new FORGE.EventDispatcher(this);}
return this._onProgress;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onDurationChange",{get:function()
{if(this._onDurationChange===null)
{this._onDurationChange=new FORGE.EventDispatcher(this);}
return this._onDurationChange;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onCanPlay",{get:function()
{if(this._onCanPlay===null)
{this._onCanPlay=new FORGE.EventDispatcher(this);}
return this._onCanPlay;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onCanPlayThrough",{get:function()
{if(this._onCanPlayThrough===null)
{this._onCanPlayThrough=new FORGE.EventDispatcher(this);}
return this._onCanPlayThrough;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onPlay",{get:function()
{if(this._onPlay===null)
{this._onPlay=new FORGE.EventDispatcher(this);}
return this._onPlay;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onPause",{get:function()
{if(this._onPause===null)
{this._onPause=new FORGE.EventDispatcher(this);}
return this._onPause;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onTimeUpdate",{get:function()
{if(this._onTimeUpdate===null)
{this._onTimeUpdate=new FORGE.EventDispatcher(this);}
return this._onTimeUpdate;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onCurrentTimeChange",{get:function()
{if(this._onCurrentTimeChange===null)
{this._onCurrentTimeChange=new FORGE.EventDispatcher(this);}
return this._onCurrentTimeChange;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onVolumeChange",{get:function()
{if(this._onVolumeChange===null)
{this._onVolumeChange=new FORGE.EventDispatcher(this);}
return this._onVolumeChange;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onSeeking",{get:function()
{if(this._onSeeking===null)
{this._onSeeking=new FORGE.EventDispatcher(this);}
return this._onSeeking;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onSeeked",{get:function()
{if(this._onSeeked===null)
{this._onSeeked=new FORGE.EventDispatcher(this);}
return this._onSeeked;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onEnded",{get:function()
{if(this._onEnded===null)
{this._onEnded=new FORGE.EventDispatcher(this);}
return this._onEnded;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onError",{get:function()
{if(this._onError===null)
{this._onError=new FORGE.EventDispatcher(this);}
return this._onError;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onWaiting",{get:function()
{if(this._onWaiting===null)
{this._onWaiting=new FORGE.EventDispatcher(this);}
return this._onWaiting;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onStalled",{get:function()
{if(this._onStalled===null)
{this._onStalled=new FORGE.EventDispatcher(this);}
return this._onStalled;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onPlaying",{get:function()
{if(this._onPlaying===null)
{this._onPlaying=new FORGE.EventDispatcher(this);}
return this._onPlaying;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onMute",{get:function()
{if(this._onMute===null)
{this._onMute=new FORGE.EventDispatcher(this);}
return this._onMute;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onUnmute",{get:function()
{if(this._onUnmute===null)
{this._onUnmute=new FORGE.EventDispatcher(this);}
return this._onUnmute;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onQualityRequest",{get:function()
{if(this._onQualityRequest===null)
{this._onQualityRequest=new FORGE.EventDispatcher(this);}
return this._onQualityRequest;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onQualityChange",{get:function()
{if(this._onQualityChange===null)
{this._onQualityChange=new FORGE.EventDispatcher(this);}
return this._onQualityChange;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onQualityAbort",{get:function()
{if(this._onQualityAbort===null)
{this._onQualityAbort=new FORGE.EventDispatcher(this);}
return this._onQualityAbort;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onQualityModeChange",{get:function()
{if(this._onQualityModeChange===null)
{this._onQualityModeChange=new FORGE.EventDispatcher(this);}
return this._onQualityModeChange;}});Object.defineProperty(FORGE.VideoHTML5.prototype,"onQualitiesLoaded",{get:function()
{if(this._onQualitiesLoaded===null)
{this._onQualitiesLoaded=new FORGE.EventDispatcher(this,true);}
return this._onQualitiesLoaded;}});FORGE.VideoDash=function(viewer,key,config,qualityMode)
{this._key=key;this._config=config||null;this._manifestUrl="";this._qualities=null;this._defaultQualityMode=qualityMode||FORGE.VideoQualityMode.AUTO;this._qualityMode="";this._video=null;this._loop=false;this._volume=1;this._muted=false;this._mutedVolume=0;this._metaDataLoaded=false;this._dashMediaPlayer=null;this._streamInfo=null;this._currentVideoIndex=0;this._currentVideoPendingIndex=0;this._currentAudioIndex=0;this._currentAudioPendingIndex=0;this._playerVideoMetrics=null;this._playerAudioMetrics=null;this._dashMetrics=null;this._monitoring=null;this._onLoadStart=null;this._onLoadedMetaData=null;this._onLoadedData=null;this._onProgress=null;this._onDurationChange=null;this._onCanPlay=null;this._onCanPlayThrough=null;this._onPlay=null;this._onPause=null;this._onTimeUpdate=null;this._onCurrentTimeChange=null;this._onVolumeChange=null;this._onSeeking=null;this._onSeeked=null;this._onEnded=null;this._onError=null;this._onStalled=null;this._onPlaying=null;this._onMute=null;this._onUnmute=null;this._onQualityRequest=null;this._onQualityChange=null;this._onQualityAbort=null;this._onQualitiesLoaded=null;this._onQualityModeChange=null;this._onMetricsChanged=null;this._onLoadStartBind=null;this._onLoadedMetaDataBind=null;this._onLoadedDataBind=null;this._onProgressBind=null;this._onDurationChangeBind=null;this._onCanPlayBind=null;this._onCanPlayThroughBind=null;this._onPlayBind=null;this._onPauseBind=null;this._onTimeUpdateBind=null;this._onVolumeChangeBind=null;this._onSeekingBind=null;this._onSeekedBind=null;this._onEndedBind=null;this._onErrorBind=null;this._onStalledBind=null;this._onPlayingBind=null;this._onQualityRequestBind=null;this._onQualityChangeBind=null;this._onSwitchCompletedBind=null;this._onMetricsChangedBind=null;FORGE.VideoBase.call(this,viewer,"VideoDash");};FORGE.VideoDash.prototype=Object.create(FORGE.VideoBase.prototype);FORGE.VideoDash.prototype.constructor=FORGE.VideoDash;FORGE.VideoDash.mediaType={};FORGE.VideoDash.mediaType.VIDEO="video";FORGE.VideoDash.mediaType.AUDIO="audio";FORGE.VideoDash.prototype._boot=function()
{FORGE.VideoBase.prototype._boot.call(this);if(typeof dashjs==="undefined")
{throw"FORGE.VideoDash._boot: Can't create MPEG-DASH video stream without dash.js Media Player.";}
this._uid=this._key;this._register();this._onLoadStartBind=this._onLoadStartHandler.bind(this);this._onDurationChangeBind=this._onDurationChangeHandler.bind(this);this._onLoadedMetaDataBind=this._onLoadedMetaDataHandler.bind(this);this._onLoadedDataBind=this._onLoadedDataHandler.bind(this);this._onProgressBind=this._onProgressHandler.bind(this);this._onCanPlayBind=this._onCanPlayHandler.bind(this);this._onCanPlayThroughBind=this._onCanPlayThroughHandler.bind(this);this._onPlayBind=this._onPlayHandler.bind(this);this._onPauseBind=this._onPauseHandler.bind(this);this._onTimeUpdateBind=this._onTimeUpdateHandler.bind(this);this._onVolumeChangeBind=this._onVolumeChangeHandler.bind(this);this._onSeekingBind=this._onSeekingHandler.bind(this);this._onSeekedBind=this._onSeekedHandler.bind(this);this._onEndedBind=this._onEndedHandler.bind(this);this._onErrorBind=this._onErrorHandler.bind(this);this._onStalledBind=this._onStalledHandler.bind(this);this._onPlayingBind=this._onPlayingHandler.bind(this);this._onQualityRequestBind=this._onQualityRequestHandler.bind(this);this._onQualityChangeBind=this._onQualityChangeHandler.bind(this);this._onSwitchCompletedBind=this._onSwitchCompletedHandler.bind(this);this._onMetricsChangedBind=this._onMetricsChangedHandler.bind(this);this._viewer.audio.onVolumeChange.add(this._mainVolumeChangeHandler,this);this._viewer.audio.onDisable.add(this._disableSoundHandler,this);this._onQualitiesLoaded=new FORGE.EventDispatcher(this,true);if(this._config!==null)
{this.load(this._config);}
this._viewer.display.register(this);this._notifyReady();this._applyPending(false);};FORGE.VideoDash.prototype._parseConfig=function(config)
{if(config!==null)
{if(FORGE.Utils.isTypeOf(config,"string")===true)
{config=[config];}
else if(FORGE.Utils.isTypeOf(config,"VideoQuality")===true)
{config=[config];}
if(FORGE.Utils.isArrayOf(config,"string")===true)
{this._manifestUrl=config[0];}
else if(FORGE.Utils.isArrayOf(config,"VideoQuality")===true)
{this._manifestUrl=config[0].url;}}
return this._manifestUrl;};FORGE.VideoDash.prototype._notifyResize=function(data)
{var video=this._video;if(video!==null&&video.element!==null)
{video.element.setAttribute("width",this.pixelWidth);video.element.setAttribute("height",this.pixelHeight);}
FORGE.DisplayObject.prototype._notifyResize.call(this,data);};FORGE.VideoDash.prototype._createVideoObject=function()
{var video={index:0,element:null,buffer:null,played:null};this._video=video;return video;};FORGE.VideoDash.prototype._createVideoTag=function()
{var element=document.createElement("video");element.setAttribute("webkit-playsinline","webkit-playsinline");element.setAttribute("width",this.pixelWidth);element.setAttribute("height",this.pixelHeight);element.volume=0;element.crossOrigin="anonymous";element.id="FORGE-VideoDash-"+this._uid;var buffer=new FORGE.VideoTimeRanges(element,"buffered");var played=new FORGE.VideoTimeRanges(element,"played");var video=this._video;video.element=element;video.buffer=buffer;video.played=played;video.lastTimeStamp=0;return video;};FORGE.VideoDash.prototype._getCurrentVideoElementProperty=function(property,defaultReturnValue)
{var video=this._video;if(video!==null&&video.element!==null)
{return video.element[property];}
return defaultReturnValue;};FORGE.VideoDash.prototype._initDashMediaPlayer=function()
{this._dashMediaPlayer=dashjs.MediaPlayer().create();this._dashMediaPlayer.getDebug().setLogToBrowserConsole(false);this._dashMediaPlayer.initialize();this._dashMediaPlayer.setAutoPlay(false);this._dashMediaPlayer.setScheduleWhilePaused(true);this._dashMediaPlayer.setFastSwitchEnabled(true);this._dashMediaPlayer.attachView(this._video.element);this._dashMediaPlayer.attachSource(this._manifestUrl);if(this._dashMediaPlayer.isReady()===true)
{this._installEvents();this._addVideoToDom();}
if(this._qualityMode==="")
{this._setQualityMode(this._defaultQualityMode);}};FORGE.VideoDash.prototype._addVideoToDom=function()
{this._dom.innerHTML="";this._dom.appendChild(this._video.element);};FORGE.VideoDash.prototype._installEvents=function()
{this._dashMediaPlayer.on(dashjs.MediaPlayer.events["CAN_PLAY"],this._onCanPlayBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["ERROR"],this._onErrorBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["PLAYBACK_ENDED"],this._onEndedBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["PLAYBACK_ERROR"],this._onErrorBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["PLAYBACK_METADATA_LOADED"],this._onLoadedMetaDataBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["PLAYBACK_PAUSED"],this._onPauseBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["PLAYBACK_PROGRESS"],this._onProgressBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["PLAYBACK_SEEKING"],this._onSeekingBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["PLAYBACK_SEEKED"],this._onSeekedBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["PLAYBACK_STARTED"],this._onPlayBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["PLAYBACK_TIME_UPDATED"],this._onTimeUpdateBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["QUALITY_CHANGE_RENDERED"],this._onQualityChangeBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["QUALITY_CHANGE_REQUESTED"],this._onQualityRequestBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["STREAM_INITIALIZED"],this._onLoadStartBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["PLAYBACK_PLAYING"],this._onPlayingBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["BUFFER_EMPTY"],this._onStalledBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["PERIOD_SWITCH_COMPLETED"],this._onSwitchCompletedBind);this._dashMediaPlayer.on(dashjs.MediaPlayer.events["METRIC_CHANGED"],this._onMetricsChangedBind);this._video.element.addEventListener("loadeddata",this._onLoadedDataBind,false);this._video.element.addEventListener("durationchange",this._onDurationChangeBind,false);this._video.element.addEventListener("canplaythrough",this._onCanPlayThroughBind,false);this._video.element.addEventListener("volumechange",this._onVolumeChangeBind,false);};FORGE.VideoDash.prototype._uninstallEvents=function()
{this._dashMediaPlayer.off(dashjs.MediaPlayer.events["CAN_PLAY"],this._onCanPlayBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["ERROR"],this._onErrorBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["PLAYBACK_ENDED"],this._onEndedBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["PLAYBACK_ERROR"],this._onErrorBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["PLAYBACK_METADATA_LOADED"],this._onLoadedMetaDataBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["PLAYBACK_PAUSED"],this._onPauseBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["PLAYBACK_PROGRESS"],this._onProgressBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["PLAYBACK_SEEKING"],this._onSeekingBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["PLAYBACK_SEEKED"],this._onSeekedBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["PLAYBACK_STARTED"],this._onPlayBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["PLAYBACK_TIME_UPDATED"],this._onTimeUpdateBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["QUALITY_CHANGE_RENDERED"],this._onQualityChangeBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["QUALITY_CHANGE_REQUESTED"],this._onQualityRequestBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["STREAM_INITIALIZED"],this._onLoadStartBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["PLAYBACK_PLAYING"],this._onPlayingBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["BUFFER_EMPTY"],this._onStalledBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["PERIOD_SWITCH_COMPLETED"],this._onSwitchCompletedBind);this._dashMediaPlayer.off(dashjs.MediaPlayer.events["METRIC_CHANGED"],this._onMetricsChangedBind);this._video.element.removeEventListener("loadeddata",this._onLoadedDataBind,false);this._video.element.removeEventListener("durationchange",this._onDurationChangeBind,false);this._video.element.removeEventListener("canplaythrough",this._onCanPlayThroughBind,false);this._video.element.removeEventListener("volumechange",this._onVolumeChangeBind,false);};FORGE.VideoDash.prototype._onLoadStartHandler=function(event)
{var element=this._video.element;this.log("onLoadStart [readyState: "+element.readyState+"]");this._createQualitiesFromBitrateInfoList(this._manifestUrl,this._dashMediaPlayer.getBitrateInfoListFor(FORGE.VideoDash.mediaType.VIDEO));if(this._onLoadStart!==null)
{this._onLoadStart.dispatch(event);}};FORGE.VideoDash.prototype._createQualitiesFromBitrateInfoList=function(url,bitrates,checkURL)
{var qualities=[];var quality;if(bitrates!==null)
{for(var i=0,ii=bitrates.length;i<ii;i++)
{if(checkURL===true&&FORGE.URL.isValid(url)===false)
{throw"FORGE.Video: URL "+url+" is invalid";}
quality=new FORGE.VideoQuality(url);quality.id=bitrates[i].qualityIndex;quality.bitrate=bitrates[i].bitrate;quality.width=bitrates[i].width;quality.height=bitrates[i].height;qualities.push(quality);}
this._qualities=(qualities);if(this._onQualitiesLoaded!==null)
{this._onQualitiesLoaded.dispatch(qualities);}}
else
{this.destroy();}
return qualities;};FORGE.VideoDash.prototype._indexOfQuality=function(quality)
{var q;for(var i=0,ii=this._qualities.length;i<ii;i++)
{q=this._qualities[i];if(q===quality)
{return i;}}
return-1;};FORGE.VideoDash.prototype._onSwitchCompletedHandler=function(event)
{var element=this._video.element;this.log("_onSwitchCompleted [readyState: "+element.readyState+"]");this._streamInfo=(event.toStreamInfo);};FORGE.VideoDash.prototype._onMetricsChangedHandler=function(event)
{var element=this._video.element;this.log("_onMetricsChangedHandler [readyState: "+element.readyState+"]");if(this._playerVideoMetrics===null)
{this._playerVideoMetrics=this._dashMediaPlayer.getMetricsFor(FORGE.VideoDash.mediaType.VIDEO);}
if(this._playerAudioMetrics===null)
{this._playerAudioMetrics=this._dashMediaPlayer.getMetricsFor(FORGE.VideoDash.mediaType.AUDIO);}
if(this._dashMetrics===null)
{this._dashMetrics=this._dashMediaPlayer.getDashMetrics();}
if(this._onMetricsChanged!==null)
{var metrics;if(event.mediaType===FORGE.VideoDash.mediaType.VIDEO)
{metrics=this._getMetricsFor(FORGE.VideoDash.mediaType.VIDEO,this._playerVideoMetrics,this._dashMetrics);if(metrics)
{this._monitoring={"videoBitrate":metrics.bitrate,"videoIndex":metrics.index,"videoPendingIndex":metrics.pendingIndex,"videoMaxIndex":metrics.maxIndex,"videoBufferLength":metrics.bufferLength,"videoDroppedFrames":metrics.droppedFrames};}}
if(event.mediaType===FORGE.VideoDash.mediaType.AUDIO)
{metrics=this._getMetricsFor(FORGE.VideoDash.mediaType.AUDIO,this._playerAudioMetrics,this._dashMetrics);if(metrics)
{this._monitoring={"audioBitrate":metrics.bitrate,"audioIndex":metrics.index,"audioPendingIndex":metrics.pendingIndex,"audioMaxIndex":metrics.maxIndex,"audioBufferLength":metrics.bufferLength,"audioDroppedFrames":metrics.droppedFrames};}}
this._onMetricsChanged.dispatch(event);}};FORGE.VideoDash.prototype._getMetricsFor=function(type,metrics,dashMetrics)
{if(metrics!==null&&dashMetrics!==null)
{var streamIndex=this._streamInfo.index;var repSwitch,maxIndex,bufferLevel,droppedFramesMetrics,bitrate,index,pendingIndex,bufferLength,droppedFrames;repSwitch=(dashMetrics.getCurrentRepresentationSwitch(metrics));if(repSwitch!==null)
{bitrate=Math.round(dashMetrics.getBandwidthForRepresentation(repSwitch.to,streamIndex)/ 1000);}
if(isNaN(bitrate)||bitrate===undefined)
{bitrate=0;}
if(type===FORGE.VideoDash.mediaType.VIDEO)
{index=this._currentVideoIndex+1;pendingIndex=this._currentVideoPendingIndex+1;}
else if(type===FORGE.VideoDash.mediaType.AUDIO)
{index=this._currentAudioIndex+1;pendingIndex=this._currentAudioPendingIndex+1;}
if(isNaN(index)||index===undefined)
{index=0;}
if(isNaN(pendingIndex)||pendingIndex===undefined)
{pendingIndex=0;}
maxIndex=dashMetrics.getMaxIndexForBufferType(type,streamIndex);if(isNaN(maxIndex)||maxIndex===undefined)
{maxIndex=0;}
bufferLevel=dashMetrics.getCurrentBufferLevel(metrics);if(bufferLevel!==null)
{bufferLength=bufferLevel.toPrecision(5);}
if(isNaN(bufferLength)||bufferLength===undefined)
{bufferLength=0;}
droppedFramesMetrics=(dashMetrics.getCurrentDroppedFrames(metrics));if(droppedFramesMetrics!==null)
{droppedFrames=droppedFramesMetrics.droppedFrames;}
var result={bitrate:bitrate,index:index,pendingIndex:pendingIndex,maxIndex:maxIndex,bufferLength:bufferLength,droppedFrames:droppedFrames};return result;}
return null;};FORGE.VideoDash.prototype._onQualityChangeHandler=function(event)
{var element=this._video.element;this.log("onQualityChange [readyState: "+element.readyState+"]");if(event.mediaType===FORGE.VideoDash.mediaType.AUDIO)
{this._currentAudioIndex=event.newQuality;this._currentAudioPendingIndex=event.newQuality;}
else if(event.mediaType===FORGE.VideoDash.mediaType.VIDEO)
{this._currentVideoIndex=event.newQuality;this._currentVideoPendingIndex=event.newQuality;if(this._onQualityChange!==null)
{this._onQualityChange.dispatch(this._currentVideoPendingIndex);}}};FORGE.VideoDash.prototype._onQualityRequestHandler=function(event)
{var element=this._video.element;this.log("onQualityRequest [readyState: "+element.readyState+"]");if(event.mediaType===FORGE.VideoDash.mediaType.AUDIO)
{this._currentAudioIndex=event.oldQuality;this._currentAudioPendingIndex=event.newQuality;}
else if(event.mediaType===FORGE.VideoDash.mediaType.VIDEO)
{this._currentVideoIndex=event.oldQuality;this._currentVideoPendingIndex=event.newQuality;if(this._onQualityRequest!==null)
{this._onQualityRequest.dispatch(this._currentVideoPendingIndex);}}};FORGE.VideoDash.prototype._onDurationChangeHandler=function(event)
{var element=this._video.element;this.log("onDurationChange [readyState: "+element.readyState+"]");
//@firefox - FF disptach durationchange twice on readystate HAVE_METADATA (1) & HAVE_ENOUGH_DATA (4)if(this._onDurationChange!==null&&element.readyState===HTMLMediaElement.HAVE_METADATA)
{this._onDurationChange.dispatch(event);}};FORGE.VideoDash.prototype._onLoadedMetaDataHandler=function(event)
{var element=this._video.element;this.log("onLoadedMetaData [readyState: "+element.readyState+"]");this._metaDataLoaded=true;if(this._onLoadedMetaData!==null)
{this._onLoadedMetaData.dispatch(event);}};FORGE.VideoDash.prototype._onLoadedDataHandler=function(event)
{var element=this._video.element;this.log("onLoadedData [readyState: "+element.readyState+"]");if(this._onLoadedData!==null)
{this._onLoadedData.dispatch(event);}};FORGE.VideoDash.prototype._onProgressHandler=function(event)
{if(this._onProgress!==null)
{this._onProgress.dispatch(event);}};FORGE.VideoDash.prototype._onCanPlayHandler=function(event)
{var element=this._video.element;this.log("onCanPlay [readyState: "+element.readyState+"]");this._canPlay=true;if(this._onCanPlay!==null)
{this._onCanPlay.dispatch(event);}};FORGE.VideoDash.prototype._onCanPlayThroughHandler=function(event)
{var element=this._video.element;this.log("onCanPlayThrough [readyState: "+element.readyState+"]");this._canPlay=true;if(this._onCanPlayThrough!==null)
{this._onCanPlayThrough.dispatch(event);}};FORGE.VideoDash.prototype._onPlayHandler=function(event)
{var element=this._video.element;this.log("onPlay [readyState: "+element.readyState+"]");if(this._onPlay!==null)
{this._onPlay.dispatch(event);}};FORGE.VideoDash.prototype._onPauseHandler=function(event)
{var element=this._video.element;this.log("onPause [readyState: "+element.readyState+"]");this._playing=false;if(this._onPause!==null)
{this._onPause.dispatch(event);}};FORGE.VideoDash.prototype._onTimeUpdateHandler=function(event)
{if(this._onTimeUpdate!==null)
{this._onTimeUpdate.dispatch(event);}};FORGE.VideoDash.prototype._onVolumeChangeHandler=function(event)
{var element=this._video.element;this.log("onVolumeChange [readyState: "+element.readyState+"]");if(this._onVolumeChange!==null&&element.readyState!==HTMLMediaElement.HAVE_NOTHING)
{this._onVolumeChange.dispatch(event);}};FORGE.VideoDash.prototype._onSeekingHandler=function(event)
{var element=this._video.element;this.log("onSeeking [readyState: "+element.readyState+"]");this._canPlay=false;if(this._onSeeking!==null)
{this._onSeeking.dispatch(event);}};FORGE.VideoDash.prototype._onSeekedHandler=function(event)
{var element=this._video.element;this.log("onSeeked [readyState: "+element.readyState+"]");this._canPlay=false;if(this._onSeeked!==null)
{this._onSeeked.dispatch(event);}};FORGE.VideoDash.prototype._onEndedHandler=function(event)
{var element=this._video.element;this.log("onEnded [readyState: "+element.readyState+"]");this._playing=false;this._endCount++;if(this._loop===true)
{this.play();}
if(this._onEnded!==null)
{this._onEnded.dispatch(event);}};FORGE.VideoDash.prototype._onErrorHandler=function(event)
{var element=this._video.element;this.log("onError [readyState: "+element.readyState+"]");if(this._onError!==null)
{this._onError.dispatch(event);}};FORGE.VideoDash.prototype._onStalledHandler=function(event)
{var element=this._video.element;this.log("onStalled [readyState: "+element.readyState+"]");if(this._onStalled!==null)
{this._onStalled.dispatch(event);}};FORGE.VideoDash.prototype._onPlayingHandler=function(event)
{var element=this._video.element;this.log("onPlaying [readyState: "+element.readyState+"]");if(this._onPlaying!==null)
{this._onPlaying.dispatch(event);}};FORGE.VideoDash.prototype._destroyVideo=function()
{this.log("_destroyVideo");if(this._dashMediaPlayer!==null&&this._dashMediaPlayer.isReady()===true)
{this._uninstallEvents();this._dashMediaPlayer.pause();this._dashMediaPlayer.reset();}
var video=this._video;var element=video.element;if(typeof element!=="undefined"&&element!==null)
{if(element.parentNode===this._dom)
{this._dom.removeChild(element);}}
element=null;video.element=null;if(video.buffer!==null)
{video.buffer.destroy();video.buffer=null;}
if(video.played!==null)
{video.played.destroy();video.played=null;}
video=null;};FORGE.VideoDash.prototype._disableSoundHandler=function()
{var v=this._video;if(v!==null&&v.element!==null&&this._viewer.audio.enabled===false)
{this._dashMediaPlayer.setVolume(0);}};FORGE.VideoDash.prototype._mainVolumeChangeHandler=function()
{this._updateVolume();};FORGE.VideoDash.prototype._updateVolume=function()
{var v=this._video;if(v!==null&&v.element!==null&&this._viewer.audio.enabled===true)
{this._dashMediaPlayer.setVolume(this._volume*this._viewer.audio.volume);if(this._muted===true)
{this._dashMediaPlayer.setMute(true);}
else
{this._dashMediaPlayer.setMute(false);}}};FORGE.VideoDash.prototype._setRequestQuality=function(index)
{this._currentVideoPendingIndex=index;if(this._streamInfo!==null&&this._dashMediaPlayer!==null&&this._dashMediaPlayer.isReady()===true&&this._dashMetrics!==null)
{var streamIndex=this._streamInfo.index;var maxVideoIndex=this._dashMetrics.getMaxIndexForBufferType(FORGE.VideoDash.mediaType.VIDEO,streamIndex);var maxAudioIndex=this._dashMetrics.getMaxIndexForBufferType(FORGE.VideoDash.mediaType.AUDIO,streamIndex);var newVideoIndex=index,newAudioIndex=index;if(newVideoIndex>=maxVideoIndex)
{newVideoIndex=maxVideoIndex-1;}
if(newVideoIndex<0)
{newVideoIndex=0;}
if(newAudioIndex>=maxAudioIndex)
{newAudioIndex=maxAudioIndex-1;}
if(newAudioIndex<0)
{newAudioIndex=0;}
this._dashMediaPlayer.setQualityFor(FORGE.VideoDash.mediaType.VIDEO,newVideoIndex);this._dashMediaPlayer.setQualityFor(FORGE.VideoDash.mediaType.AUDIO,newAudioIndex);}
this._updateVolume();};FORGE.VideoDash.prototype._setQualityMode=function(mode)
{if(this._qualityMode===mode)
{return;}
if(mode===FORGE.VideoQualityMode.AUTO||mode===FORGE.VideoQualityMode.MANUAL)
{this._qualityMode=mode;if(this._dashMediaPlayer!==null&&this._dashMediaPlayer.isReady()===true)
{if(mode===FORGE.VideoQualityMode.MANUAL)
{this._dashMediaPlayer.setAutoSwitchQualityFor(FORGE.VideoDash.mediaType.VIDEO,false);this._dashMediaPlayer.setAutoSwitchQualityFor(FORGE.VideoDash.mediaType.AUDIO,false);}
else
{this._dashMediaPlayer.setAutoSwitchQualityFor(FORGE.VideoDash.mediaType.VIDEO,true);this._dashMediaPlayer.setAutoSwitchQualityFor(FORGE.VideoDash.mediaType.AUDIO,true);}}
if(this._onQualityModeChange!==null)
{this._onQualityModeChange.dispatch(this._qualityMode);}}};FORGE.VideoDash.prototype.load=function(config)
{this._parseConfig(config);if(this._manifestUrl==="")
{throw"FORGE.VideoDash : Can't create video with no manifest!";}
this._createVideoObject();this._createVideoTag();this._initDashMediaPlayer();};FORGE.VideoDash.prototype.play=function(time,loop)
{FORGE.VideoBase.prototype.play.call(this,time,loop);if(this._dashMediaPlayer!==null&&this._dashMediaPlayer.isReady()===true)
{this._dashMediaPlayer.play();this._playing=true;this._paused=false;this._playCount++;}};FORGE.VideoDash.prototype.pause=function()
{if(this._dashMediaPlayer!==null&&this._dashMediaPlayer.isReady()===true)
{this._dashMediaPlayer.pause();this._playing=false;this._paused=true;}};FORGE.VideoDash.prototype.stop=function()
{if(this._dashMediaPlayer!==null&&this._dashMediaPlayer.isReady()===true)
{this._dashMediaPlayer.pause();this._dashMediaPlayer.seek(0);this._video.element.currentTime=0;this._playing=false;this._paused=true;}};FORGE.VideoDash.prototype.togglePlayback=function()
{if(this._playing===true||this._viewer.audio.enabled===false)
{this.pause();}
else
{this.play();}};FORGE.VideoDash.prototype.mute=function()
{if(this._muted===true||this._viewer.audio.enabled===false)
{return;}
this._muted=true;this._mutedVolume=this._volume;this._volume=0;this._updateVolume();if(this._onMute!==null)
{this._onMute.dispatch();}};FORGE.VideoDash.prototype.unmute=function(volume)
{if(this._muted===false)
{return;}
var v=(typeof volume==="number")?volume:this._mutedVolume;this._muted=false;this._volume=FORGE.Math.clamp(v,0,1);this._updateVolume();if(this._onUnmute!==null)
{this._onUnmute.dispatch();}};FORGE.VideoDash.prototype.enableBufferOccupancyABR=function(bool)
{if(this._dashMediaPlayer!==null&&this._dashMediaPlayer.isReady()===true)
{this._dashMediaPlayer.enableBufferOccupancyABR(bool);}};FORGE.VideoDash.prototype.destroy=function()
{this._destroyVideo();if(this._onLoadStart!==null)
{this._onLoadStart.destroy();this._onLoadStart=null;}
if(this._onLoadedMetaData!==null)
{this._onLoadedMetaData.destroy();this._onLoadedMetaData=null;}
if(this._onLoadedData!==null)
{this._onLoadedData.destroy();this._onLoadedData=null;}
if(this._onProgress!==null)
{this._onProgress.destroy();this._onProgress=null;}
if(this._onDurationChange!==null)
{this._onDurationChange.destroy();this._onDurationChange=null;}
if(this._onCanPlay!==null)
{this._onCanPlay.destroy();this._onCanPlay=null;}
if(this._onCanPlayThrough!==null)
{this._onCanPlayThrough.destroy();this._onCanPlayThrough=null;}
if(this._onPlay!==null)
{this._onPlay.destroy();this._onPlay=null;}
if(this._onPause!==null)
{this._onPause.destroy();this._onPause=null;}
if(this._onTimeUpdate!==null)
{this._onTimeUpdate.destroy();this._onTimeUpdate=null;}
if(this._onCurrentTimeChange!==null)
{this._onCurrentTimeChange.destroy();this._onCurrentTimeChange=null;}
if(this._onVolumeChange!==null)
{this._onVolumeChange.destroy();this._onVolumeChange=null;}
if(this._onSeeking!==null)
{this._onSeeking.destroy();this._onSeeking=null;}
if(this._onSeeked!==null)
{this._onSeeked.destroy();this._onSeeked=null;}
if(this._onEnded!==null)
{this._onEnded.destroy();this._onEnded=null;}
if(this._onError!==null)
{this._onError.destroy();this._onError=null;}
if(this._onStalled!==null)
{this._onStalled.destroy();this._onStalled=null;}
if(this._onPlaying!==null)
{this._onPlaying.destroy();this._onPlaying=null;}
if(this._onQualityRequest!==null)
{this._onQualityRequest.destroy();this._onQualityRequest=null;}
if(this._onQualityChange!==null)
{this._onQualityChange.destroy();this._onQualityChange=null;}
if(this._onQualityAbort!==null)
{this._onQualityAbort.destroy();this._onQualityAbort=null;}
if(this._onQualitiesLoaded!==null)
{this._onQualitiesLoaded.destroy();this._onQualitiesLoaded=null;}
if(this._onQualityModeChange!==null)
{this._onQualityModeChange.destroy();this._onQualityModeChange=null;}
if(this._onMetricsChanged!==null)
{this._onMetricsChanged.destroy();this._onMetricsChanged=null;}
this._onLoadStartBind=null;this._onLoadedMetaDataBind=null;this._onLoadedDataBind=null;this._onProgressBind=null;this._onDurationChangeBind=null;this._onCanPlayBind=null;this._onCanPlayThroughBind=null;this._onPlayBind=null;this._onPauseBind=null;this._onTimeUpdateBind=null;this._onVolumeChangeBind=null;this._onSeekingBind=null;this._onSeekedBind=null;this._onEndedBind=null;this._onErrorBind=null;this._onPlayingBind=null;this._onStalledBind=null;this._onQualityRequestBind=null;this._onQualityChangeBind=null;this._onMetricsChangedBind=null;this._viewer.audio.onVolumeChange.remove(this._mainVolumeChangeHandler,this);this._viewer.audio.onDisable.remove(this._disableSoundHandler,this);this._dashMediaPlayer=null;this._playerVideoMetrics=null;this._playerAudioMetrics=null;this._dashMetrics=null;this._monitoring=null;this._streamInfo=null;this._config=null;this._qualities=null;this._video=null;FORGE.VideoBase.prototype.destroy.call(this);};Object.defineProperty(FORGE.VideoDash.prototype,"monitoring",{get:function()
{return this._monitoring;}});Object.defineProperty(FORGE.VideoDash.prototype,"quality",{get:function()
{return this._qualities[this._currentVideoIndex];},set:function(value)
{if(typeof value==="number"&&value>=0&&value<this._qualities.length)
{this._setQualityMode(FORGE.VideoQualityMode.MANUAL);this._setRequestQuality(value);}
else if(FORGE.Utils.isTypeOf(value,"VideoQuality")===true)
{var i=this._indexOfQuality(value);if(i!==-1)
{this._setQualityMode(FORGE.VideoQualityMode.MANUAL);this._setRequestQuality(i);}
else
{throw"Unknown quality";}}
else
{throw"Video quality "+value+" out of bounds";}}});Object.defineProperty(FORGE.VideoDash.prototype,"qualityMode",{get:function()
{return this._qualityMode;},set:function(value)
{if(value===FORGE.VideoQualityMode.AUTO||value===FORGE.VideoQualityMode.MANUAL)
{this._setQualityMode(value);}}});Object.defineProperty(FORGE.VideoDash.prototype,"qualities",{get:function()
{return this._qualities;}});Object.defineProperty(FORGE.VideoDash.prototype,"requestIndex",{get:function()
{return this._currentVideoPendingIndex;}});Object.defineProperty(FORGE.VideoDash.prototype,"currentIndex",{get:function()
{return this._currentVideoIndex;}});Object.defineProperty(FORGE.VideoDash.prototype,"video",{get:function()
{return this._video;}});Object.defineProperty(FORGE.VideoDash.prototype,"element",{get:function()
{var video=this._video;if(video!==null&&video.element!==null)
{return video.element;}
return null;}});Object.defineProperty(FORGE.VideoDash.prototype,"buffer",{get:function()
{var video=this._video;if(video!==null&&video.buffer!==null)
{return video.buffer;}
return null;}});Object.defineProperty(FORGE.VideoDash.prototype,"played",{get:function()
{var video=this._video;if(video!==null&&video.played!==null)
{return video.played;}
return null;}});Object.defineProperty(FORGE.VideoDash.prototype,"originalWidth",{get:function()
{return this._getCurrentVideoElementProperty("videoWidth",0);}});Object.defineProperty(FORGE.VideoDash.prototype,"originalHeight",{get:function()
{return this._getCurrentVideoElementProperty("videoHeight",0);}});Object.defineProperty(FORGE.VideoDash.prototype,"currentTime",{get:function()
{return this._dashMediaPlayer.time();},set:function(value)
{if(typeof value==="number")
{this._dashMediaPlayer.seek(value);if(this._onCurrentTimeChange!==null)
{this._onCurrentTimeChange.dispatch(value);}}}});Object.defineProperty(FORGE.VideoDash.prototype,"currentTimeMS",{get:function()
{return this.currentTime*1000;},set:function(value)
{this.currentTime=value / 1000;}});Object.defineProperty(FORGE.VideoDash.prototype,"remainingTime",{get:function()
{return this.duration-this.currentTime;}});Object.defineProperty(FORGE.VideoDash.prototype,"duration",{get:function()
{return this._dashMediaPlayer.duration();}});Object.defineProperty(FORGE.VideoDash.prototype,"durationMS",{get:function()
{return Math.round(this.duration*1000);}});Object.defineProperty(FORGE.VideoDash.prototype,"metaDataLoaded",{get:function()
{return this._metaDataLoaded;}});Object.defineProperty(FORGE.VideoDash.prototype,"loop",{get:function()
{return this._loop;},set:function(value)
{if(typeof value==="boolean")
{this._loop=value;}}});Object.defineProperty(FORGE.VideoDash.prototype,"volume",{get:function()
{return this._volume;},set:function(value)
{if(typeof value==="number")
{this._volume=FORGE.Math.clamp(value,0,1);this._muted=false;this._updateVolume();}}});Object.defineProperty(FORGE.VideoDash.prototype,"muted",{get:function()
{return this._muted;},set:function(value)
{if(Boolean(value)===true)
{this.mute();}
else
{this.unmute();}}});Object.defineProperty(FORGE.VideoDash.prototype,"onLoadStart",{get:function()
{if(this._onLoadStart===null)
{this._onLoadStart=new FORGE.EventDispatcher(this);}
return this._onLoadStart;}});Object.defineProperty(FORGE.VideoDash.prototype,"onLoadedMetaData",{get:function()
{if(this._onLoadedMetaData===null)
{this._onLoadedMetaData=new FORGE.EventDispatcher(this);}
return this._onLoadedMetaData;}});Object.defineProperty(FORGE.VideoDash.prototype,"onLoadedData",{get:function()
{if(this._onLoadedData===null)
{this._onLoadedData=new FORGE.EventDispatcher(this);}
return this._onLoadedData;}});Object.defineProperty(FORGE.VideoDash.prototype,"onProgress",{get:function()
{if(this._onProgress===null)
{this._onProgress=new FORGE.EventDispatcher(this);}
return this._onProgress;}});Object.defineProperty(FORGE.VideoDash.prototype,"onDurationChange",{get:function()
{if(this._onDurationChange===null)
{this._onDurationChange=new FORGE.EventDispatcher(this);}
return this._onDurationChange;}});Object.defineProperty(FORGE.VideoDash.prototype,"onCanPlay",{get:function()
{if(this._onCanPlay===null)
{this._onCanPlay=new FORGE.EventDispatcher(this);}
return this._onCanPlay;}});Object.defineProperty(FORGE.VideoDash.prototype,"onCanPlayThrough",{get:function()
{if(this._onCanPlayThrough===null)
{this._onCanPlayThrough=new FORGE.EventDispatcher(this);}
return this._onCanPlayThrough;}});Object.defineProperty(FORGE.VideoDash.prototype,"onPlay",{get:function()
{if(this._onPlay===null)
{this._onPlay=new FORGE.EventDispatcher(this);}
return this._onPlay;}});Object.defineProperty(FORGE.VideoDash.prototype,"onPause",{get:function()
{if(this._onPause===null)
{this._onPause=new FORGE.EventDispatcher(this);}
return this._onPause;}});Object.defineProperty(FORGE.VideoDash.prototype,"onTimeUpdate",{get:function()
{if(this._onTimeUpdate===null)
{this._onTimeUpdate=new FORGE.EventDispatcher(this);}
return this._onTimeUpdate;}});Object.defineProperty(FORGE.VideoDash.prototype,"onCurrentTimeChange",{get:function()
{if(this._onCurrentTimeChange===null)
{this._onCurrentTimeChange=new FORGE.EventDispatcher(this);}
return this._onCurrentTimeChange;}});Object.defineProperty(FORGE.VideoDash.prototype,"onVolumeChange",{get:function()
{if(this._onVolumeChange===null)
{this._onVolumeChange=new FORGE.EventDispatcher(this);}
return this._onVolumeChange;}});Object.defineProperty(FORGE.VideoDash.prototype,"onSeeking",{get:function()
{if(this._onSeeking===null)
{this._onSeeking=new FORGE.EventDispatcher(this);}
return this._onSeeking;}});Object.defineProperty(FORGE.VideoDash.prototype,"onSeeked",{get:function()
{if(this._onSeeked===null)
{this._onSeeked=new FORGE.EventDispatcher(this);}
return this._onSeeked;}});Object.defineProperty(FORGE.VideoDash.prototype,"onEnded",{get:function()
{if(this._onEnded===null)
{this._onEnded=new FORGE.EventDispatcher(this);}
return this._onEnded;}});Object.defineProperty(FORGE.VideoDash.prototype,"onError",{get:function()
{if(this._onError===null)
{this._onError=new FORGE.EventDispatcher(this);}
return this._onError;}});Object.defineProperty(FORGE.VideoDash.prototype,"onStalled",{get:function()
{if(this._onStalled===null)
{this._onStalled=new FORGE.EventDispatcher(this);}
return this._onStalled;}});Object.defineProperty(FORGE.VideoDash.prototype,"onWaiting",{get:function()
{return this.onStalled;}});Object.defineProperty(FORGE.VideoDash.prototype,"onPlaying",{get:function()
{if(this._onPlaying===null)
{this._onPlaying=new FORGE.EventDispatcher(this);}
return this._onPlaying;}});Object.defineProperty(FORGE.VideoDash.prototype,"onQualityRequest",{get:function()
{if(this._onQualityRequest===null)
{this._onQualityRequest=new FORGE.EventDispatcher(this);}
return this._onQualityRequest;}});Object.defineProperty(FORGE.VideoDash.prototype,"onQualityChange",{get:function()
{if(this._onQualityChange===null)
{this._onQualityChange=new FORGE.EventDispatcher(this);}
return this._onQualityChange;}});Object.defineProperty(FORGE.VideoDash.prototype,"onQualityAbort",{get:function()
{if(this._onQualityAbort===null)
{this._onQualityAbort=new FORGE.EventDispatcher(this);}
return this._onQualityAbort;}});Object.defineProperty(FORGE.VideoDash.prototype,"onMetricsChanged",{get:function()
{if(this._onMetricsChanged===null)
{this._onMetricsChanged=new FORGE.EventDispatcher(this);}
return this._onMetricsChanged;}});Object.defineProperty(FORGE.VideoDash.prototype,"onQualitiesLoaded",{get:function()
{if(this._onQualitiesLoaded===null)
{this._onQualitiesLoaded=new FORGE.EventDispatcher(this,true);}
return this._onQualitiesLoaded;}});Object.defineProperty(FORGE.VideoDash.prototype,"onQualityModeChange",{get:function()
{if(this._onQualityModeChange===null)
{this._onQualityModeChange=new FORGE.EventDispatcher(this);}
return this._onQualityModeChange;}});FORGE.VideoTimeRanges=function(element,property)
{this._element=element;this._property=property;FORGE.BaseObject.call(this,"VideoTimeRanges");};FORGE.VideoTimeRanges.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.VideoTimeRanges.prototype.constructor=FORGE.VideoTimeRanges;FORGE.VideoTimeRanges.prototype.getTimeRange=function(index)
{var ranges=this._element[this._property];if(this.length===0)
{this.warn("No available range for now");return null;}
if(index>this.length-1)
{this.warn("Time range out of bounds, returning the last available range");return this.getTimeRange(this.length-1);}
else if(index<0)
{this.warn("Time range out of bounds, returning the first available range");return this.getTimeRange(0);}
var _start=ranges.start(index);var _end=ranges.end(index);return{start:_start,end:_end};};FORGE.VideoTimeRanges.prototype.isInRanges=function(time,duration)
{if(typeof duration!=="number")
{duration=0;}
var ranges=this._element[this._property];var start,end;var i=this.length;while(i--)
{start=ranges.start(i);end=ranges.end(i);if(time>=start&&(time+duration)<=end)
{return true;}}
return false;};Object.defineProperty(FORGE.VideoTimeRanges.prototype,"length",{get:function()
{return this._element[this._property].length;}});FORGE.VideoQuality=function(url)
{this._id="";this._url=url||"";this._mimeType="";this._name="";this._framerate=0;this._bitrate=0;this._width=0;this._height=0;this._speed=1;FORGE.BaseObject.call(this,"VideoQuality");};FORGE.VideoQuality.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.VideoQuality.prototype.constructor=FORGE.VideoQuality;FORGE.VideoQuality.mimeTypeFromURL=function(url)
{var types=["mp4","webm","ogg"];var parsedURL=FORGE.URL.parse(url);if(parsedURL.extension!==""&&types.indexOf(parsedURL.extension)!==-1)
{return"video/"+parsedURL.extension;}
var streamingTypes=["mpd"];if(parsedURL.extension!==""&&streamingTypes.indexOf(parsedURL.extension)!==-1)
{return"application/dash+xml";}
return"";};Object.defineProperty(FORGE.VideoQuality.prototype,"id",{get:function()
{return this._id;},set:function(value)
{if(typeof value==="number"||typeof value==="string")
{this._id=value;}}});Object.defineProperty(FORGE.VideoQuality.prototype,"url",{get:function()
{return this._url;},set:function(value)
{if(typeof value==="string")
{this._url=value;}}});Object.defineProperty(FORGE.VideoQuality.prototype,"mimeType",{get:function()
{if(this._mimeType!=="")
{return this._mimeType;}
else if(this._url!=="")
{this._mimeType=FORGE.VideoQuality.mimeTypeFromURL(this._url);}
return this._mimeType;}});Object.defineProperty(FORGE.VideoQuality.prototype,"name",{get:function()
{return this._name;},set:function(value)
{if(typeof value==="string")
{this._name=value;}}});Object.defineProperty(FORGE.VideoQuality.prototype,"framerate",{get:function()
{return this._framerate;}});Object.defineProperty(FORGE.VideoQuality.prototype,"bitrate",{get:function()
{return this._bitrate;},set:function(value)
{if(typeof value==="number")
{this._bitrate=value;}}});Object.defineProperty(FORGE.VideoQuality.prototype,"width",{get:function()
{return this._width;},set:function(value)
{if(typeof value==="number")
{this._width=value;}}});Object.defineProperty(FORGE.VideoQuality.prototype,"height",{get:function()
{return this._height;},set:function(value)
{if(typeof value==="number")
{this._height=value;}}});Object.defineProperty(FORGE.VideoQuality.prototype,"speed",{get:function()
{return this._speed;}});FORGE.VideoQualityMode={};FORGE.VideoQualityMode.AUTO="auto";FORGE.VideoQualityMode.MANUAL="manual";FORGE.VideoFormat={};FORGE.VideoFormat.DASH="dash";FORGE.VideoFormat.HTML5="html5";FORGE.VideoFormat.UNKNOWN="unknown";FORGE.Cache=function(viewer)
{this._viewer=viewer;this._json=new FORGE.Map();this._xml=new FORGE.Map();this._images=new FORGE.Map();this._sounds=new FORGE.Map();this._keyIncrement=0;};FORGE.Cache._PREFIX="FORGE-cache";FORGE.Cache.types={};FORGE.Cache.types.JSON="json";FORGE.Cache.types.XML="xml";FORGE.Cache.types.IMAGE="image";FORGE.Cache.types.SOUND="sound";FORGE.Cache.reserved={};FORGE.Cache.reserved.COMMON=["forge","forgejs","FORGE"];FORGE.Cache.reserved.JSON=["forge.story.config"].concat(FORGE.Cache.reserved.COMMON);FORGE.Cache.reserved.XML=[].concat(FORGE.Cache.reserved.COMMON);FORGE.Cache.reserved.IMAGE=[].concat(FORGE.Cache.reserved.COMMON);FORGE.Cache.reserved.SOUND=[].concat(FORGE.Cache.reserved.COMMON);FORGE.Cache.prototype._getCacheByType=function(type)
{var cache=null;switch(type)
{case FORGE.Cache.types.JSON:cache=this._json;break;case FORGE.Cache.types.XML:cache=this._xml;break;case FORGE.Cache.types.IMAGE:cache=this._images;break;case FORGE.Cache.types.SOUND:cache=this._sounds;break;}
return cache;};FORGE.Cache.prototype._getReservedByType=function(type)
{var reserved=null;switch(type)
{case FORGE.Cache.types.JSON:reserved=FORGE.Cache.reserved.JSON;break;case FORGE.Cache.types.XML:reserved=FORGE.Cache.reserved.XML;break;case FORGE.Cache.types.IMAGE:reserved=FORGE.Cache.reserved.IMAGE;break;case FORGE.Cache.types.SOUND:reserved=FORGE.Cache.reserved.SOUND;break;}
return reserved;};FORGE.Cache.prototype._generateKey=function(type,prefix)
{var cache=this._getCacheByType(type);var p=prefix||FORGE.Cache._PREFIX;var key=p+"-"+this._keyIncrement;this._keyIncrement++;if(cache.has(key)===false&&this._isReserved(type,key)===false)
{return key;}
else
{return this._generateKey(type,prefix);}};FORGE.Cache.prototype._isReservedAlreadyUsed=function(type,key)
{var cache=this._getCacheByType(type);var reserved=this._getReservedByType(type);return(this._isReserved(type,key)===true&&cache.has(key)===true);};FORGE.Cache.prototype._isReserved=function(type,key)
{var reserved=this._getReservedByType(type);if(reserved!==null)
{return reserved.indexOf(key.toLowerCase())!==-1;}
return false;};FORGE.Cache.prototype.has=function(type,key)
{var cache=this._getCacheByType(type);if(cache!==null)
{return cache.has(key);}
return false;};FORGE.Cache.prototype.get=function(type,key)
{if(this.has(type,key)===true)
{var cache=this._getCacheByType(type);if(cache!==null)
{return cache.get(key);}}
return null;};FORGE.Cache.prototype.add=function(type,key,file)
{if(typeof key!=="string"||key===""||this._isReservedAlreadyUsed(type,key)===true)
{key=this._generateKey(type,type+"-cache");}
if(this.has(key,type)===false)
{var cache=this._getCacheByType(type);if(cache!==null)
{cache.set(key,file);return true;}}
return false;};FORGE.Cache.prototype.remove=function(type,key)
{if(this.has(type,key)===true)
{var cache=this._getCacheByType(type);if(cache!==null)
{cache.delete(key);return true;}}
return false;};FORGE.Cache.prototype.destroy=function()
{this._viewer=null;this._json=null;this._images=null;this._sounds=null;};FORGE.File=function()
{};FORGE.File.prototype.key="";FORGE.File.prototype.url="";FORGE.File.prototype.type="";FORGE.File.prototype.data=null;FORGE.File.prototype.xhr=null;FORGE.File.prototype.loading=false;FORGE.File.prototype.loaded=false;FORGE.File.prototype.error="";FORGE.File.prototype.constructor=FORGE.File;FORGE.Loader=function(viewer)
{this._viewer=viewer;FORGE.BaseObject.call(this,"Loader");};FORGE.Loader.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Loader.prototype.constructor=FORGE.Loader;FORGE.Loader.prototype.json=function(key,url,onCompleteCallback,onCompleteContext,onErrorCallback,onErrorContext)
{var file=new FORGE.File();file.type="json";file.key=key;file.url=url;file.onCompleteCallback=onCompleteCallback;file.onCompleteContext=onCompleteContext;file.onErrorCallback=onErrorCallback;file.onErrorContext=onErrorContext;this._xhr(file,"text",this._jsonLoadComplete,this._jsonLoadError);};FORGE.Loader.prototype._jsonLoadComplete=function(file,xhr)
{if(xhr.responseText)
{file.data=Object(JSON.parse(xhr.responseText));if(this._viewer.cache.has(FORGE.Cache.types.JSON,file.key)===false)
{this._viewer.cache.add(FORGE.Cache.types.JSON,file.key,file);}
else
{this.log("FORGE.Loader.json : JSON file already exists");}
if(typeof file.onCompleteCallback==="function"&&file.onCompleteContext!==null)
{var callback=file.onCompleteCallback;var context=file.onCompleteContext;file.onCompleteCallback=null;file.onCompleteContext=null;file.onErrorCallback=null;file.onErrorContext=null;callback.call(context,file);}}
else
{throw"FORGE.Loader.json : JSON file empty ?";}};FORGE.Loader.prototype._jsonLoadError=function(file,xhr)
{if(xhr.responseText)
{if(typeof file.onErrorCallback==="function"&&file.onErrorContext!==null)
{var callback=file.onErrorCallback;var context=file.onErrorContext;file.onCompleteCallback=null;file.onCompleteContext=null;file.onErrorCallback=null;file.onErrorContext=null;callback.call(context,file);}}
else
{throw"FORGE.Loader.json : JSON file empty ?";}};FORGE.Loader.prototype.xml=function(key,url,onCompleteCallback,onCompleteContext,onErrorCallback,onErrorContext)
{var file=new FORGE.File();file.type="xml";file.key=key;file.url=url;file.onCompleteCallback=onCompleteCallback;file.onCompleteContext=onCompleteContext;file.onErrorCallback=onCompleteCallback;file.onErrorContext=onErrorContext;this._xhr(file,"document",this._xmlLoadComplete,this._xmlLoadError);};FORGE.Loader.prototype._xmlLoadComplete=function(file,xhr)
{if(xhr.responseXML)
{file.data=xhr.responseXML;if(this._viewer.cache.has(FORGE.Cache.types.XML,file.key)===false)
{this._viewer.cache.add(FORGE.Cache.types.XML,file.key,file);}
else
{this.log("FORGE.Loader.xml : XML file already exists");}
if(typeof file.onCompleteCallback==="function"&&file.onCompleteContext!==null)
{var callback=file.onCompleteCallback;var context=file.onCompleteContext;file.onCompleteCallback=null;file.onCompleteContext=null;file.onErrorCallback=null;file.onErrorContext=null;callback.call(context,file);}}
else
{throw"FORGE.Loader.xml : XML file empty ?";}};FORGE.Loader.prototype._xmlLoadError=function(file,xhr)
{if(xhr.responseXML)
{if(typeof file.onErrorCallback==="function"&&file.onErrorContext!==null)
{var callback=file.onErrorCallback;var context=file.onErrorContext;file.onCompleteCallback=null;file.onCompleteContext=null;file.onErrorCallback=null;file.onErrorContext=null;callback.call(context,file);}}
else
{throw"FORGE.Loader.xml : JSON file empty ?";}};FORGE.Loader.prototype.sound=function(key,url,onCompleteCallback,onCompleteContext,forceAudioTag)
{var file=new FORGE.File();file.type="sound";file.key=key;file.url=url;file.onCompleteCallback=onCompleteCallback;file.onCompleteContext=onCompleteContext;if(this._viewer.audio.useWebAudio===true&&forceAudioTag!==true)
{this._xhr(file,"arraybuffer",this._soundLoadComplete);}
else if(this._viewer.audio.useAudioTag===true||forceAudioTag===true)
{this._loadAudioTag(file,this._soundLoadComplete,this);}};FORGE.Loader.prototype._soundLoadComplete=function(file,xhr)
{if(this._viewer.audio.useWebAudio===true&&typeof xhr!=="undefined")
{file.data=xhr.response;}
this._viewer.cache.add(FORGE.Cache.types.SOUND,file.key,file);if(typeof file.onCompleteCallback==="function"&&file.onCompleteContext!==null)
{file.onCompleteCallback.call(file.onCompleteContext,file);}};FORGE.Loader.prototype._loadAudioTag=function(file,callback,context)
{var audioElement=new Audio();var canPlayEvent="canplay";var errorEvent="error";var canPlayCallback=function()
{this.removeEventListener(canPlayEvent,canPlayCallback);this.removeEventListener(errorEvent,errorCallback);if(typeof callback==="function")
{file.data=this;callback.call(context,file);}};var errorCallback=function()
{this.removeEventListener(canPlayEvent,canPlayCallback);this.removeEventListener(errorEvent,errorCallback);throw"FORGE.Loader : Could not load HTMLMediaElement "+file.url;};audioElement.addEventListener(canPlayEvent,canPlayCallback);audioElement.addEventListener(errorEvent,errorCallback);audioElement.preload="auto";audioElement.crossOrigin="anonymous";audioElement.src=file.url;audioElement.load();};FORGE.Loader.prototype._xhr=function(file,type,onComplete,onError,onProgress)
{file.loading=true;var xhr=new XMLHttpRequest();xhr.open("GET",file.url,true);xhr.responseType=type;var length=0;xhr.onreadystatechange=function()
{if(xhr.readyState===XMLHttpRequest.DONE)
{if(xhr.status===200||xhr.status===0)
{this.onreadystatechange=null;if(typeof onComplete==="function")
{file.loaded=true;onComplete.call(this,file,xhr);}}
else
{throw"FORGE.Loader._xhr : Could not load "+file.url;}}
else if(xhr.readyState===XMLHttpRequest.LOADING)
{if(onProgress!==null&&typeof onProgress!=="undefined")
{if(length===0)
{length=xhr.getResponseHeader("Content-Length");}
if(typeof onProgress!=="undefined")
{onProgress({"total":length,"loaded":xhr.responseText.length});}}}
else if(xhr.readyState===XMLHttpRequest.HEADERS_RECEIVED)
{if(onProgress!==null&&typeof onProgress!=="undefined")
{length=xhr.getResponseHeader("Content-Length");}}}.bind(this);xhr.onerror=function()
{if(typeof onError==="function")
{onError.call(this,file,xhr);}}.bind(this);xhr.send();};FORGE.Loader.prototype.image=function(key,url,success,error,context)
{var file=new FORGE.File();file.type="image";file.key=key;file.url=url;file.data=new Image();file.data.crossOrigin="anonymous";file.data.onload=function()
{file.data.onload=null;file.data.onerror=null;file.loading=false;file.loaded=true;this._viewer.cache.add(FORGE.Cache.types.IMAGE,file.key,file);if(typeof success==="function")
{success.call(context,file);}}.bind(this);file.data.onerror=function()
{file.data.onload=null;file.data.onerror=null;if(typeof error==="function")
{error.call(context,file);}
else
{throw"ERROR : FORGE.Loader.image, failed to load image key : "+key+" at url "+url;}};file.data.src=file.url;file.loading=true;};FORGE.Loader.prototype.script=function(url,callback,context)
{var head=document.getElementsByTagName("head")[0];var scripts=head.getElementsByTagName("script");for(var i=0,ii=scripts.length;i<ii;i++)
{if(scripts[i].src===url)
{this.warn("Attempt to load an already loaded script!");callback.call(context);return;}}
var script=document.createElement("script");script.type="text/javascript";script.onload=function()
{script.onload=null;callback.call(context);};script.src=url;head.appendChild(script);};FORGE.Loader.prototype.css=function(url,callback,context)
{var css=document.createElement("link");css.type="text/css";css.rel="stylesheet";if(typeof callback!=="undefined"&&typeof context!=="undefined")
{css.onload=function()
{css.onload=null;callback.call(context);};}
css.href=url;document.getElementsByTagName("head")[0].appendChild(css);};FORGE.Loader.prototype.destroy=function()
{this._viewer=null;FORGE.BaseObject.prototype.destroy.call(this);};FORGE.Clock=function(viewer)
{this._viewer=viewer;this._time=0;this._rafTime=0;this._started=0;this._timers=null;FORGE.BaseObject.call(this,"Clock");this._boot();};FORGE.Clock.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Clock.prototype.constructor=FORGE.Clock;FORGE.Clock.prototype._boot=function()
{this._started=Date.now();this._time=Date.now();this._timers=[];};FORGE.Clock.prototype._indexOfTimer=function(timer)
{if(this._timers===null)
{return-1;}
var t;for(var i=0,ii=this._timers.length;i<ii;i++)
{t=this._timers[i];if(t===timer)
{return i;}}
return-1;};FORGE.Clock.prototype._onTimerDestroy=function(event)
{var timer=(event.emitter);var index=this._indexOfTimer(timer);if(index!==-1)
{this._timers.splice(index,1);}};FORGE.Clock.prototype.create=function(autoDestroy)
{var timer=new FORGE.Timer(this._viewer,autoDestroy);return this.add(timer);};FORGE.Clock.prototype.add=function(timer)
{this._timers.push(timer);timer.onDestroy.add(this._onTimerDestroy,this);return timer;};FORGE.Clock.prototype.update=function(time)
{this._rafTime=time;this._time=Date.now();for(var i=0,ii=this._timers.length;i<ii;i++)
{this._timers[i].update(this._time);}};FORGE.Clock.prototype.destroy=function()
{this._viewer=null;var i=this._timers.length;while(i--)
{this._timers[i].destroy();}
this._timers=null;};Object.defineProperty(FORGE.Clock.prototype,"time",{get:function()
{return this._time;}});FORGE.Timer=function(viewer,autoDestroy)
{this._viewer=viewer;this._autoDestroy=(typeof autoDestroy!=="undefined")?autoDestroy:true;this._startTime=0;this._running=false;this._pauseTime=0;this._pauseTotal=0;this._paused=false;this._now=0;this._tick=0;this._expired=false;this._events=null;this._onStart=null;this._onPause=null;this._onResume=null;this._onStop=null;this._onComplete=null;FORGE.BaseObject.call(this,"Timer");this._boot();};FORGE.Timer.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Timer.prototype.constructor=FORGE.Timer;FORGE.Timer.prototype._boot=function()
{this._events=[];this._now=Date.now();};FORGE.Timer.prototype._updateEvents=function(baseTime)
{for(var i=0;i<this._events.length;i++)
{var event=this._events[i];if(event.pendingDelete===false)
{var t=event.tick-baseTime;if(t<0)
{t=0;}
event.tick=this._now+t;}}
var d=this._nextTick-baseTime;if(d<0)
{this._nextTick=this._now;}
else
{this._nextTick=this._now+d;}};FORGE.Timer.prototype._sort=function()
{if(this._events.length>0)
{this._events.sort(this._sortCompare);this._nextTick=this._events[0].tick;}};FORGE.Timer.prototype._sortCompare=function(a,b)
{if(a.tick<b.tick)
{return-1;}
else if(a.tick>b.tick)
{return 1;}
return 0;};FORGE.Timer.prototype._clearPendingEvents=function()
{var count=this._events.length;while(count--)
{if(this._events[count].pendingDelete===true)
{this._events.splice(count,1);}}};FORGE.Timer.prototype.create=function(delay,loop,repeatCount,callback,callbackContext,args)
{delay=Math.round(delay);var tick=delay;if(this._now===0)
{tick+=this._viewer.clock.time;}
else
{tick+=this._now;}
var event=new FORGE.TimerEvent(this,delay,tick,repeatCount,loop,callback,callbackContext,args);this._events.push(event);this._sort();this._expired=false;return event;};FORGE.Timer.prototype.add=function(delay,callback,callbackContext,args)
{return this.create(delay,false,0,callback,callbackContext,Array.prototype.splice.call(arguments,3));};FORGE.Timer.prototype.repeat=function(delay,repeatCount,callback,callbackContext)
{return this.create(delay,false,repeatCount,callback,callbackContext,Array.prototype.splice.call(arguments,4));};FORGE.Timer.prototype.loop=function(delay,callback,callbackContext)
{return this.create(delay,true,0,callback,callbackContext,Array.prototype.splice.call(arguments,3));};FORGE.Timer.prototype.remove=function(event)
{for(var i=0;i<this._events.length;i++)
{if(this._events[i]===event)
{this._events[i].pendingDelete=true;return true;}}
return false;};FORGE.Timer.prototype.start=function()
{if(this._running===true)
{return;}
this._startTime=this._viewer.clock.time;this._running=true;var event;for(var i=0;i<this._events.length;i++)
{event=this._events[i];event.tick=event.delay+this._startTime;}
if(this._onStart!==null)
{this._onStart.dispatch();}};FORGE.Timer.prototype.stop=function(clear)
{this._running=false;if(clear!==false)
{this._events.length=0;}
if(this._onStop!==null)
{this._onStop.dispatch();}};FORGE.Timer.prototype.pause=function()
{if(this._running===false||this._paused===true)
{return;}
this._pauseTime=this._viewer.clock.time;this._paused=true;if(this._onPause!==null)
{this._onPause.dispatch();}};FORGE.Timer.prototype.resume=function()
{if(this._paused===false)
{return;}
var now=this._viewer.clock.time;this._pauseTotal+=now-this._now;this._now=now;this._updateEvents(this._pauseTime);this._paused=false;if(this._onResume!==null)
{this._onResume.dispatch();}};FORGE.Timer.prototype.update=function(time)
{if(this._paused===true)
{return;}
var elapsed=time-this._now;this._now=time;if(elapsed>1000)
{this._updateEvents(time-elapsed);}
this._clearPendingEvents();var count=this._events.length;var i=0;var markedForDeletion=0;if(this._running===true&&this._now>=this._nextTick&&count>0)
{var event;while(i<count&&this._running===true)
{event=this._events[i];if(this._now>=event.tick&&event.pendingDelete===false)
{var newTick=(this._now+event.delay)-(this._now-event.tick);if(newTick<0)
{newTick=this._now+event.delay;}
if(event.loop===true)
{event.tick=newTick;event.execute();}
else if(event.repeatCount>0)
{event.repeatCount--;event.tick=newTick;event.execute();}
else
{markedForDeletion++;event.pendingDelete=true;event.execute();}
i++;}
else
{break;}}
if(this._events.length>markedForDeletion)
{this._sort();}
else
{this._expired=true;this._running=false;if(this._onComplete!==null)
{this._onComplete.dispatch();}}}
if(this._expired&&this._autoDestroy)
{this.destroy();}};FORGE.Timer.prototype.destroy=function()
{this._running=false;this._events=[];FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Timer.prototype,"autoDestroy",{get:function()
{return this._autoDestroy;}});Object.defineProperty(FORGE.Timer.prototype,"running",{get:function()
{return this._running;}});Object.defineProperty(FORGE.Timer.prototype,"paused",{get:function()
{return this._paused;}});Object.defineProperty(FORGE.Timer.prototype,"next",{get:function()
{return this._nextTick;}});Object.defineProperty(FORGE.Timer.prototype,"duration",{get:function()
{if(this._running&&this._nextTick>this._now)
{return this._nextTick-this._now;}
else
{return 0;}}});Object.defineProperty(FORGE.Timer.prototype,"length",{get:function()
{return this._events.length;}});Object.defineProperty(FORGE.Timer.prototype,"ms",{get:function()
{if(this._running)
{return this._now-this._startTime-this._pauseTotal;}
else
{return 0;}}});Object.defineProperty(FORGE.Timer.prototype,"seconds",{get:function()
{if(this._running)
{return this.ms*0.001;}
else
{return 0;}}});Object.defineProperty(FORGE.Timer.prototype,"onStart",{get:function()
{if(this._onStart===null)
{this._onStart=new FORGE.EventDispatcher(this);}
return this._onStart;}});Object.defineProperty(FORGE.Timer.prototype,"onPause",{get:function()
{if(this._onPause===null)
{this._onPause=new FORGE.EventDispatcher(this);}
return this._onPause;}});Object.defineProperty(FORGE.Timer.prototype,"onResume",{get:function()
{if(this._onResume===null)
{this._onResume=new FORGE.EventDispatcher(this);}
return this._onResume;}});Object.defineProperty(FORGE.Timer.prototype,"onStop",{get:function()
{if(this._onStop===null)
{this._onStop=new FORGE.EventDispatcher(this);}
return this._onStop;}});Object.defineProperty(FORGE.Timer.prototype,"onComplete",{get:function()
{if(this._onComplete===null)
{this._onComplete=new FORGE.EventDispatcher(this);}
return this._onComplete;}});FORGE.TimerEvent=function(timer,delay,tick,repeatCount,loop,callback,callbackContext,args)
{this.timer=timer;this.delay=delay;this.tick=tick;this.repeatCount=repeatCount-1;this.loop=loop;this._callback=callback;this._callbackContext=callbackContext;this._args=args;this.pendingDelete=false;};FORGE.TimerEvent.prototype.constructor=FORGE.TimerEvent;FORGE.TimerEvent.prototype.execute=function()
{this._callback.apply(this._callbackContext,this._args);};FORGE.TweenManager=function(viewer)
{this._viewer=viewer;this._tweens=[];FORGE.BaseObject.call(this,"TweenManager");};FORGE.TweenManager.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.TweenManager.prototype.constructor=FORGE.TweenManager;FORGE.TweenManager.prototype._indexOfTween=function(tween)
{for(var i=0,ii=this._tweens.length;i<ii;i++)
{if(tween===this._tweens[i])
{return i;}}
return-1;};FORGE.TweenManager.prototype._tweenDestroyHandler=function(event)
{var tween=(event.emitter);this.remove(tween);};FORGE.TweenManager.prototype.add=function(tween)
{this._tweens.push(tween);tween.onDestroy.addOnce(this._tweenDestroyHandler,this);};FORGE.TweenManager.prototype.remove=function(tween)
{var index=this._indexOfTween(tween);if(index!==-1)
{this._tweens.splice(index,1);}};FORGE.TweenManager.prototype.update=function()
{for(var i=0,ii=this._tweens.length;i<ii;i++)
{this._tweens[i].update();}};FORGE.TweenManager.prototype.destroy=function()
{var count=this._tweens.length;while(count--)
{this._tweens[count].destroy();}
this._tweens=null;this._viewer=null;FORGE.BaseObject.prototype.destroy.call(this);};FORGE.Tween=function(viewer,object)
{this._viewer=viewer;this._object=object;this._properties=null;this._easing=FORGE.Easing.LINEAR;this._startTime=null;this._started=false;this._stopped=false;this._complete=false;this._onStart=null;this._onProgress=null;this._onComplete=null;this._onStop=null;FORGE.BaseObject.call(this,"Tween");};FORGE.Tween.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.Tween.prototype.constructor=FORGE.Tween;FORGE.Tween.prototype.to=function(values,duration,easing)
{if(this._properties===null)
{this._properties={};}
for(var p in values)
{this._properties[p]={name:p,min:null,max:values[p],duration:typeof duration==="number"?duration:0,easing:typeof easing==="function"?easing:null,started:false,complete:false,startTime:null};}
return this;};FORGE.Tween.prototype.start=function()
{this._startTime=Date.now();this._started=true;this._stopped=false;this._complete=false;var prop;for(var p in this._properties)
{prop=this._properties[p];prop.min=this._object[p];prop.max=typeof this._properties[p].max==="string"?prop.min+parseInt(this._properties[p].max,10):prop.max;prop.started=true;prop.startTime=this._startTime;}
if(this._onStart!==null)
{this._onStart.dispatch();}
return this;};FORGE.Tween.prototype.stop=function()
{this._stopped=true;if(this._onStop!==null)
{this._onStop.dispatch();}
return this;};FORGE.Tween.prototype.update=function()
{if(this._started===false||this._complete===true||this._stopped===true)
{return;}
var prop;var notCompleteCount=0;for(var p in this._properties)
{prop=this._properties[p];if(prop.complete===false)
{this._updateProperty(prop);}
if(prop.complete===false)
{notCompleteCount++;}}
if(this._onProgress!==null)
{this._onProgress.dispatch();}
if(notCompleteCount===0)
{this._complete=true;if(this._onComplete!==null)
{this._onComplete.dispatch();}}};FORGE.Tween.prototype._updateProperty=function(prop)
{var currentTime=Date.now();var deltaTime=currentTime-prop.startTime;prop.complete=deltaTime>=prop.duration;if(prop.complete===false)
{var easing=prop.easing!==null?prop.easing:this._easing;var y=easing(deltaTime / prop.duration);this._object[prop.name]=(y*(prop.max-prop.min)+prop.min);}
else
{this._object[prop.name]=prop.max;}};FORGE.Tween.prototype.destroy=function()
{this.stop();this._viewer=null;this._object=null;this._properties=null;this._easing=null;if(this._onStart!==null)
{this._onStart.destroy();this._onStart=null;}
if(this._onProgress!==null)
{this._onProgress.destroy();this._onProgress=null;}
if(this._onComplete!==null)
{this._onComplete.destroy();this._onComplete=null;}
if(this._onStop!==null)
{this._onStop.destroy();this._onStop=null;}
FORGE.BaseObject.prototype.destroy.call(this);};Object.defineProperty(FORGE.Tween.prototype,"easing",{get:function()
{return this._easing;},set:function(easing)
{if(typeof easing==="string")
{switch(easing)
{case FORGE.EasingType.LINEAR:this._easing=FORGE.Easing.LINEAR;break;case FORGE.EasingType.SINE_IN:this._easing=FORGE.Easing.SINE_IN;break;case FORGE.EasingType.SINE_IN_OUT:this._easing=FORGE.Easing.SINE_IN_OUT;break;case FORGE.EasingType.SINE_OUT:this._easing=FORGE.Easing.SINE_OUT;break;case FORGE.EasingType.QUAD_IN:this._easing=FORGE.Easing.QUAD_IN;break;case FORGE.EasingType.QUAD_IN_OUT:this._easing=FORGE.Easing.QUAD_IN_OUT;break;case FORGE.EasingType.QUAD_OUT:this._easing=FORGE.Easing.QUAD_OUT;break;case FORGE.EasingType.CUBIC_IN:this._easing=FORGE.Easing.CUBIC_IN;break;case FORGE.EasingType.CUBIC_IN_OUT:this._easing=FORGE.Easing.CUBIC_IN_OUT;break;case FORGE.EasingType.CUBIC_OUT:this._easing=FORGE.Easing.CUBIC_OUT;break;case FORGE.EasingType.BOUNCE_OUT:this._easing=FORGE.Easing.BOUNCE_OUT;break;case FORGE.EasingType.BOUNCE_IN:this._easing=FORGE.Easing.BOUNCE_IN;break;default:this._easing=FORGE.Easing.LINEAR;break;}}
else if(typeof easing==="function")
{this._easing=easing;}}});Object.defineProperty(FORGE.Tween.prototype,"complete",{get:function()
{return this._complete;}});Object.defineProperty(FORGE.Tween.prototype,"onStart",{get:function()
{if(this._onStart===null)
{this._onStart=new FORGE.EventDispatcher(this);}
return this._onStart;}});Object.defineProperty(FORGE.Tween.prototype,"onProgress",{get:function()
{if(this._onProgress===null)
{this._onProgress=new FORGE.EventDispatcher(this);}
return this._onProgress;}});Object.defineProperty(FORGE.Tween.prototype,"onComplete",{get:function()
{if(this._onComplete===null)
{this._onComplete=new FORGE.EventDispatcher(this);}
return this._onComplete;}});Object.defineProperty(FORGE.Tween.prototype,"onStop",{get:function()
{if(this._onStop===null)
{this._onStop=new FORGE.EventDispatcher(this);}
return this._onStop;}});FORGE.Easing={};FORGE.Easing.LINEAR=function(t)
{var y=t;return FORGE.Math.clamp(y,0,1);};FORGE.Easing.SINE_IN=function(t)
{var y=1.0+Math.sin(Math.PI / 2.0*(t-1.0));return FORGE.Math.clamp(y,0,1);};FORGE.Easing.SINE_IN_OUT=function(t)
{var y=0.5*(1.0+Math.sin(Math.PI / 2.0*(2.0*t-1.0)));return FORGE.Math.clamp(y,0,1);};FORGE.Easing.SINE_OUT=function(t)
{var y=Math.sin(Math.PI / 2.0*t);return FORGE.Math.clamp(y,0,1);};FORGE.Easing.QUAD_IN=function(t)
{var y=t*t;return FORGE.Math.clamp(y,0,1);};FORGE.Easing.QUAD_IN_OUT=function(t)
{var y;if(t<0.5)
{y=2.0*t*t;}
else
{y=1.0-2.0*(t-1.0)*(t-1.0);}
return FORGE.Math.clamp(y,0,1);};FORGE.Easing.QUAD_OUT=function(t)
{t=1.0-t;var y=1.0-(t*t);return FORGE.Math.clamp(y,0,1);};FORGE.Easing.CUBIC_IN=function(t)
{var y=t*t*t;return FORGE.Math.clamp(y,0,1);};FORGE.Easing.CUBIC_IN_OUT=function(t)
{var y;if(t<0.5)
{y=4.0*t*t*t;}
else
{y=1.0+4.0*(t-1.0)*(t-1.0)*(t-1.0);}
return FORGE.Math.clamp(y,0,1);};FORGE.Easing.CUBIC_OUT=function(t)
{t=1.0-t;var y=1.0-(t*t*t);return FORGE.Math.clamp(y,0,1);};FORGE.Easing.BOUNCE_OUT=function(t)
{var y;if(t<1 / 2.75)
{y=7.5625*t*t;}
else if(t<2/2.75)
{t=t-(1.5 / 2.75);y=7.5625*t*t+0.75;}
else if(t<2.5 / 2.75)
{t=t-2.25 / 2.75;y=7.5625*t*t+0.9375;}
else
{t=t-2.625 / 2.75;y=7.5625*t*t+0.984375;}
return FORGE.Math.clamp(y,0,1);};FORGE.Easing.BOUNCE_IN=function(t)
{return 1.0-FORGE.Easing.BOUNCE_OUT(1-t);};FORGE.EasingType={};FORGE.EasingType.LINEAR="linear";FORGE.EasingType.SINE_IN="easeInSine";FORGE.EasingType.SINE_IN_OUT="easeInOutSine";FORGE.EasingType.SINE_OUT="easeOutSine";FORGE.EasingType.QUAD_IN="easeInQuad";FORGE.EasingType.QUAD_IN_OUT="easeInOutQuad";FORGE.EasingType.QUAD_OUT="easeOutQuad";FORGE.EasingType.CUBIC_IN="easeInCubic";FORGE.EasingType.CUBIC_IN_OUT="easeInOutCubic";FORGE.EasingType.CUBIC_OUT="easeOutCubic";FORGE.EasingType.BOUNCE_OUT="easeOutBounce";FORGE.EasingType.BOUNCE_IN="easeInBounce";FORGE.Utils={};FORGE.Utils.parseSizeString=function(value)
{var result={value:null,unit:null};if(typeof value==="string")
{var size=parseInt(value,10);if(isNaN(size)===false)
{result.value=size;}
if(value.indexOf("%")>-1)
{result.unit="%";}
else if(value.indexOf("px")>-1)
{result.unit="px";}}
return result;};FORGE.Utils.extendSimpleObject=function(from,to,recursive)
{var result={};from=(typeof from!=="undefined")?from:{};to=(typeof to!=="undefined")?to:{};for(var f in from)
{if(from.hasOwnProperty(f))
{result[f]=from[f];}}
for(var t in to)
{if(to.hasOwnProperty(t))
{if(recursive!==false&&from!==null&&to[t]!==null&&typeof to[t]!=="undefined"&&to[t].constructor===Object)
{result[t]=FORGE.Utils.extendSimpleObject(from[t],to[t],true);}
else
{result[t]=to[t];}}}
return result;};FORGE.Utils.extendMultipleObjects=function(obj)
{var objects=arguments;var res={};for(var i=0,ii=objects.length;i<ii;i++)
{res=FORGE.Utils.extendSimpleObject(res,objects[i],true);}
return res;};FORGE.Utils.compareObjects=function(objectA,objectB)
{if(typeof(objectA)!==typeof(objectB))
{return false;}
if(typeof(objectA)==="function")
{return objectA.toString()===objectB.toString();}
if(objectA instanceof Object&&objectB instanceof Object)
{if(FORGE.Utils.countProperties(objectA)!==FORGE.Utils.countProperties(objectB))
{return false;}
for(var prop in objectA)
{if(FORGE.Utils.compareObjects(objectA[prop],objectB[prop])===false)
{return false;}}
return true;}
else
{return objectA===objectB;}};FORGE.Utils.countProperties=function(object)
{var count=0;for(var i in object)
{if(object.hasOwnProperty(i))
{count++;}}
return count;};FORGE.Utils.clone=function(obj)
{if(!(obj instanceof Object))
{return obj;}
var clone=new obj.constructor();for(var prop in obj)
{clone[prop]=FORGE.Utils.clone(obj[prop]);}
return clone;};FORGE.Utils.isDisplayObject=function(object)
{if(object!==null&&typeof object==="object")
{if(typeof object.className==="string"&&FORGE.DisplayList.types.indexOf(object.className)!==-1)
{return true;}}
return false;};FORGE.Utils.isTypeOf=function(object,className)
{if(typeof className==="string"&&((object!==null&&typeof object==="object"&&typeof object.className==="string"&&object.className.toLowerCase()===className.toLowerCase())||typeof object===className.toLowerCase()))
{return true;}
else if(Array.isArray(className)===true&&FORGE.Utils.isArrayOf(className,"string")===true)
{for(var i=0,ii=className.length;i<ii;i++)
{if(FORGE.Utils.isTypeOf(object,className[i])===true)
{return true;}}}
return false;};FORGE.Utils.isTypeOfRecursive=function(object,path,className)
{var pathArray=path.split(".");var currentObject=object;for(var i=0,ii=pathArray.length;i<ii;i++)
{currentObject=currentObject[pathArray[i]];if(i===ii-1)
{return FORGE.Utils.isTypeOf(currentObject,className);}
else if(typeof currentObject==="undefined")
{return false;}}
return false;};FORGE.Utils.isArrayOf=function(array,className)
{if(typeof array==="object"&&Array.isArray(array)===true)
{for(var i=0,ii=array.length;i<ii;i++)
{if(FORGE.Utils.isTypeOf(array[i],className)===false)
{return false;}}
return true;}
return false;};FORGE.Utils.getObjectProperty=function(object,property,defaultReturnValue)
{var pathArray=property.split(".");var currentObject=object;for(var i=0,ii=pathArray.length;i<ii;i++)
{currentObject=currentObject[pathArray[i]];if(typeof currentObject==="undefined")
{return defaultReturnValue;}
if(i===ii-1)
{return currentObject;}}
return defaultReturnValue;};FORGE.Utils.sortArrayByProperty=function(array,property)
{var props=property.split(".");var len=props.length;array.sort(function(a,b)
{var i=0;while(i<len)
{a=a[props[i]];b=b[props[i]];i++;}
if(a<b)
{return-1;}
else if(a>b)
{return 1;}
else
{return 0;}});return array;};FORGE.Utils.randomize=function(array)
{var res=array.slice();var temp,j;for(var i=res.length-1;i>0;i--)
{j=~~(Math.random()*(i+1));temp=res[i];res[i]=res[j];res[j]=temp;}
return res;};FORGE.Utils.leftFill=function(string,fillCharacter,length)
{var str=String(string);while(str.length<length)
{str=fillCharacter+str;}
return str;};FORGE.Utils.parseTime=function(seconds)
{var time={"input":seconds,"hours":0,"minutes":0,"seconds":0};if(typeof time.input!=="number"||isNaN(time.input))
{return time;}
time.hours=parseInt(time.input / 3600,10)%24;time.minutes=parseInt(time.input / 60,10)%60;time.seconds=parseInt(time.input%60,10);return time;};FORGE.Utils.formatTime=function(time,format)
{var parsed=FORGE.Utils.parseTime(time);var f=(typeof format==="string")?format:"H:M:S";var h=0;if(f.indexOf("H")!==-1)
{h=2;}
else if(f.indexOf("h")!==-1)
{h=1;}
var m=0;if(f.indexOf("M")!==-1)
{m=2;}
else if(f.indexOf("m")!==-1)
{m=1;}
var s=0;if(f.indexOf("S")!==-1)
{s=2;}
else if(f.indexOf("s")!==-1)
{s=1;}
var result=f.toLowerCase();if(h>0)
{result=result.replace("h",FORGE.Utils.leftFill(parsed.hours,0,h));}
if(m>0)
{result=result.replace("m",FORGE.Utils.leftFill(parsed.minutes,0,m));}
if(s>0)
{result=result.replace("s",FORGE.Utils.leftFill(parsed.seconds,0,s));}
return result;};FORGE.Utils.arrayByDifference=function(array,elements)
{return array.filter(function(i)
{return elements.indexOf(i)<0;});};FORGE.Utils.removeItemFromArrayAtIndex=function(array,idx)
{if(idx>=array.length)
{return null;}
return array.splice(idx,1);};FORGE.Utils.endsWith=function(str,suffix)
{if(typeof String.prototype.endsWith!=="function")
{return str.indexOf(suffix,str.length-suffix.length)!==-1;}
return str.endsWith(suffix);};FORGE.Utils.arrayKeys=function(array)
{if(!Array.prototype.keys)
{var len,result={},nextIndex=0;len=array.length;result.array=[];result.length=array.length;while(len>0)result.array[--len]=len;result.next=function()
{return nextIndex<array.length?{value:nextIndex++,done:false}:{done:true};};return result;}
return array.keys();};FORGE.Dom={};FORGE.Dom.getCssProperty=function(dom,property)
{var display=window.getComputedStyle(dom,null).getPropertyValue("display");dom.style.display="none";var result=window.getComputedStyle(dom,null).getPropertyValue(property);dom.style.display=display;return result;};FORGE.Dom.getUnitWidth=function(dom)
{var width=FORGE.Dom.getCssProperty(dom,"width");var unit="px";if(width.indexOf("%")>-1)
{unit="%";}
if(width.indexOf("px")>-1)
{unit="px";}
return unit;};FORGE.Dom.getValueWidth=function(dom)
{var width=parseInt(FORGE.Dom.getCssProperty(dom,"width"),10);return isNaN(width)?0:width;};FORGE.Dom.getUnitHeight=function(dom)
{var height=FORGE.Dom.getCssProperty(dom,"height");var unit="px";if(height.indexOf("%")>-1)
{unit="%";}
if(height.indexOf("px")>-1)
{unit="px";}
return unit;};FORGE.Dom.getValueHeight=function(dom)
{var height=parseInt(FORGE.Dom.getCssProperty(dom,"height"),10);return isNaN(height)?0:height;};FORGE.Dom.has=function(dom)
{return document.body.contains(dom);};FORGE.Dom.isHtmlElement=function(dom)
{return dom instanceof HTMLElement;};FORGE.Dom.getMouseEventOffset=function(event)
{var rect,offsetX,offsetY;var nativeEvents=["MouseEvent","PointerEvent","TouchEvent"];if(typeof event.srcEvent==="object"&&nativeEvents.indexOf(event.srcEvent.constructor.toString()))
{rect=event.target.getBoundingClientRect();offsetX=event.srcEvent.clientX-rect.left;offsetY=event.srcEvent.clientY-rect.top;}
else
{var target=event.currentTarget||event.target||event.srcElement;rect=target.getBoundingClientRect();offsetX=event.clientX-rect.left;offsetY=event.clientY-rect.top;}
return{x:offsetX,y:offsetY};};FORGE.Map=function()
{this._count=0;this._map={};};FORGE.Map.prototype.constructor=FORGE.Map;FORGE.Map.prototype.set=function(key,item)
{if(typeof key==="undefined")
{return undefined;}
if(this._map[key]===undefined)
{this._count++;}
this._map[key]=item;return this._count;};FORGE.Map.prototype.delete=function(key)
{if(typeof key==="undefined"||this._map[key]===undefined)
{return undefined;}
delete this._map[key];return--this._count;};FORGE.Map.prototype.get=function(key)
{return this._map[key];};FORGE.Map.prototype.keys=function()
{var keys=new FORGE.Collection();for(var key in this._map)
{keys.add(key);}
return keys.toArray();};FORGE.Map.prototype.values=function()
{var values=new FORGE.Collection();for(var key in this._map)
{values.add(this._map[key]);}
return values.toArray();};FORGE.Map.prototype.entries=function()
{var entries=new FORGE.Collection();for(var key in this._map)
{var entry=[];entry.push(key);entry.push(this._map[key]);entries.add(entry);}
return entries.toArray();};FORGE.Map.prototype.clear=function()
{for(var key in this._map)
{this.delete(key);}};FORGE.Map.prototype.has=function(key)
{return(this._count>0&&this._map[key]!==undefined);};Object.defineProperty(FORGE.Map.prototype,"size",{get:function()
{return this._count;}});FORGE.Collection=function()
{this._elements=[];};FORGE.Collection.prototype.constructor=FORGE.Collection;FORGE.Collection.prototype.add=function(item)
{this._elements.push(item);return this._elements.length;};FORGE.Collection.prototype.remove=function(item)
{for(var i=0,ii=this._elements.length;i<ii;i++)
{if(this._elements[i]===item)
{this._elements.splice(i,1);}}};FORGE.Collection.prototype.get=function(index)
{return this._elements[index];};FORGE.Collection.prototype.toArray=function()
{return this._elements;};Object.defineProperty(FORGE.Collection.prototype,"size",{get:function()
{return this._elements.length;}});FORGE.URL=function(url)
{this._url=url;this._protocol="";this._host="";this._port="";this._path="";this._query="";this._hash="";this._hashParameters=null;this._extension="";FORGE.BaseObject.call(this,"URL");};FORGE.URL.prototype=Object.create(FORGE.BaseObject.prototype);FORGE.URL.prototype.constructor=FORGE.URL;FORGE.URL.parse=function(url)
{var result=new FORGE.URL();if(typeof url!=="string")
{url=window.location.toString();}
result._url=url;var a=document.createElement("a");a.href=result._url;result._protocol=a.protocol;result._host=a.hostname;result._port=a.port;result._path=a.pathname;result._query=a.search;result._hash=a.hash;result._extension=result._path.substr(result._path.lastIndexOf(".")+1);if(result._hash!=="")
{var hash=result._hash.replace("#","");var hashComponents=hash.split("&");var parameters={};parameters.slug=hashComponents[0];for(var i=1,ii=hashComponents.length;i<ii;i++)
{var item=hashComponents[i].split("=");parameters[item[0]]=decodeURIComponent(item[1]);}
result._hashParameters=parameters;}
return result;};FORGE.URL.exists=function(url,success,fail,context)
{var xhr=new XMLHttpRequest();var exists=false;var timeout=null;xhr.onreadystatechange=function()
{if(this.readyState===XMLHttpRequest.DONE)
{if(this.status===200)
{exists=true;clearTimeout(timeout);if(typeof success==="function")
{success.call(context);}}}};xhr.onerror=function(event)
{console.log(event);};xhr.open("HEAD",url);xhr.send();var timeoutCallback=function()
{if(typeof fail==="function")
{fail.call(context);}};timeout=window.setTimeout(timeoutCallback,500);};FORGE.URL.isValid=function(url)
{var urlRegEx=/((([A-Za-z]{3,9}:(?:\/\/)?)(?:[\-;:&=\+\$,\w]+@)?[A-Za-z0-9\.\-]+|(?:www\.|[\-;:&=\+\$,\w]+@)[A-Za-z0-9\.\-]+)((?:\/[\+~%\/\.\w\-]*)?\??(?:[\-\+=&;%@\.\w]*)#?(?:[\.\!\/\\\w]*))?)/;if(!urlRegEx.test(url))
{return false;}
return true;};Object.defineProperty(FORGE.URL.prototype,"url",{get:function()
{return this._url;}});Object.defineProperty(FORGE.URL.prototype,"protocol",{get:function()
{return this._protocol;}});Object.defineProperty(FORGE.URL.prototype,"host",{get:function()
{return this._host;}});Object.defineProperty(FORGE.URL.prototype,"port",{get:function()
{return this._port;}});Object.defineProperty(FORGE.URL.prototype,"path",{get:function()
{return this._path;}});Object.defineProperty(FORGE.URL.prototype,"query",{get:function()
{return this._query;}});Object.defineProperty(FORGE.URL.prototype,"hash",{get:function()
{return this._hash;}});Object.defineProperty(FORGE.URL.prototype,"hashParameters",{get:function()
{return this._hashParameters;}});Object.defineProperty(FORGE.URL.prototype,"extension",{get:function()
{return this._extension;}});FORGE.Color={};FORGE.Color.rgbToHsl=function(r,g,b)
{r /=255;g /=255;b /=255;var max=Math.max(r,g,b),min=Math.min(r,g,b);var h,s,l=(max+min)/ 2;if(max===min)
{h=s=0;}
else
{var d=max-min;s=l>0.5?d /(2-max-min):d /(max+min);switch(max){case r:h=(g-b)/ d+(g<b?6:0);break;case g:h=(b-r)/ d+2;break;case b:h=(r-g)/ d+4;break;}
h /=6;}
return{h:h,s:s,l:l};};FORGE.Color.hslToRgb=function(h,s,l)
{var r,g,b;if(s===0)
{r=g=b=l;}
else
{var q=l<0.5?l*(1+s):l+s-l*s;var p=2*l-q;r=FORGE.Color.hueToRgb(p,q,h+1/3);g=FORGE.Color.hueToRgb(p,q,h);b=FORGE.Color.hueToRgb(p,q,h-1/3);}
return{r:r*255,g:g*255,b:b*255};};FORGE.Color.hueToRgb=function(p,q,t)
{if(t<0)
{t+=1;}
else if(t>1)
{t-=1;}
else if(t<1 / 6)
{return p+(q-p)*6*t;}
else if(t<1 / 2)
{return q;}
else if(t<2 / 3)
{return p+(q-p)*(2 / 3-t)*6;}
return p;};FORGE.Color.rgbToHsv=function(r,g,b)
{r /=255;g /=255;b /=255;var max=Math.max(r,g,b),min=Math.min(r,g,b);var h,s,v=max;var d=max-min;s=max===0?0:d / max;if(max===min)
{h=0;}
else
{switch(max)
{case r:h=(g-b)/ d+(g<b?6:0);break;case g:h=(b-r)/ d+2;break;case b:h=(r-g)/ d+4;break;}
h /=6;}
return{h:h,s:s,v:v};};FORGE.Color.hsvToRgb=function(h,s,v)
{var r,g,b;var i=Math.floor(h*6);var f=h*6-i;var p=v*(1-s);var q=v*(1-f*s);var t=v*(1-(1-f)*s);switch(i%6)
{case 0:r=v;g=t;b=p;break;case 1:r=q;g=v;b=p;break;case 2:r=p;g=v;b=t;break;case 3:r=p;g=q;b=v;break;case 4:r=t;g=p;b=v;break;case 5:r=v;g=p;b=q;break;}
return{r:r*255,g:g*255,b:b*255};};FORGE.Color.componentToHex=function(c)
{var hex=c.toString(16);return hex.length===1?"0"+hex:hex;};FORGE.Color.rgbToHex=function(r,g,b)
{return"#"+FORGE.Color.componentToHex(r)+FORGE.Color.componentToHex(g)+FORGE.Color.componentToHex(b);};FORGE.Color.fromRgbaString=function(rgbaString)
{var rgba=rgbaString.split("(")[1].split(")")[0];var components=rgba.split(",");var color={r:parseInt(components[0],10),g:parseInt(components[1],10),b:parseInt(components[2],10)};if(components.length>3)
{color.a=parseInt(components[3],10);}
return color;};FORGE.Color.hexToRgb=function(hex)
{var shorthandRegex=/^#?([a-f\d])([a-f\d])([a-f\d])$/i;hex=hex.replace(shorthandRegex,function(m,r,g,b)
{return r+r+g+g+b+b;});var result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);return result?{r:parseInt(result[1],16),g:parseInt(result[2],16),b:parseInt(result[3],16)}:null;};FORGE.Color.rgbToYcbcr=function(color)
{var c=new THREE.Vector3(color.r,color.g,color.b);var mat=new THREE.Matrix3().set(0.299,0.587,0.114,-0.169,-0.331,0.500,0.500,-0.419,-0.081);var offset=new THREE.Vector3(0,128,128);c.applyMatrix3(mat).add(offset);return{Y:c.x,Cr:c.y,Cb:c.z};};FORGE.Color.ycbcrToRgb=function(color)
{var c=new THREE.Vector3(color.Y,color.Cr,color.Cb);var offset=new THREE.Vector3(0,-128,-128);var mat=new THREE.Matrix3().set(1.000,0.000,1.400,1.000,-0.343,-0.711,1.000,1.765,0.000);c.add(offset).applyMatrix3(mat);return{r:c.x,g:c.y,b:c.z};};FORGE.Color.ycbcrRotate=function(color,angle)
{var theta=FORGE.Math.degToRad(angle);var c=Math.cos(theta),s=Math.sin(theta);return{Y:color.Y,Cb:color.Cb*c-color.Cr*s,Cr:color.Cb*s+color.Cr*c};};FORGE.Color.distance=function(a,b)
{return Math.sqrt((a.Cb-b.Cb)*(a.Cb-b.Cb)+(a.Cr-b.Cr)*(a.Cr-b.Cr));};FORGE.ColorRGBA=function(r,g,b,a)
{this.red=r;this.green=g;this.blue=b;this.alpha=a;};